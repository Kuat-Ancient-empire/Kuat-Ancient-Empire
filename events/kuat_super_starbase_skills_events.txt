namespace = kuat_starbase_skills

fleet_event = {
	id = kuat_starbase_skills.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_fleet_flag = kuat_mega_starbase_stormed_activated }
	}

	immediate = {
		set_fleet_flag = kuat_mega_starbase_stormed_activated
		if = {
			limit = { has_fleet_flag = kuat_mega_starbase_stormed_activated }
			if = {
				limit = { any_cosmic_storm = { NOR = {
					is_storm_type = kuat_support_celestic_storm
					is_storm_type = kuat_support_nexus_storm
					is_storm_type = kuat_support_particle_storm
					is_storm_type = kuat_support_shroud_storm
				} } }
				every_cosmic_storm = {
					limit = { NOR = {
						is_storm_type = kuat_support_celestic_storm
						is_storm_type = kuat_support_nexus_storm
						is_storm_type = kuat_support_particle_storm
						is_storm_type = kuat_support_shroud_storm
					} }
					destroy_cosmic_storm = yes
				}
			}
			random_owned_ship = {
				solar_system = {
					every_cosmic_storm = { 
						limit = { has_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prevprev } 
						destroy_cosmic_storm = yes 
					}
					spawn_random_storm = { type = "kuat_support_nexus_storm" cosmic_storm_start_position = this immediate = yes }
					last_created_cosmic_storm = { set_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prevprev set_storm_flag = storm_stormfall }
				}	
			}
		}
	}
}

fleet_event = {
	id = kuat_starbase_skills.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_fleet_flag = kuat_mega_starbase_stormed_activated
	}

	immediate = {
		remove_fleet_flag = kuat_mega_starbase_stormed_activated
		random_owned_ship = {
			every_cosmic_storm = { 
				limit = { has_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prev } 
				destroy_cosmic_storm = yes 
			}	
		}
	}
}

fleet_event = {
	id = kuat_starbase_skills.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_ship = {
			any_cosmic_storm = {
				has_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prev
			}
		}
	}

	immediate = {
		random_owned_ship = {
			every_cosmic_storm = { 
				limit = { has_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prev } 
				every_system_within_storm = { set_timed_star_flag = { flag = kuat_mega_starbase_stormed_larged days = 360 } }
			}	
		}
	}
}

fleet_event = {
	id = kuat_starbase_skills.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	immediate = {
		random_owned_ship = {
			if = {
				limit = { OR = {
					is_ship_size = exe_megastructure_starbase 
					is_ship_size = Drift_megastructure_starbase
				} }
				solar_system = {
					set_star_class = sc_black_hole
					star = {
						create_ambient_object = { type = "star_explosion" play_animation_once = yes location = this }
						change_pc = pc_black_hole
						set_planet_size = 18
					}
				}
			}
			if = {
				limit = { is_ship_size = exe_megastructure_starbase }
				every_cosmic_storm = { 
					limit = { has_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prev } 
					destroy_cosmic_storm = yes 
				}
			}
			else_if = {
				limit = { is_ship_size = Drift_megastructure_starbase }
				every_cosmic_storm = { 
					limit = { has_storm_flag = storm_kuat_support_celestic_storm_Drift_megastructure_starbase_@prev } 
					destroy_cosmic_storm = yes 
				}
			}
			else = {
				every_cosmic_storm = { 
					limit = { has_storm_flag = storm_kuat_support_particle_storm_swfo_supremacy_@prev } 
					destroy_cosmic_storm = yes 
				}
			}
		}
		owner = { country_event = { id = kuat_starbase_skills.41 scopes = { from = root.solar_system fromfrom = root } } }
	}
}

country_event = {
	id = kuat_starbase_skills.41
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = fromfrom
		fromfrom = { is_scope_type = fleet }
	}
	immediate = {
		from = { every_system_planet = {
			if = {
				limit = { is_colony = yes }
				destroy_colony = yes
				remove_all_buildings = yes
				remove_all_districts = yes
				every_owned_pop_group = { kill_pop_group = { pop_group = this } }
				clear_planet_modifiers = yes
			}
			if = {
				limit = { is_star = yes }
				change_pc = pc_black_hole
				solar_system = { 
					set_star_class = sc_black_hole 
					starkiller_destroyed_system_everything = yes 
				}
			}
			else_if = {
				limit = { kuat_is_ringworld = yes }
				spawn_ringworld_cracker_effect = yes
				change_pc = pc_ringworld_habitable_damaged
			}
			else_if = {
				limit = { kuat_is_habitat = yes }
				spawn_habitat_cracker_effect = yes
				remove_planet = yes
			}
			else_if = {
				limit = { has_modifier = "holy_planet" }
				change_pc = pc_shattered
				remove_modifier = "holy_planet"
				add_modifier = { modifier = "ag_shattered_holy_planet" }
			}
			else = { change_pc = pc_shattered }
		} }
		fromfrom = { destroy_fleet = this }
	}
}

fleet_event = {
	id = kuat_starbase_skills.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_ship = {
			OR = {
				is_ship_size = exe_megastructure_starbase 
				is_ship_size = Drift_megastructure_starbase
				is_ship_size = swfo_supremacy
			}
		}
	}

	immediate = {
		random_owned_ship = {
			if = {
				limit = { OR = {
					is_ship_size = exe_megastructure_starbase 
					is_ship_size = Drift_megastructure_starbase
				} }
				solar_system = {
					star = {
						create_ambient_object = { type = "star_explosion" play_animation_once = yes location = this }
						last_created_ambient_object = { set_location = { target = prev distance = 0 angle = random } }
						create_ambient_object = { type = "destroyed_system" location = this }
						last_created_ambient_object = { set_ambient_object_flag = destroyed_system_effect set_location = { target = prev  distance = 0  angle = random  } }
					}
					every_ship_in_system = {
						limit = { is_ship_class = shipclass_military exists = owner owner = { is_hostile = root.owner } }
						kuat_battle_kuat_damage_hp_percent = { value = 50 }
					}
				}
			}
			else = {
				solar_system = {
					star = {
						create_ambient_object = { type = "star_explosion" play_animation_once = yes location = this }
						last_created_ambient_object = { set_location = { target = prev distance = 0 angle = random } }
						create_ambient_object = { type = "destroyed_system" location = this }
						last_created_ambient_object = { set_ambient_object_flag = destroyed_system_effect set_location = { target = prev  distance = 0  angle = random  } }
					}
					every_ship_in_system = {
						limit = { is_ship_class = shipclass_military exists = owner owner = { is_hostile = root.owner } }
						kuat_battle_kuat_damage_hp_percent = { value = 50 }
					}
				}
			}
			if = {
				limit = { check_variable = { which = STARBASE_HEALTH_VAR value > 3 } }
				subtract_variable = { which = STARBASE_HEALTH_VAR value = 3 }
			}
			else = { 
				if = {
					limit = { is_ship_size = exe_megastructure_starbase }
					every_cosmic_storm = { 
						limit = { has_storm_flag = storm_kuat_support_nexus_storm_exe_megastructure_starbase_@prev } 
						destroy_cosmic_storm = yes 
					}
				}
				else_if = {
					limit = { is_ship_size = Drift_megastructure_starbase }
					every_cosmic_storm = { 
						limit = { has_storm_flag = storm_kuat_support_celestic_storm_Drift_megastructure_starbase_@prev } 
						destroy_cosmic_storm = yes 
					}
				}
				else = {
					every_cosmic_storm = { 
						limit = { has_storm_flag = storm_kuat_support_particle_storm_swfo_supremacy_@prev } 
						destroy_cosmic_storm = yes 
					}
				}
				destroy_ship = this 
			}
		}
	}
}