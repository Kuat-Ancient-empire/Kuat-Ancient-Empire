namespace = leader
# New Admiral
country_event = {
	id = leader.1
	title = "leader.1.name"
	desc = {
		trigger = { has_authority = auth_hive_mind }
		text = "leader.1.desc.hive"
	}
	desc = {
		trigger = { has_authority = auth_machine_intelligence }
		text = "leader.1.desc.machine"
	}
	desc = {
		trigger = {
			NOR = {
				has_authority = auth_hive_mind
				has_authority = auth_machine_intelligence
			}
		}
		text = "leader.1.desc"
	}
	picture = GFX_evt_federation_fleet
	location = ROOT

	is_triggered_only = yes

	trigger = { always = no }

	immediate = {
		FROMFROM = {
			solar_system = { save_event_target_as = system }
			random_controlled_ship = {
				save_event_target_as = ship
			}
		}
		random_list = {
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = {
						trait = leader_trait_gale_speed
						trait = leader_trait_aggressive
					}
				}
				last_created_leader = { save_event_target_as = officer }
			}
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = {
						trait = leader_trait_aggressive
						trait = leader_trait_engineer
					}
				}
				last_created_leader = { save_event_target_as = officer }
			}
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = {
						trait = leader_trait_fleet_logistician
						trait = leader_trait_cautious
					}
				}
				last_created_leader = { save_event_target_as = officer }
			}
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = {
						trait = leader_trait_scout
						trait = leader_trait_trickster
					}
				}
				last_created_leader = { save_event_target_as = officer }
			}
		}
	}

	option = {
		name = GOOD
		custom_tooltip = new_admiral
	}
}

namespace = crisis
country_event = {
	id = crisis.6052
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			limit = {
				is_ai = no
				NOT = { is_same_value = root }
			}
			country_event = { id = crisis.6051 }
		}
		set_update_modifiers_batch = begin
		every_system = { 
			limit = { kuat_is_kuat_system = no }
			destroy_star_system = yes
		}
		set_update_modifiers_batch = end
		win = yes
	}
}

namespace = grand_archive
# Catalytic Bladder unique mutation damage upon death
country_event = {
	id = grand_archive.10090
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no
	}

	immediate = {
		set_variable = {
			which = local_damage_percentage
			value = fromfrom.value:scripted_modifier_add|MODIFIER|damage_random_nearby_enemy_on_death|
		}
		if = {
			limit = {
				check_variable = { which = local_damage_percentage value > 0 }
			}
			fromfrom.solar_system = {
				random_ship_in_system = {
					limit = {
						owner = {
							is_same_value = root.from
						}
						distance = {
							source = root.fromfrom
							max_distance <= 30
							same_solar_system = yes
						}
					}

					root.fromfrom = {
						export_trigger_value_to_variable = {
							trigger = has_max_hp
							variable = local_max_hp
						}
						export_trigger_value_to_variable = {
							trigger = has_max_armor_hp
							variable = local_max_armor_hp
						}
					}
					change_variable = {
						which = local_damage_value
						value = local_max_hp
					}
					change_variable = {
						which = local_damage_value
						value = local_max_armor_hp
					}
					multiply_variable = {
						which = local_damage_value
						value = local_damage_percentage
					}
					damage_ship = local_damage_value
				}
			}

			play_sound = { # Sound played on ship explosion
				sound = ga_weapon_catalytic_bladder
				location = fromfrom
			}
		}
	}
}

namespace = fircon
planet_event = {
	id = fircon.5034
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = {
			has_country_flag = solarpunk_country
			is_primitive = yes
		}
		from = { is_invisable_faction = no }
	}

	immediate = {
		planet_event = { id = fircon.5035 scopes = { from = from } days = 1 }
		owner = { country_event = { id = fircon.5045 scopes = { from = from } days = 5 } }
	}
}

namespace = ag_ancient
# on_entering_battle, Common combat events entry.
country_event = {
	id = ag_ancient.2100
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		fromfrom = { NOT = { has_fleet_flag = ag_ancient_2100_mutex_@root.fromfromfrom } }
		OR = {
			ag_is_ancient_country = yes
			is_country_type = ag_zeta_crisis_country
			any_owned_ship = { OR = { has_ship_flag = ag_ancient_empire_mod_ship has_ship_flag = kop_ag_has_special_aura } }
		}
		NOR = {
			fromfrom = { OR = { has_fleet_flag = ag_zeta_crisis_avatar_fleet is_invisable_faction = yes } }
			fromfromfrom = { OR ={ has_fleet_flag = ag_zeta_crisis_avatar_fleet is_invisable_faction = yes } }
		}
	}
	immediate = {
		ag_mod_ship_modifier_fix_up_interaction = yes

		# Count Ancient titans.
		fromfrom = {
			set_fleet_flag = ag_ancient_2100_mutex_@root.fromfromfrom
			if = { limit = { NOT = { is_variable_set = ag_num_ships_start } } set_variable = { which = ag_num_ships_start value = trigger:num_ships } }
			if = {
				limit = { NOT = { is_variable_set = ag_num_ancient_titans_start } }
				set_variable = { which = ag_num_ancient_titans_start value = 0 }
				every_owned_ship = { limit = { is_variable_set = ag_disable_ancient_titan } prev = { change_variable = { which = ag_num_ancient_titans_start value = 1 } } }
			}
		}
		fromfromfrom = {
			if = {
				limit = { NOT = { has_fleet_flag = ag_ancient_2100_mutex_@root.fromfrom } }
				root.from = { country_event = { id = ag_ancient.2100 scopes = { from = root fromfrom = root.fromfromfrom fromfromfrom = root.fromfrom } } }
			}
			if = { limit = { NOT = { is_variable_set = ag_num_ships_start } } set_variable = { which = ag_num_ships_start value = trigger:num_ships } }
			if = {
				limit = { NOT = { is_variable_set = ag_num_ancient_titans_start } }
				set_variable = { which = ag_num_ancient_titans_start value = 0 }
				every_owned_ship = { limit = { is_variable_set = ag_disable_ancient_titan } prev = { change_variable = { which = ag_num_ancient_titans_start value = 1 } } }
			}
		}
		
		# Aura Effects
		# set_update_modifiers_batch = begin
		fromfrom = { every_owned_ship = {
			# limit = { NOT = { check_modifier_value = { modifier = "ag_ship_num_auras" value = 0 } } }
			limit = { has_ship_flag = kop_ag_has_special_aura }
			root.fromfromfrom = { every_owned_ship = { ag_ship_aura_init_effect = yes } }
		} }
		# set_update_modifiers_batch = end

		# Gravity Weapon System's Effect.
		if = {
			limit = {
				OR = { ag_is_ancient_country = yes ag_country_has_subsystem = { ag_subsystem_id = 3 } }
				NOR = { is_country_type = ag_ancient_zeta_guardian is_country_type = ag_ancient_psi_guardian }
				fromfrom = { NOR = { has_fleet_flag = ag_eta_titan_phantom_hostile_fleet has_fleet_flag = ag_eta_titan_phantom_player_fleet } }
			}
			if = {
				limit = { ag_country_has_subsystem = { ag_subsystem_id = 3 } }
				fromfromfrom = {
					set_variable = { which = ag_max_ship_locked_ships value = trigger:num_ships }
					divide_variable = { which = ag_max_ship_locked_ships value = 10 }
					floor_variable = ag_max_ship_locked_ships
				}
				fromfrom = { every_owned_ship = {
					limit = { ag_ship_has_subsystem = { ag_owner = root ag_subsystem_id = 3 } }
					root.fromfromfrom = {
						every_owned_ship = {
							limit = { OR = {
								is_ship_class = shipclass_military
								is_ship_class = shipclass_military_special
								is_ship_class = shipclass_military_station
								is_ship_class = shipclass_starbase
							} }
							ag_ancient_gravity_weapon_ship_effect = yes
						}
						clear_variable = ag_max_ship_locked_ships
					}
				} }
			}
			else = {
				fromfromfrom = {
					set_variable = { which = ag_max_ship_locked_ships value = trigger:num_ships }
					divide_variable = { which = ag_max_ship_locked_ships value = 10 }
					floor_variable = ag_max_ship_locked_ships
				}
				fromfrom = { every_owned_ship = { root.fromfromfrom = {
					every_owned_ship = {
						limit = { OR = {
							is_ship_class = shipclass_military
							is_ship_class = shipclass_military_special
							is_ship_class = shipclass_military_station
							is_ship_class = shipclass_starbase
						} }
						ag_ancient_gravity_weapon_ship_effect = yes
					}
					clear_variable = ag_max_ship_locked_ships
				} } }
			}
		}

		# Anti Psionic Weapon System's Effect.
		if = {
			limit = { OR = {
				is_country_type = ag_ancient_zeta_guardian
				is_country_type = ag_ancient_psi_guardian
				has_country_flag = ag_ship_subsystem_enabled_701_23
				has_country_flag = ag_ship_subsystem_enabled_702_23
				has_country_flag = ag_ship_subsystem_enabled_703_23
			} }
			if = {
				limit = {
					from = { OR = {
						is_country_type = ag_zeta_crisis_country
						is_country_type = ag_zeta_crisis_portal_holder
						is_country_type = ag_zeta_crisis_relic_country
					} }
					OR = {
						is_country_type = ag_ancient_zeta_guardian
						is_country_type = ag_ancient_psi_guardian
						fromfrom = { any_owned_ship = { OR = {
							AND = { is_ship_size = ag_zeta_titan NOT = { has_ship_flag = ag_zeta_ship_gravity_weapon } owner = { has_country_flag = ag_ship_subsystem_enabled_701_23 } }
							AND = { is_ship_size = ag_zeta_battleship NOT = { has_ship_flag = ag_zeta_ship_gravity_weapon } owner = { has_country_flag = ag_ship_subsystem_enabled_702_23 } }
							AND = { is_ship_size = ag_zeta_destroyer NOT = { has_ship_flag = ag_zeta_ship_gravity_weapon } owner = { has_country_flag = ag_ship_subsystem_enabled_703_23 } }
						} } }
					}
				}
				fromfromfrom = {
					remove_fleet_flag = ag_anti_psi_weapon_target_avatar
					set_timed_fleet_flag = { flag = ag_anti_psi_weapon_target_avatar days = 20 }
					solar_system = { every_fleet_in_system = {
						limit = { has_fleet_flag = ag_zeta_crisis_avatar_fleet }
						random_list = {
							50 = { }
							30 = {
								ag_spawn_buff_effect = { ag_type = 3 ag_scale = s ag_color = violet }
								set_timed_fleet_flag = { flag = ag_ship_weapon_range_mult_locked days = 10 }
								add_modifier = { modifier = ag_ship_weapon_range_mult_buff multiplier = -5 days = 10 }
							}
							20 = {
								ag_spawn_explosion_effect = { ag_scale = m ag_color = violet }
								delete_fleet = this
							}
						}
					} }
				}
			}
			if = {
				limit = { OR = {
					is_country_type = ag_ancient_zeta_guardian
					is_country_type = ag_ancient_psi_guardian
				} }
				fromfrom = { every_owned_ship = {
					limit = { ag_is_ancient_ship_with_anti_psi_weapon = yes }
					root.fromfromfrom = { every_owned_ship = {
						limit = {
							NOT = { has_ship_flag = ag_anti_psi_weapon_target }
							OR = {
								is_ship_class = shipclass_military
								is_ship_class = shipclass_military_special
								is_ship_class = shipclass_military_station
								is_ship_class = shipclass_starbase
							}
						}
						ag_ancient_anti_psi_weapon_ship_effect = yes
					} }
				} }
			}
			else = {
				fromfrom = { every_owned_ship = {
					limit = { OR = {
						AND = { is_ship_size = ag_zeta_titan NOT = { has_ship_flag = ag_zeta_ship_gravity_weapon } owner = { has_country_flag = ag_ship_subsystem_enabled_701_23 } }
						AND = { is_ship_size = ag_zeta_battleship NOT = { has_ship_flag = ag_zeta_ship_gravity_weapon } owner = { has_country_flag = ag_ship_subsystem_enabled_702_23 } }
						AND = { is_ship_size = ag_zeta_destroyer NOT = { has_ship_flag = ag_zeta_ship_gravity_weapon } owner = { has_country_flag = ag_ship_subsystem_enabled_703_23 } }
					} }
					root.fromfromfrom = { every_owned_ship = {
						limit = {
							NOT = { has_ship_flag = ag_anti_psi_weapon_target }
							OR = {
								is_ship_class = shipclass_military
								is_ship_class = shipclass_military_special
								is_ship_class = shipclass_military_station
								is_ship_class = shipclass_starbase
							}
						}
						ag_ancient_anti_psi_weapon_ship_effect = yes
					} }
				} }
			}
		}

		# Kill Fleet Leader Effect.
		if = {
			limit = {
				from = { NOR = {
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = swarm
					is_country_type = feral_prethoryn
					is_country_type = feral_prethoryn_infighting
					is_country_type = ai_empire
					is_country_type = cybrex_empire
				} }
				fromfromfrom = { exists = leader }
			}
			if = {
				limit = { is_country_type = ag_zeta_crisis_country }
				random_list = {
					95 = { modifier = { add = -80 from = { ag_is_common_country = no ag_is_mod_country = no } } modifier = { add = -50 from = { ag_is_mod_country = yes } } }
					5 = {
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 1 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 2 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 3 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 4 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 5 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 6 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 7 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 8 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { OR = { has_skill > 9 has_skill = 10 } } } }
						modifier = {
							factor = 2
							fromfromfrom = { leader = { OR = {
								has_trait = leader_trait_cyborg
								has_trait = leader_trait_synthetic
							} } }
						}
						modifier = {
							factor = 0.5
							fromfromfrom = { leader = { OR = {
								has_trait = leader_trait_psionic
								has_trait = leader_trait_foredoomed_to_a_rendezvous
								has_trait = leader_trait_dragonslayer
								has_trait = leader_trait_shroud_age
							} } }
						}
						modifier = {
							factor = 0
							fromfromfrom = { leader = { ag_cannot_be_killed_by_subspace_weapon = yes } }
						}
						modifier = { factor = 0 fromfromfrom = { any_owned_ship = { ag_ship_has_subsystem = { ag_owner = root.from ag_subsystem_id = 22 } } } }
						if = {
							limit = { NOT = { fromfromfrom = { any_owned_ship = { ag_ship_has_subsystem = { ag_owner = root.from ag_subsystem_id = 22 } } } } }
							fromfromfrom = {
								ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
								leader = { save_event_target_as = ag_target_leader }
								root.from = {
									create_message = {
										type = "LEADER_DEATH"
										localization = "ag_leader_kill_by_zeta_crisis_message_desc"
										days = 30
										target = root.fromfromfrom
										variable = { type = name localization = "ag_target_fleet" scope = root.fromfromfrom }
										variable = { type = name localization = "ag_target_leader" scope = event_target:ag_target_leader }
									}
									change_variable = { which = ag_admirals_killed_counter_zeta_crisis value = 1 }
								}
							}
							event_target:ag_target_leader = { ag_kill_leader = yes }
						}
					}
				}
				reroll_random = yes
			}
			else_if = {
				limit = { OR = {
					AND = { NOT = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } } ag_is_ancient_country = yes }
					fromfrom = { any_owned_ship = { ag_ship_has_subsystem = { ag_owner = root ag_subsystem_id = 4 } } }
				} }
				random_list = {
					95 = { modifier = { add = -80 from = { ag_is_common_country = no ag_is_mod_country = no } } modifier = { add = -50 from = { ag_is_mod_country = yes } } }
					5 = {
						# modifier = { factor = 0.1 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value <= 1 } } }
						# modifier = { factor = 0.5 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 1 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 2 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 3 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 4 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 5 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 6 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 7 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { has_skill > 8 } } }
						modifier = { factor = 0.84 fromfromfrom = { leader = { OR = { has_skill > 9 has_skill >= 10 has_skill = 10 } } } }
						modifier = { factor = 10 root = { is_ai = no } from = { is_ai = yes } }
						modifier = {
							factor = 0.5
							fromfromfrom.leader = { OR = {
								has_trait_tier1or2 = { TRAIT = leader_trait_cautious }
								has_trait = leader_trait_foredoomed_to_a_rendezvous
								has_trait = leader_trait_dragonslayer
							} }
						}
						modifier = {
							factor = 0
							fromfromfrom = { leader = { ag_cannot_be_killed_by_subspace_weapon = yes } }
						}
						modifier = { factor = 0 fromfromfrom = { any_owned_ship = { ag_ship_has_subsystem = { ag_owner = root.from ag_subsystem_id = 5 } } } }
						if = {
							limit = { NOT = { fromfromfrom = { any_owned_ship = { ag_ship_has_subsystem = { ag_owner = root.from ag_subsystem_id = 22 } } } } }
							fromfromfrom = {
								ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
								leader = { save_event_target_as = ag_target_leader }
								root.from = { create_message = {
									type = "LEADER_DEATH"
									localization = "ag_leader_kill_by_ancients_message_desc"
									days = 30
									target = root.fromfromfrom
									variable = { type = name localization = "ag_target_fleet" scope = root.fromfromfrom }
									variable = { type = name localization = "ag_target_leader" scope = event_target:ag_target_leader }
								} }
								if = {
									limit = { OR = {
										has_fleet_flag = ag_zeta_crisis_guardian_fleet
										has_fleet_flag = ag_zeta_crisis_assault_fleet
										has_fleet_flag = ag_zeta_crisis_patrol_fleet
										has_fleet_flag = ag_zeta_crisis_protector_fleet
									} }
									random_list = {
										20 = { }
										80 = {
											remove_fleet_flag = ag_zeta_crisis_leader
											remove_fleet_flag = ag_zeta_crisis_leader_1
											remove_fleet_flag = ag_zeta_crisis_leader_2
											remove_fleet_flag = ag_zeta_crisis_leader_3
											remove_fleet_flag = ag_zeta_crisis_leader_4
											remove_fleet_flag = ag_zeta_crisis_leader_5
											remove_fleet_flag = ag_zeta_crisis_leader_6
											remove_fleet_flag = ag_zeta_crisis_leader_7
											remove_fleet_flag = ag_zeta_crisis_leader_8
											remove_fleet_flag = ag_zeta_crisis_leader_9
											remove_fleet_flag = ag_zeta_crisis_leader_10
											remove_fleet_flag = ag_zeta_crisis_leader_11
											remove_fleet_flag = ag_zeta_crisis_leader_12
										}
									}
									reroll_random = yes
								}
							}
							event_target:ag_target_leader = { ag_kill_leader = yes }
						}
					}
				}
				reroll_random = yes
			}
		}

		# Starfish ship's Effect (subsystem).
		if = {
			limit = { OR = { has_country_flag = ag_ship_subsystem_enabled_801_39 has_country_flag = ag_ship_subsystem_enabled_801_40 } }
			if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_801_39 }
				fromfrom = { every_owned_ship = {
					limit = { OR = { is_ship_size = ag_experiment_ship is_ship_size = ag_experiment_ship_hostile } }
					if = { limit = { has_modifier = "ag_sub_801_39_weapon_damage_mult_buff" } remove_modifier = "ag_sub_801_39_weapon_damage_mult_buff" }
					if = { limit = { has_modifier = "ag_sub_801_39_weapon_fire_rate_mult_buff" } remove_modifier = "ag_sub_801_39_weapon_fire_rate_mult_buff" }
					add_modifier = { modifier = "ag_sub_801_39_weapon_damage_mult_buff" days = @ag_sub_kinetic_weapon_effect_days multiplier = modifier:weapon_type_kinetic_weapon_damage_mult }
					add_modifier = { modifier = "ag_sub_801_39_weapon_fire_rate_mult_buff" days = @ag_sub_kinetic_weapon_effect_days multiplier = modifier:weapon_type_kinetic_weapon_fire_rate_mult }
				} }
			}
			else = { if = {
				limit = { from = { ag_is_ancient_country = yes } }
				fromfrom = { every_owned_ship = {
					limit = { OR = { is_ship_size = ag_experiment_ship is_ship_size = ag_experiment_ship_hostile } }
					if = { limit = { has_modifier = "ag_sub_801_40_weapon_damage_mult_buff" } remove_modifier = "ag_sub_801_40_weapon_damage_mult_buff" }
					if = { limit = { has_modifier = "ag_sub_801_40_weapon_fire_rate_mult_buff" } remove_modifier = "ag_sub_801_40_weapon_fire_rate_mult_buff" }
					add_modifier = { modifier = "ag_sub_801_40_weapon_damage_mult_buff" days = @ag_sub_ancient_damage_effect_days multiplier = modifier:weapon_type_kinetic_weapon_damage_mult }
					add_modifier = { modifier = "ag_sub_801_40_weapon_fire_rate_mult_buff" days = @ag_sub_ancient_damage_effect_days multiplier = modifier:weapon_type_kinetic_weapon_fire_rate_mult }
				} }
			} }
		}

		# Mod ship's special effects.
		if = {
			limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 0 } } }
			fromfrom = {
				if = {
					limit = { NOT = { has_fleet_flag = ag_ancient_28_mutex } }
					set_fleet_flag = ag_ancient_28_mutex
					if = { limit = { NOT = { has_fleet_flag = ag_ancient_ship_modifier_clear_activated } } set_fleet_flag = ag_ancient_ship_modifier_clear_activated }
					every_owned_ship = {
						if = {
							limit = { OR = { owner = { has_country_flag = ag_ancient_empire_mod_country } ag_is_ancient_ship_unlocked = yes } ag_mod_ship_modifier_check = yes }
							ag_mod_ship_modifier_fix_up_effect = yes
						}
						remove_modifier = "ag_ancient_weapons_power"
						set_variable = { which = ag_primary_weapon_temp_1 value = event_target:global_event_country.ag_scaled_difficulty }
						change_variable = { which = ag_primary_weapon_temp_1 value = 0.5 }
						add_modifier = { modifier = "ag_ancient_weapons_power" days = 5 multiplier = ag_primary_weapon_temp_1 }
						clear_variable = ag_primary_weapon_temp_1
						# if = {
							# limit = {
								# check_modifier_value = { modifier = ag_instant_kill_shot_add value > 0 }
								# NOT = { has_modifier = "ag_weapon_instant_kill_buff" }
							# }
							# add_modifier = { modifier = "ag_weapon_instant_kill_buff" days = 1 multiplier = value:ag_instant_kill_weapon_damage_factor }
						# }
					}
					if = { limit = { NOT = { is_variable_set = ag_fleet_combat_days } } set_variable = { which = ag_fleet_combat_days value = 0 } }
				}
			}
		}

		# set_update_modifiers_batch = end
	}
	after = {
		fromfrom = {
			if = { limit = { exists = leader leader = { ag_is_incorrect_leader = yes } } ag_kill_leader = yes }
			if = { limit = { NOT = { has_fleet_flag = ag_ancient_2102_fired } } set_fleet_flag = ag_ancient_2102_fired fleet_event = { id = ag_ancient.2102 days = 1 } }
			fleet_event = { id = ag_ancient.2104 days = 1 scopes = { from = root.fromfromfrom } }
		}
		fromfromfrom = {
			if = { limit = { exists = leader leader = { ag_is_incorrect_leader = yes } } ag_kill_leader = yes }
			if = { limit = { NOT = { has_fleet_flag = ag_ancient_2102_fired } } set_fleet_flag = ag_ancient_2102_fired fleet_event = { id = ag_ancient.2102 days = 1 } }
			fleet_event = { id = ag_ancient.2104 days = 1 scopes = { from = root.fromfrom } }
		}
	}
}

namespace = ag_ancient_kuat_op
country_event = {
	id = ancient_kuat_op.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_owned_ship = { ag_has_special_aura = yes }
	}
	immediate = {
		every_owned_ship = {
			limit = { ag_has_special_aura = yes }
			set_ship_flag = kop_ag_has_special_aura
		}
	}
}