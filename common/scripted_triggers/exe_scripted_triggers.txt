kuat_is_not_allow_to_build_auto_planet = {
	OR = {
		AND = { has_apsr_modifiers = yes num_uncleared_blockers > 0 }
		has_planet_flag = ag_ringworld_habitable_section
		has_planet_flag = kuat_ancient_epsilon_event_world
		has_planet_flag = kuat_ancient_epsilon_event_world_2
		has_planet_flag = kuat_ancient_epsilon_event_world_3
		has_planet_flag = has_building_kuat_command_center_auto
		is_planet_class = pc_cosmogenesis_world
		has_planet_flag = kuat_ban_command_center_auto
	}
}

kuat_is_crisis_faction = {
	OR = {
		is_country_type = swarm
		is_country_type = extradimensional
		is_country_type = extradimensional_2
		is_country_type = extradimensional_3
		is_country_type = ai_empire
		is_country_type = gray_goo
		is_country_type = awakened_marauders
		is_country_type = wg_crisis_country							
	}
}

is_kuat_fallen_empire = {
	OR = {
		is_country_type = kuat_fallen_empire
		is_country_type = kuat_awakened_fallen_empire
		is_country_type = kuat_shipyard
		is_country_type = kuat_support
		is_country_type = kuat_fleet
		is_country_type = kuat_fleet_hostile
		is_kuat_Overseer_Council_empire = yes
		is_country_type = kuat_contractor_support
	}
}

is_kuat_Overseer_Council_empire = {
	OR = {
		is_country_type = kuat_fire_base
		is_country_type = kuat_fire_base_hositle
		is_country_type = Kuat_E_Area_Guardian
		is_country_type = kuat_awakened_returned_empire
		is_country_type = Kuat_Galatic_Empire_invasion_country
	}
}

is_eternal_faction = {
	OR = {
		is_country_type = eternal_fleet_country
		is_country_type = eternal_support
		is_country_type = eternal_support_guadian
	}
}

is_eternal_guardian = {
	OR = {
		is_country_type = eternal_support
		is_country_type = eternal_support_guadian
	}
}

is_eternal_crisis = {
	is_country_type = eternal_fleet_country
}

is_infinite_faction = {
	is_country_type = Infinite_empire
}

is_kuat_contractor_faction = {
	is_country_type = kuat_contractor_hostile
}

is_invisable_faction = {
	OR = {
		is_kuat_contractor_faction = yes
		is_infinite_faction = yes
		is_kuat_fallen_empire = yes
		is_eternal_faction = yes
	}
}

kuat_shipyard_diplo_event_active = {
	has_active_event = {
		kuat_shipyard.1
		kuat_shipyard.2
		kuat_shipyard.211
		kuat_shipyard.231
		kuat_shipyard.241
		kuat_shipyard.251
		kuat_shipyard.261
		kuat_shipyard.3
		kuat_shipyard.31
		kuat_shipyard.32
		kuat_shipyard.33
		kuat_shipyard.34
		kuat_shipyard.35
		kuat_shipyard.36
	}
}

kuat_fire_base_diplo_event_active = {
	has_active_event = {
		kuat_legacy.78
		kuat_legacy.79
		kuat_legacy.82
		kuat_legacy.80
		kuat_legacy.83
		kuat_legacy.84
		kuat_legacy.85
		kuat_legacy.86
		kuat_legacy.81
		kuat_legacy.87
		kuat_legacy.88
	}
}

kuat_support_diplo_event_active = {
	has_active_event = {
		kuat_origin.9
		kuat_origin.10
		kuat_origin.11
		kuat_origin.12
		kuat_origin.13
		kuat_origin.14
		kuat_origin.15
	}
}

eternal_support_diplo_event_active = {
	has_active_event = {
		kuat_EEstart.5
		kuat_EEstart.6
		kuat_EEstart.7
		kuat_EEstart.8
		kuat_EEstart.9
		kuat_EEstart.10
	}
}

can_communicate_with_kuat = {
	if = {
		limit = { kuat_is_enable_shadow_origin = yes }
		exists = event_target:fallen_empire_kuat
		exists = event_target:kuat_shipyard_country
		event_target:fallen_empire_kuat = {
			NOT = { is_hostile = root }
			event_target:fallen_empire_kuat = { opinion = { who = root value > -1000 } }
		}
		event_target:kuat_shipyard_country = { NOT = { is_hostile = root } }
	}
	else = {
		exists = event_target:kuat_shipyard_country
		event_target:kuat_shipyard_country = { NOT = { is_hostile = root } }
	}
}

kuat_fleet_diplo_event_active = {
	has_active_event = {
		executor_build.802
		executor_build.803
	}
}

can_communicate_with_kuat_fleet = {
	exists = event_target:fallen_empire_kuat
	event_target:fallen_empire_kuat = {
		NOT = { is_hostile = root }
		event_target:fallen_empire_kuat = { opinion = { who = root value > -1000 } }
	}
	exists = event_target:fallen_empire_kuat_fleet
}

kuat_is_repair_system = {	
	OR = {
		has_star_flag = Kuat_empire_system
		AND = {
			NOT = { has_global_flag = enable_the_eternal_starbase }
			has_star_flag = eternal_starbase_megastructure_in_system
		}
	}
}

kuat_is_kuat_system = {
	OR = {
		has_star_flag = Kuat_empire_system
		has_star_flag = kuat_initial_system
	}
}

kuat_is_exe_return_invasion_system = {
	OR = {
		has_star_flag = lcluster
		has_star_flag = wg_sealed_system
		has_star_flag = ag_no_jump_in_system			
		has_star_flag = Kuat_empire_system		
		has_star_flag = outercluster					
		has_star_flag = kuat_initial_system
	}
}

kuat_is_invasion_system = {
	OR = {
		has_star_flag = kuat_military_base_local_home
		has_star_flag = ag_exe_invasion_gate_system_fallback
		has_star_flag = Kuat_empire_system
	}
}

kuat_is_create_system = {
	OR = {
		has_star_flag = Kuat_empire_system
		has_star_flag = kuat_initial_system
		has_star_flag = fallen_sol_system
	}
}

kuat_is_can_pass_by_country = {
	OR = {
		AND = {
			NOT = { has_global_flag = disable_kuat_by_passed }
			kuat_is_enable_eternal_origin = yes
		}
		has_country_flag = can_pass_by
		is_invisable_faction = yes
	}
}

kuat_is_can_inpass_by_country = {
	OR = {
		is_invisable_faction = yes
		kuat_is_enable_apocalyptic_origin = yes
		AND = {
			NOT = { has_global_flag = disable_kuat_by_passed }
			kuat_is_enable_eternal_origin = yes
		}
		has_country_flag = can_pass_inner_by
	}
}

#eternal borderment
kuat_is_event_borderment_ringworld = {
	OR = {
		kuat_is_ringworld = yes
		is_planet_class = pc_habitat
		AND = {
			has_global_flag = has_ancient_empire_mod
			OR = {
				has_modifier = "holy_planet"
				has_modifier = "ag_shattered_holy_planet"
			}
		}
	}
}

kuat_is_holy_world_planet = {
	OR = {
		has_modifier = "holy_planet"
		has_modifier = "ag_shattered_holy_planet"
	}
}

#flagship system
kuat_is_animation_ftl_ship = {
	OR = {
		is_ship_size = kuat_sector
		is_ship_size = eclipse
		is_ship_size = Annihilator
		is_ship_size = Vengeance
		is_ship_size = knight_hammer_executor
		is_ship_size = nebula_executor
		is_ship_size = nebula_dominance
		is_ship_size = kuat_compellor	
		is_ship_size = kuat_legator

		is_ship_size = horrizone
		is_ship_size = Imperial_star_destroyer
		is_ship_size = high_Imperial_star_destroyer
		is_ship_size = swfo_resurgent
		is_ship_size = Aggressor

		is_ship_size = X308_Balletor
		is_ship_size = X308_Titan
		is_ship_size = X308_Tyrant

		is_ship_size = Cavelry
	}
}
kuat_is_kuat_ship = {
	OR = {
		kuat_is_flagship = yes
		is_ship_size = Cavelry
		is_ship_size = Venator_modifier
		is_ship_size = Venator_modifier_II
		is_ship_size = horrizone
		is_ship_size = Imperial_star_destroyer
		is_ship_size = high_Imperial_star_destroyer
		is_ship_size = swfo_resurgent
		is_ship_size = Aggressor
		is_ship_size = eternal_battleship
		is_ship_size = eternal_flagship
		is_ship_size = Infinite_crusier
		is_ship_size = Infinite_Mothership
		is_ship_size = Drift_Battleship
		is_ship_size = Drift_Crusier
		is_ship_size = kuat_target_signal_ship
		is_ship_size = Spt_Battleship
		is_ship_size = Spt_Crusier
		ag_is_buildable_ancient_ship = yes
		swgs_is_standard_ship = yes
		unsc_is_standard_ship = yes
		kuat_is_mega_starbase = yes
		kuat_is_addon_standard_ship = yes
	}
}
kuat_is_mega_starbase = {
	OR = {
		is_ship_size = exe_megastructure_starbase
		is_ship_size = Drift_megastructure_starbase
		is_ship_size = swfo_supremacy
	}
}

#补给系统
kuat_fleet_cap_occupy = {
	NOT = { has_fleet_flag = kuat_super_flagship_$ID$_enough_support }
	kuat_fleet_cap_TRIGGER_occupy_$ID$ = yes
}

kuat_fleet_cap_flag_condition = {
	NOR = {
		has_fleet_flag = kuat_super_flagship_1_enough_support
		has_fleet_flag = kuat_super_flagship_2_enough_support
		has_fleet_flag = kuat_super_flagship_4_enough_support
	}
}

kuat_fleet_cap_TRIGGER_occupy_1 = {
	any_owned_ship = {
		OR = {
			is_ship_size = kuat_sector
			is_ship_size = eclipse
			is_ship_size = Annihilator
			is_ship_size = Vengeance
			is_ship_size = knight_hammer_executor
			is_ship_size = nebula_executor
			is_ship_size = nebula_dominance
			is_ship_size = kuat_legator
			swgs_is_kuat_flagship = yes
			unsc_is_kuat_flagship = yes
			ag_is_ancient_titan_alt = yes
			kuat_is_addon_flagship = yes
		}
	}
}

kuat_fleet_cap_TRIGGER_occupy_2 = {
	any_owned_ship = {
		OR = {
			is_ship_size = X308_Balletor
			is_ship_size = X308_Titan
			is_ship_size = X308_Tyrant
			kuat_is_addon_sub_flagship = yes
		}
	}
}

kuat_fleet_cap_TRIGGER_occupy_4 = {
	any_owned_ship = {
		OR = {
			is_ship_size = kuat_compellor
			is_ship_size = Infinite_battleship
			is_ship_size = eternal_flagship
		}
	}
}

kuat_is_ship_cap_flagship = {
	OR = {
		is_ship_size = kuat_sector
		is_ship_size = eclipse
		is_ship_size = Annihilator
		is_ship_size = Vengeance
		is_ship_size = knight_hammer_executor
		is_ship_size = nebula_executor
		is_ship_size = nebula_dominance
		is_ship_size = kuat_legator
	}
}
#旗舰机制
kuat_is_flagship_system_protection = {
	OR = {
		is_ship_size = kuat_sector
		is_ship_size = eclipse
		is_ship_size = Annihilator
		is_ship_size = Vengeance
		is_ship_size = knight_hammer_executor
		is_ship_size = nebula_executor
		is_ship_size = nebula_dominance
		is_ship_size = kuat_compellor
		is_ship_size = kuat_legator
		is_ship_size = Infinite_battleship
		is_ship_size = eternal_flagship
		swgs_is_kuat_flagship = yes
		unsc_is_kuat_flagship = yes
		ag_is_ancient_titan_alt = yes
		kuat_is_addon_flagship = yes
		kuat_is_mega_starbase = yes
	}
}
kuat_is_sub_flagship_system_protection = {
	OR = {
		is_ship_size = X308_Balletor
		is_ship_size = X308_Titan
		is_ship_size = X308_Tyrant
		is_ship_size = kuat_compellor
		is_ship_size = Infinite_battleship
		is_ship_size = eternal_flagship
		kuat_is_addon_sub_flagship = yes
		kuat_is_mega_starbase = yes	
	}
}
kuat_is_flagship = {
	OR = {
		kuat_is_flagship_system_protection = yes
		kuat_is_sub_flagship_system_protection = yes
	}
}

kuat_is_forbidden_ee_production_var = {
	OR = { 
		has_authority = auth_starshipgirls 
		has_authority = auth_asharmdolls
	}
}

kuat_is_forbidden_autocolony_country = {
	OR = {
		is_country_type = acot_phanon_retaliator
		is_country_type = acot_phanon_base
		is_country_type = primitive
	}
}

kuat_is_addon_flagship = {
	has_ship_flag = has_ag_flagship
}

kuat_is_addon_sub_flagship = {
	has_ship_flag = has_ag_sub_flagship
}

kuat_is_addon_standard_ship = {
	has_ship_flag = has_ag_standard_ship
}

has_enable_ai_battle_system = {
	is_country_type = default  is_ai = yes
	has_global_flag = ai_fighting_with_player_against_eternal
}

has_enable_total_flagship_system_true = {
	any_owned_ship = { OR = {
		kuat_is_flagship_system_protection = yes
		kuat_is_sub_flagship_system_protection = yes
	} }
}

has_enable_total_flagship_system_false = {
	any_owned_ship = { NOR = {
		kuat_is_flagship_system_protection = yes
		kuat_is_sub_flagship_system_protection = yes
	} }
}

has_enable_flag_ship_system_true = {
	any_owned_ship = { kuat_is_flagship_system_protection = yes }
}

has_enable_flag_ship_system_false = {
	any_owned_ship = { kuat_is_flagship_system_protection = no }
}

has_enable_sub_flag_ship_system_true = {
	any_owned_ship = { kuat_is_sub_flagship_system_protection = yes }
}

has_enable_sub_flag_ship_system_false = {
	any_owned_ship = { kuat_is_sub_flagship_system_protection = no }
}

kuat_is_flagship_size = {
	any_owned_ship = { is_ship_size = $size$ }
}

kuat_has_ship_flag = {
	any_owned_ship = { has_ship_flag = $flag$ }
}

#starkiller base
kuat_is_ringworld = {
	OR = {
		is_ringworld = yes
		is_planet_class = pc_kuat_eternal_ringworld_habitable
		is_planet_class = pc_ringworld_habitable_damaged
		is_planet_class = pc_ringworld_seam_damaged
		is_planet_class = pc_ringworld_tech_damaged
		is_planet_class = pc_ringworld_shielded
		is_planet_class = pc_ringworld_habitable
		is_planet_class = pc_ringworld_tech
		is_planet_class = pc_ringworld_habitable
	}
}

kuat_is_habitat = {
	OR = {
		uses_district_set = habitat
		is_planet_class = pc_habitat
	}
}

#eternal check
retrun_first_station_check = {
	optimize_memory
	if = {
		limit = { any_country = { is_ai = no kuat_is_enable_eternal_origin = yes } }
		event_target:global_event_country = {
			check_variable_arithmetic = { which = count_destroy_eternal_fleet value > eternal_fleet_return_index divide = 2 }
			check_variable_arithmetic = { which = count_destroy_eternal_fleet value <= eternal_fleet_return_index divide = 4 }
		}
	}
	else = {
		event_target:global_event_country = {
			check_variable = { which = count_destroy_eternal_fleet value > 10 }
			check_variable = { which = count_destroy_eternal_fleet value <= 20 }
		}
	}
}

retrun_second_station_check = {
	optimize_memory
	if = {
		limit = { any_country = { is_ai = no kuat_is_enable_eternal_origin = yes } }
		event_target:global_event_country = {
			check_variable_arithmetic = { which = count_destroy_eternal_fleet value > eternal_fleet_return_index divide = 4 }
			check_variable_arithmetic = { which = count_destroy_eternal_fleet value <= eternal_fleet_return_index divide = 8 }
		}
	}
	else = {
		event_target:global_event_country = {
			check_variable = { which = count_destroy_eternal_fleet value > 20 }
			check_variable = { which = count_destroy_eternal_fleet value <= 40 }
		}
	}
}

retrun_third_station_check = {
	optimize_memory
	if = {
		limit = { any_country = { is_ai = no kuat_is_enable_eternal_origin = yes } }
		event_target:global_event_country = {
			check_variable_arithmetic = { which = count_destroy_eternal_fleet value > eternal_fleet_return_index divide = 8 }
		}
	}
	else = {
		event_target:global_event_country = {
			check_variable = { which = count_destroy_eternal_fleet value > 40 }
		}
	}
}

#kuat origin
eks_init_unflaged = {
	NOR = {
		has_star_flag = etenal_kuat_system_init_style_1_flaged
		has_star_flag = etenal_kuat_system_init_style_2_flaged
		has_star_flag = etenal_kuat_system_init_style_3_flaged
		has_star_flag = etenal_kuat_system_init_style_4_flaged
	}
}

kuat_has_researcher = {
	AND = {
		planet_resource_compare = { resource = physics_research value > 0 type = produces }
		planet_resource_compare = { resource = society_research value > 0 type = produces }
		planet_resource_compare = { resource = engineering_research value > 0 type = produces }
	}
}

#eternal origin
eternal_archaeological_limit = {
	solar_system = { NOT = { has_star_flag = zakuul_system } }
	is_colonizable = no is_colony = no is_ringworld = no is_asteroid = no is_star = no
	NOT = { exists = archaeological_site }
}

#ship building trigger
has_trigger_shipyard = {
	OR = {
		AND = { is_scope_type = starbase OR = {
			has_starbase_size = ag_gamma_station_hostile
			has_starbase_size = ag_gamma_station_0
			has_starbase_size = ag_gamma_station_1

			has_starbase_size = swfo_supremacy
			has_starbase_size = exe_megastructure_starbase
			has_starbase_size = Drift_megastructure_starbase
		} }
		AND = { is_scope_type = megastructure OR = {
			is_megastructure_type = ag_ancient_construction_section
			has_megastructure_flag = ag_ancient_construction_section_megashipyard
			
			is_megastructure_type = StarForge
			is_megastructure_type = Infinite_StarForge
			is_megastructure_type = ed_mega_shipyard
			is_megastructure_type = exe_black_hole_restore
			is_megastructure_type = exe_black_hole_facility
		} }
		AND = { exists = owner owner = { has_modifier = "ag_debug_modifier_buff_common" } }
	}
}

#archological trigger
kuat_is_legacy_arc_planet = {
	is_colony = no
	is_under_colonization = no
	is_asteroid = no
	is_ringworld = no
	is_star = no
	NOT = { exists = archaeological_site }
}

#bomborment country
kuat_can_do_bombarment_country = {
	OR = {
		is_invisable_faction = yes
		is_country_type = kuat_plague_endoira
	}
}
#be bombarment country
kuat_can_be_orbital_bombarment_country = {
	OR = {
		is_invisable_faction = yes
		is_country_type = kuat_plague_endoira	
	}
}

#scope: country
kuat_has_swgs_tech = {
	has_authority = $AUTH|auth_starshipgirls$
	[[TECH] has_technology = $TECH$ ]
	[[TRAT] has_trait = $TRAT$ ]
	[[CIVC] has_civic = $CIVC$ ]
	[[EMPO] is_galactic_emperor = $EMPO$ ]
}
#Scope: fleet
kuat_exist_fleet_leader = {
	AND = {
		exists = leader
		leader = { 
			[[TRUE_FLAG] has_leader_flag = $TRUE_FLAG$ ]
			[[FAIL_FLAG] NOT = { has_leader_flag = $FAIL_FLAG$ } ]
			[[TRAIT] has_trait = $TRAIT$ ]
			[[KEY] OR = { $KEY$ = $TRAIT1$ $KEY$ = $TRAIT2$ $KEY$ = $TRAIT3$ } ]
		}
	}
}

has_kuat_support_modifier_star_flag = {
	OR = {
		has_star_flag = kuat_starbase_megastructure_around_system
		has_star_flag = kuat_starbase_megastructure_conbine_system
	}
}

kuat_is_playable_country = {
	OR = {
		AND = {
			is_country_type = default
			is_nirvana_empire = no
		}
		is_country_type = enclave_mercenary
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire

		is_country_type = ascended_empire
		is_country_type = eternal_empire
		is_country_type = lost_empire

		is_country_type = star_fantasy_empire
		is_country_type = endtime_star_fantasy_empire

		is_country_type = default_ev
	}
}

kuat_is_enable_shadow_origin = {
	is_player_country = yes
	OR = {
		has_origin = origin_kuat_shadow
		has_country_flag = has_origin_kuat_shadow
	}
}

kuat_is_enable_eternal_origin = {
	is_player_country = yes
	OR = {
		has_origin = origin_eternalthrone
		has_country_flag = has_origin_kuat_eternal
	}
}

kuat_is_enable_apocalyptic_origin = {
	is_player_country = yes
	OR = {
		has_origin = origin_kuat_apocalyptic
		has_country_flag = has_origin_kuat_apocalyptic
	}
}

Kuat_auto_colony_reserve_condition = {
	is_ai = yes 
	check_variable_arithmetic = { which = modifier:country_resource_max_add value >= 100000 }
	OR = {
		resource_stockpile_compare = { resource = energy value > modifier:country_resource_max_add }
		resource_stockpile_compare = { resource = food value > modifier:country_resource_max_add }
		resource_stockpile_compare = { resource = minerals value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = alloys value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = consumer_goods value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = rare_crystals value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = exotic_gases value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = volatile_motes value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = nanites value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_dark_matter value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_zro value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_living_metal value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = minor_artifacts value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = sr_kyber_swgs value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_tibanna_swgs value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = sr_pantsu value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_neo value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_alpha value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_se value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = mind_club value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = azur_shippartbox value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = azur_red_diamond value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = acot_sr_dark_energy value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = acot_sr_stellarite value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = acot_sr_light_matter value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = aot_sr_runic_power value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = KZ_VOY_zero_g_crystal value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = KZ_VOY_dilithium_crystal value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = KZ_VOY_stellar_core value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = KZ_VOY_hyperstructure_alloys value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = KZ_VOY_stellar_sakura value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = sr_rosa_mystica value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_void_core value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_void_core_hidden value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = love_juice value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = holylight_crystal value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = excellent_slave value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_christian value > modifier:country_resource_max_add }
		# resource_stockpile_compare = { resource = sr_beauty value > modifier:country_resource_max_add }

		# resource_stockpile_compare = { resource = sr_jingling value > modifier:country_resource_max_add }
	}
}

kuat_rsearch_system_trigger = {
	check_variable = {
		which = kuat_$TECH_AREA$_$ID$_tech_icon_resarch_total_perc
		value > $VALUE$
	}
}

kuat_check_research_progress_physics_value = {
	OR = {
		AND = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_energy_damage
			check_variable = {
				which = kuat_physics_1000_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
		AND = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_energy_fire_rate
			check_variable = {
				which = kuat_physics_1001_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
	}
}

kuat_check_research_progress_society_value = {
	OR = {
		AND = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_strike_craft_fire_damage
			check_variable = {
				which = kuat_society_2000_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
		AND = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_strike_craft_fire_rate
			check_variable = {
				which = kuat_society_2001_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
	}
}

kuat_check_research_progress_engineering_value = {
	OR = {
		AND = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_kinetic_damage
			check_variable = {
				which = kuat_engineering_3000_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
		AND = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_kinetic_fire_rate
			check_variable = {
				which = kuat_engineering_3001_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
		AND = {
			has_country_flag = kuat_research_tech_Name_boss_crisis_DC_BOSS_building
			check_variable = {
				which = kuat_engineering_1000_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
		AND = {
			has_country_flag = kuat_research_tech_Name_boss_crisis_DB_BOSS_building
			check_variable = {
				which = kuat_engineering_1001_tech_icon_resarch_total_perc
				value > $VALUE$
			}
		}
	}
}

kuat_is_any_researching = {
	[[physics] if = {
		limit = { always = $physics$ }
		NOR = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_energy_damage
			has_country_flag = kuat_research_tech_repeatable_weapon_type_energy_fire_rate
		}
	} ]
	[[society] if = {
		limit = { always = $society$ }
		NOR = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_strike_craft_fire_damage
			has_country_flag = kuat_research_tech_repeatable_weapon_type_strike_craft_fire_rate
		}
	}]
	[[engineering] if = {
		limit = { always = $engineering$ }
		NOR = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_kinetic_damage
			has_country_flag = kuat_research_tech_repeatable_weapon_type_kinetic_fire_rate
			has_country_flag = kuat_research_tech_Name_boss_crisis_DC_BOSS_building
			has_country_flag = kuat_research_tech_Name_boss_crisis_DB_BOSS_building
		}
	} ]
	[[ALL] if = {
		limit = { always = $ALL$ }
		OR = {
			has_country_flag = kuat_research_tech_repeatable_weapon_type_energy_damage
			has_country_flag = kuat_research_tech_repeatable_weapon_type_energy_fire_rate
			has_country_flag = kuat_research_tech_repeatable_weapon_type_strike_craft_fire_damage
			has_country_flag = kuat_research_tech_repeatable_weapon_type_strike_craft_fire_rate
			has_country_flag = kuat_research_tech_repeatable_weapon_type_kinetic_damage
			has_country_flag = kuat_research_tech_repeatable_weapon_type_kinetic_fire_rate
			has_country_flag = kuat_research_tech_Name_boss_crisis_DC_BOSS_building
			has_country_flag = kuat_research_tech_Name_boss_crisis_DB_BOSS_building
		}
	}]
}

kuat_is_enable_eternal_invasion = {
	any_country = { kuat_is_enable_shadow_origin = yes }
	NOT = { has_global_flag = will_be_upgrade_starforge }
	NOT = { has_global_flag = exe_invasion_ban_hidden }
}