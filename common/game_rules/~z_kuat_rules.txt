can_orbital_bombard = {
	exists = FROM.OWNER
	NOR = {
		any_owned_ship = {
			is_ship_size = colossus
			is_ship_size = fe_colossus
		}
		FROM = {
			OR = {
				has_modifier = "underground_world"
				has_modifier = "ice_world"
			}
		}
		FROM.OWNER = { is_country_type = kuat_fire_base_hositle }
	}
	NAND = {
		FROM = { is_planet_class = pc_shielded_gaia }
		ROOT.OWNER = {
			NOR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = gray_goo
			}
		}
	}
	OR = {
		AND = {
			ROOT.OWNER = {
				NOT = { has_communications = FROM.OWNER }
			}
			FROM.OWNER = {
				NOT = { is_country_type = primitive }
			}
		}
		AND = {
			ROOT.OWNER = {
				NOR = {
					has_policy_flag = interference_passive
					has_policy_flag = interference_active
				}
			}
			FROM.OWNER = { is_country_type = primitive }
		}
		ROOT.OWNER = { is_at_war_with = FROM.CONTROLLER }
		ROOT.OWNER = { is_hostile = FROM.CONTROLLER }
		FROM = { is_planet_class = pc_infested }
		FROM.CONTROLLER = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = ag_ancient_primitive_crisis				
				is_country_type = ag_zeta_crisis_country				
				is_country_type = ag_ancient_psi_guardian				
				is_country_type = original_empire				
				is_country_type = kuat_fleet
				is_country_type = awakened_return_kuat_empire				
			}
		}
		ROOT.OWNER = {
			OR = {
				is_country_type = kuat_fleet
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = gray_goo
				is_country_type = vol
				is_country_type = mercenary_fleet				
				is_country_type = ev_leviathans_crisis				
				is_country_type = wg_crisis_country				
				is_country_type = afk_crisis_country				
				AND = {
					has_global_flag = has_wsg_mod
					is_khan_country_type = yes
				}
				is_country_type = kuat_fallen_empire				
				is_country_type = kuat_awakened_fallen_empire				
				is_country_type = awakened_return_kuat_empire				
				is_country_type = ag_kuat_invasion_country				
				is_country_type = ag_ancient_primitive_crisis
				is_country_type = ag_ancient_gamma_guardian
				is_country_type = ag_zeta_crisis_country
				AND = {
					is_country_type = ag_ancient_psi_guardian
					root.from.controller = { is_hostile = root.owner }
				}
				is_country_type = original_empire	
				AND = {
					is_country_type = awakened_marauders
					FROM.CONTROLLER = {
						NAND = {
							is_subject_type = satrapy
							NOT = { has_country_flag = rebelling_satrapy }
						}
					}
				}
			}
		}
		AND = {
			from.controller = {
				is_country_type = faction
				NOT = { is_same_value = root.owner }
			}
			from.owner = { is_same_value = root.owner }
		}
	}
}

can_enter_system_by_jump = {
	custom_tooltip = {
		success_text = "debug: can jump"
		fail_text = cannot_jump_to_system
		NOT = { root = { is_country_type = teif_primitive } }
		OR = {
			NOR = {
				has_star_flag = sealed_system
				has_star_flag = fallen_sol_system			
			}
			AND = {
				root = {
					has_country_flag = entered_fallen_sol_system
				}
				has_star_flag = fallen_sol_system
			}
			AND = {
				root = {
					has_country_flag = entered_sealed_system
				}
				has_star_flag = sealed_system
			}
		}
		NOR = {
			has_star_flag = lcluster
			has_star_flag = wg_sealed_system
			has_star_flag = ag_no_jump_in_system			
			has_star_flag = Kuat_system			
			has_star_flag = Kuat_system_1			
			has_star_flag = Kuat_system_2			
			has_star_flag = Kuat_system_3			
			has_star_flag = outercluster			
			has_star_flag = nep_Krahen_cluster			
			has_star_flag = nep_Scrus_cluster		
			AND = {
				has_global_flag = starkillerbase_not_passed
				has_star_flag = starkiller_system	
			}
			AND = {
				has_global_flag = nep_not_pass_Aemethms
				OR = {
					has_star_flag = nep_dragon_system
					has_star_flag = nep_heptagram_cluster
				}
			}
		}
	}
}
