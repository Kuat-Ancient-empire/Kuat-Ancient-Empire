#Kuat Contractor Invasion AI
kuat_contractor_exe_invasion_fleet_wandering_action = {
	optimize_memory
	clear_orders = yes
	clear_fleet_actions = this
	random_list = {
		75 = {
			solar_system = {
				random_neighbor_system = {
					save_event_target_as = kuat_contractor_exe_invasion_fleet_wandering_action_target
				}
			}
			if = {
				limit = { exists = event_target:kuat_contractor_exe_invasion_fleet_wandering_action_target }
				event_target:kuat_contractor_exe_invasion_fleet_wandering_action_target = {
					system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
				}
			} else = { fleet_event = { id = kuat_extramonster.12 days = 32 random = 5 } }
		}
		25 = {
			modifier = { 
				factor = 0 
				any_owned_ship = { has_ship_flag = ag_jump_drive_cooldown } 
			}
			random_system = {
				limit = {
					NOR = { 
						has_star_flag = kuat_initial_system 
						has_star_flag = myst_system_4
						is_same_value = prev.solar_system
					}
					OR = {
						AND = {
							exists = starbase
							starbase = { exists = owner owner = { is_hostile = event_target:kuat_contractor_hostile } }
						}
						any_system_planet = {
							exists = owner
							owner = { is_hostile = event_target:kuat_contractor_hostile }
							exists = controller
							controller = { is_hostile = event_target:kuat_contractor_hostile }
							OR = {
								is_colony = yes
								is_under_colonization = yes
							}
							NOT = { any_fleet_in_orbit = {
								exists = owner
								owner = { is_same_value = event_target:kuat_contractor_hostile }
								NOT = { is_same_value = root }
							} }
						}
						any_ship_in_system = {
							is_disabled = no
							is_ship_class = shipclass_military
							exists = owner
							owner = { is_hostile = event_target:kuat_contractor_hostile }
						}
					}
				}
				save_event_target_as = kuat_contractor_exe_invasion_fleet_wandering_action_target
			}
			if = {
				limit = { exists = event_target:kuat_contractor_exe_invasion_fleet_wandering_action_target }
				event_target:kuat_contractor_exe_invasion_fleet_wandering_action_target = {
					random_system_planet = {
						limit = { is_primary_star = yes }
						prevprev = {
							set_location = { target = prev distance = 300 angle = random }
							every_owned_ship = { create_jump_particle_effect = yes }
							while = {
								limit = {
									any_owned_ship = { NOT = { has_ship_flag = ag_jump_drive_cooldown } }
								}
								random_owned_ship = {
									limit = {
										NOT = { has_ship_flag = ag_jump_drive_cooldown }
									}
									set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 50 }
									add_modifier = { modifier = "jump_drive_cooldown" days = 50 }
								}
							}
							auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
						}
					}
				}
			} 
			else = {
				solar_system = {
					random_neighbor_system = {
						save_event_target_as = kuat_contractor_exe_invasion_fleet_wandering_action_target
					}
				}
				if = {
					limit = { exists = event_target:kuat_contractor_exe_invasion_fleet_wandering_action_target }
					event_target:kuat_contractor_exe_invasion_fleet_wandering_action_target = {
						random_system_planet = {
							limit = { is_primary_star = yes }
							prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
						}
					}
				} 
				else = { fleet_event = { id = kuat_extramonster.12 days = 32 random = 5 } }
			}
		}
	}
}

kuat_contractor_exe_invasion_fleet_action = {
	optimize_memory
	if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = {
					any_system_planet = {
						exists = owner
						owner = { is_hostile = event_target:kuat_contractor_hostile }
						exists = controller
						controller = { is_hostile = event_target:kuat_contractor_hostile }
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						NOT = { any_fleet_in_orbit = {
							exists = owner
							owner = { is_same_value = event_target:kuat_contractor_hostile }
							NOT = { is_same_value = root }
						} }
					}
				}
			}
		}
		root = {
			solar_system = {
				random_system_planet = {
					limit = {
						exists = owner
						owner = { is_hostile = event_target:kuat_contractor_hostile }
						exists = controller
						controller = { is_hostile = event_target:kuat_contractor_hostile }
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						NOT = { any_fleet_in_orbit = {
							exists = owner
							owner = { is_same_value = event_target:kuat_contractor_hostile }
							NOT = { is_same_value = root }
						} }
					}
					prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
				}
			}
		}
	}
	else_if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = { any_ship_in_system = {
					is_disabled = no
					is_ship_class = shipclass_military
					exists = owner
					owner = { is_hostile = event_target:kuat_contractor_hostile }
				} }
			}
		}
		root = {
			solar_system = {
				random_fleet_in_system = {
					limit = {
						exists = owner
						owner = { is_hostile = event_target:kuat_contractor_hostile }
						any_owned_ship = {
							is_disabled = no
							is_ship_class = shipclass_military
						}
					}
					prevprev = { auto_follow_fleet = { target = prev attack_fleet = yes } }
				}
			}
		}
	}
	else_if = {
		limit = {
			solar_system = { any_neighbor_system = { OR = {
				AND = {
					exists = starbase
					starbase = { exists = owner owner = { is_hostile = event_target:kuat_contractor_hostile } }
				}
				any_ship_in_system = {
					is_disabled = no
					is_ship_class = shipclass_military
					exists = owner
					owner = { is_hostile = event_target:kuat_contractor_hostile }
				}
			} } }
		}
		solar_system = { random_neighbor_system = {
			limit = { OR = {
				AND = {
					exists = starbase
					starbase = {
						exists = owner
						owner = { is_hostile = event_target:kuat_contractor_hostile }
					}
				}
				any_ship_in_system = {
					is_disabled = no
					is_ship_class = shipclass_military
					exists = owner
					owner = { is_hostile = event_target:kuat_contractor_hostile }
				}
			} }
			system_star = { prevprevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		} }
	}
	else_if = {
		limit = {
			solar_system = { kuat_is_kuat_system = yes }
			any_system = {
				has_star_flag = kuat_military_base_local_home
				any_system_megastructure = { is_megastructure_type = exe_outer_gate }
			}
		}
		if = {
			limit = {
				solar_system = { 
					OR = {
						has_star_flag = Kuat_system 
						has_star_flag = Kuat_system_int
					}
				}
			}
			random_system = {
				limit = { 
					OR = {
						has_star_flag = Kuat_system_3 
						has_star_flag = Kuat_system_int_3
					}
				}
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
		else_if = {
			limit = {
				solar_system = { 
					OR = {
						has_star_flag = Kuat_system_3 
						has_star_flag = Kuat_system_int_3
					}
				}
			}
			random_system = {
				limit = { 
					OR = {
						has_star_flag = Kuat_system_2 
						has_star_flag = Kuat_system_int_2
					}
				}
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
		else_if = {
			limit = {
				solar_system = { 
					OR = {
						has_star_flag = Kuat_system_2 
						has_star_flag = Kuat_system_int_2
					}
				}
			}
			random_system = {
				limit = { 
					OR = {
						has_star_flag = Kuat_system_1 
						has_star_flag = Kuat_system_int_1
					} 
				}
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
		else_if = {
			limit = {
				solar_system = { 
					OR = {
						has_star_flag = Kuat_system_1 
						has_star_flag = Kuat_system_int_1
						has_star_flag = Kuat_system_int_4
					} 
				}
			}
			random_system = {
				limit = {
					has_star_flag = kuat_military_base_local_home
					any_system_megastructure = { is_megastructure_type = exe_outer_gate }
				}
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
	}
	else_if = {
		limit = { 
			solar_system = { has_star_flag = kuat_military_base_local_home }
			any_system = {
				has_star_flag = kuat_military_sublocal_home
				NOT = { any_fleet_in_system = { NOT = { is_same_value = root } has_fleet_flag = kuat_contractor_invasion_fleet } }
			}
		}
		random_system = {
			limit = {
				has_star_flag = kuat_military_sublocal_home
				NOT = { any_fleet_in_system = { NOT = { is_same_value = root } has_fleet_flag = kuat_contractor_invasion_fleet } }
			}
			system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		}
	}
	else_if = {
		limit = {  
			solar_system = { has_star_flag = kuat_military_sublocal_home }
			any_system = { has_star_flag = kuat_outlander_exe_center_rim_gate }
		}
		random_system = {
			limit = { has_star_flag = kuat_outlander_exe_center_rim_gate }
			system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		}
	}
	else = {
		random_list = {
			25 = {
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						OR = {
							AND = {
								exists = starbase
								starbase = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
								}
							}
							any_system_planet = {
								exists = owner
								owner = { is_hostile = event_target:kuat_contractor_hostile }
								exists = controller
								controller = { is_hostile = event_target:kuat_contractor_hostile }
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								NOT = { any_fleet_in_orbit = {
									exists = owner
									owner = { is_same_value = event_target:kuat_contractor_hostile }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = kuat_contractor_invasion_fleet_action_target
				}
				if = {
					limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
					event_target:kuat_contractor_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									exists = controller
									controller = { is_hostile = event_target:kuat_contractor_hostile }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:kuat_contractor_hostile }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									exists = controller
									controller = { is_hostile = event_target:kuat_contractor_hostile }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = {
										any_fleet_in_orbit = {
											exists = owner
											owner = { is_same_value = event_target:kuat_contractor_hostile }
											NOT = { is_same_value = root }
										}
									}
								}
								random_list = {
									80 = {
										prevprev = {
											auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
										}
									}
									20 = {
										modifier = {
											factor = 0
											prevprev = {
												any_owned_ship = { has_ship_flag = ag_jump_drive_cooldown }
											}
										}
										prevprev = {
											set_location = { target = prev distance = 300 angle = random }
											every_owned_ship = { create_jump_particle_effect = yes }
											while = {
												limit = {
													any_owned_ship = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
												}
												random_owned_ship = {
													limit = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
													set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
													add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
												}
											}
											auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
										}
									}
								}
							}
						} 
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				} 
				else = {
					closest_system = {
						max_steps = 50
						limit = {
							NOT = {
								is_same_value = root.solar_system
							}
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = owner
										owner = { is_hostile = event_target:kuat_contractor_hostile }
									}
								}
								any_system_planet = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									exists = controller
									controller = { is_hostile = event_target:kuat_contractor_hostile }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:kuat_contractor_hostile }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = kuat_contractor_invasion_fleet_action_target
					}
					if = {
						limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
						event_target:kuat_contractor_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										exists = owner
										owner = { is_hostile = event_target:kuat_contractor_hostile }
										exists = controller
										controller = { is_hostile = event_target:kuat_contractor_hostile }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										NOT = { any_fleet_in_orbit = {
											exists = owner
											owner = { is_same_value = event_target:kuat_contractor_hostile }
											NOT = { is_same_value = root }
										} }
									}
								}
								random_system_planet = {
									limit = {
										exists = owner
										owner = { is_hostile = event_target:kuat_contractor_hostile }
										exists = controller
										controller = { is_hostile = event_target:kuat_contractor_hostile }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										NOT = { any_fleet_in_orbit = {
											exists = owner
											owner = { is_same_value = event_target:kuat_contractor_hostile }
											NOT = { is_same_value = root }
										} }
									}
									random_list = {
										80 = {
											prevprev = {
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
										20 = {
											modifier = {
												factor = 0
												prevprev = {
													any_owned_ship = { has_ship_flag = ag_jump_drive_cooldown }
												}
											}
											prevprev = {
												set_location = { target = prev distance = 300 angle = random }
												every_owned_ship = { create_jump_particle_effect = yes }
												while = {
													limit = {
														any_owned_ship = {
															NOT = { has_ship_flag = ag_jump_drive_cooldown }
														}
													}
													random_owned_ship = {
														limit = {
															NOT = { has_ship_flag = ag_jump_drive_cooldown }
														}
														set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
														add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
													}
												}
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
									}
								}
							} 
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					} 
					else = { kuat_contractor_exe_invasion_fleet_wandering_action = yes }
				}
			}
			25 = {
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						OR = {
							AND = {
								exists = starbase
								starbase = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
								}
							}
							any_system_planet = {
								exists = owner
								owner = { is_hostile = event_target:kuat_contractor_hostile }
								exists = controller
								controller = { is_hostile = event_target:kuat_contractor_hostile }
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								NOT = { any_fleet_in_orbit = {
									exists = owner
									owner = { is_same_value = event_target:kuat_contractor_hostile }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = kuat_contractor_invasion_fleet_action_target
				}
				if = {
					limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
					event_target:kuat_contractor_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									exists = controller
									controller = { is_hostile = event_target:kuat_contractor_hostile }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:kuat_contractor_hostile }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									exists = controller
									controller = { is_hostile = event_target:kuat_contractor_hostile }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:kuat_contractor_hostile }
										NOT = { is_same_value = root }
									} }
								}
								random_list = {
									80 = {
										prevprev = {
											auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
										}
									}
									20 = {
										modifier = {
											factor = 0
											prevprev = {
												any_owned_ship = {
													has_ship_flag = ag_jump_drive_cooldown
												}
											}
										}
										prevprev = {
											set_location = { target = prev distance = 300 angle = random }
											every_owned_ship = { create_jump_particle_effect = yes }
											while = {
												limit = {
													any_owned_ship = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
												}
												random_owned_ship = {
													limit = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
													set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
													add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
												}
											}
											auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
										}
									}
								}
							}
						} 
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				} 
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = owner
										owner = { is_hostile = event_target:kuat_contractor_hostile }
									}
								}
								any_system_planet = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									exists = controller
									controller = { is_hostile = event_target:kuat_contractor_hostile }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:kuat_contractor_hostile }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = kuat_contractor_invasion_fleet_action_target
					}
					if = {
						limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
						event_target:kuat_contractor_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										exists = owner
										owner = { is_hostile = event_target:kuat_contractor_hostile }
										exists = controller
										controller = { is_hostile = event_target:kuat_contractor_hostile }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										NOT = { any_fleet_in_orbit = {
											exists = owner
											owner = { is_same_value = event_target:kuat_contractor_hostile }
											NOT = { is_same_value = root }
										} }
									}
								}
								random_system_planet = {
									limit = {
										exists = owner
										owner = { is_hostile = event_target:kuat_contractor_hostile }
										exists = controller
										controller = { is_hostile = event_target:kuat_contractor_hostile }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										NOT = {
											any_fleet_in_orbit = {
												exists = owner
												owner = { is_same_value = event_target:kuat_contractor_hostile }
												NOT = { is_same_value = root }
											}
										}
									}
									random_list = {
										80 = {
											prevprev = {
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
										20 = {
											modifier = {
												factor = 0
												prevprev = {
													any_owned_ship = { has_ship_flag = ag_jump_drive_cooldown }
												}
											}
											prevprev = {
												set_location = { target = prev distance = 300 angle = random }
												every_owned_ship = { create_jump_particle_effect = yes }
												while = {
													limit = {
														any_owned_ship = {
															NOT = { has_ship_flag = ag_jump_drive_cooldown }
														}
													}
													random_owned_ship = {
														limit = {
															NOT = { has_ship_flag = ag_jump_drive_cooldown }
														}
														set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
														add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
													}
												}
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
									}
								}
							} 
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					} 
					else = { kuat_contractor_exe_invasion_fleet_wandering_action = yes }
				}
			}
			25 = {
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						any_ship_in_system = {
							is_disabled = no
							is_ship_class = shipclass_military
							exists = owner
							owner = { is_hostile = event_target:kuat_contractor_hostile }
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = kuat_contractor_invasion_fleet_action_target
				}
				if = {
					limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
					event_target:kuat_contractor_invasion_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = owner
								owner = { is_hostile = event_target:kuat_contractor_hostile }
								any_owned_ship = {
									is_disabled = no
									is_ship_class = shipclass_military
								}
							}
							random_list = {
								75 = {
									prevprev = {
										auto_follow_fleet = { target = prev attack_fleet = yes }
									}
								}
								25 = {
									modifier = {
										factor = 0
										prevprev = {
											any_owned_ship = {
												has_ship_flag = ag_jump_drive_cooldown
											}
										}
									}
									prevprev = {
										set_location = { target = prev distance = 150 angle = random }
										every_owned_ship = { create_jump_particle_effect = yes }
										while = {
											limit = {
												any_owned_ship = {
													NOT = { has_ship_flag = ag_jump_drive_cooldown }
												}
											}
											random_owned_ship = {
												limit = {
													NOT = { has_ship_flag = ag_jump_drive_cooldown }
												}
												set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
												add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
											}
										}
										auto_follow_fleet = { target = prev attack_fleet = yes }
									}
								}
							}
						}
					}
				} 
				else = {
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							any_ship_in_system = {
								is_disabled = no
								is_ship_class = shipclass_military
								exists = owner
								owner = { is_hostile = event_target:kuat_contractor_hostile }
							}
						}
						save_event_target_as = kuat_contractor_invasion_fleet_action_target
					}
					if = {
						limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
						event_target:kuat_contractor_invasion_fleet_action_target = {
							random_fleet_in_system = {
								limit = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									any_owned_ship = {
										is_disabled = no
										is_ship_class = shipclass_military
									}
								}
								random_list = {
									75 = {
										prevprev = {
											auto_follow_fleet = { target = prev attack_fleet = yes }
										}
									}
									25 = {
										modifier = {
											factor = 0
											prevprev = {
												any_owned_ship = {
													has_ship_flag = ag_jump_drive_cooldown
												}
											}
										}
										prevprev = {
											set_location = { target = prev distance = 150 angle = random }
											every_owned_ship = { create_jump_particle_effect = yes }
											while = {
												limit = {
													any_owned_ship = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
												}
												random_owned_ship = {
													limit = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
													set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
													add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
												}
											}
											auto_follow_fleet = { target = prev attack_fleet = yes }
										}
									}
								}
							}
						}
					} 
					else = { kuat_contractor_exe_invasion_fleet_wandering_action = yes }
				}
			}
			25 = {
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						any_ship_in_system = {
							is_disabled = no
							is_ship_class = shipclass_military
							exists = owner
							owner = { is_hostile = event_target:kuat_contractor_hostile }
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = kuat_contractor_invasion_fleet_action_target
				}
				if = {
					limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
					event_target:kuat_contractor_invasion_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = owner
								owner = { is_hostile = event_target:kuat_contractor_hostile }
								any_owned_ship = {
									is_disabled = no
									is_ship_class = shipclass_military
								}
							}
							random_list = {
								75 = {
									prevprev = {
										auto_follow_fleet = { target = prev attack_fleet = yes }
									}
								}
								25 = {
									modifier = {
										factor = 0
										prevprev = {
											any_owned_ship = {
												has_ship_flag = ag_jump_drive_cooldown
											}
										}
									}
									prevprev = {
										set_location = { target = prev distance = 150 angle = random }
										every_owned_ship = { create_jump_particle_effect = yes }
										while = {
											limit = {
												any_owned_ship = {
													NOT = { has_ship_flag = ag_jump_drive_cooldown }
												}
											}
											random_owned_ship = {
												limit = {
													NOT = { has_ship_flag = ag_jump_drive_cooldown }
												}
												set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
												add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
											}
										}
										auto_follow_fleet = { target = prev attack_fleet = yes }
									}
								}
							}
						}
					}
				} 
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							any_ship_in_system = {
								is_disabled = no
								is_ship_class = shipclass_military
								exists = owner
								owner = { is_hostile = event_target:kuat_contractor_hostile }
							}
						}
						save_event_target_as = kuat_contractor_invasion_fleet_action_target
					}
					if = {
						limit = { exists = event_target:kuat_contractor_invasion_fleet_action_target }
						event_target:kuat_contractor_invasion_fleet_action_target = {
							random_fleet_in_system = {
								limit = {
									exists = owner
									owner = { is_hostile = event_target:kuat_contractor_hostile }
									any_owned_ship = {
										is_disabled = no
										is_ship_class = shipclass_military
									}
								}
								random_list = {
									75 = {
										prevprev = {
											auto_follow_fleet = { target = prev attack_fleet = yes }
										}
									}
									25 = {
										modifier = {
											factor = 0
											prevprev = {
												any_owned_ship = { has_ship_flag = ag_jump_drive_cooldown }
											}
										}
										prevprev = {
											set_location = { target = prev distance = 150 angle = random }
											every_owned_ship = { create_jump_particle_effect = yes }
											while = {
												limit = {
													any_owned_ship = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
												}
												random_owned_ship = {
													limit = {
														NOT = { has_ship_flag = ag_jump_drive_cooldown }
													}
													set_timed_ship_flag = { flag = ag_jump_drive_cooldown days = 200 }
													add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
												}
											}
											auto_follow_fleet = { target = prev attack_fleet = yes }
										}
									}
								}
							}
						}
					} 
					else = { kuat_contractor_exe_invasion_fleet_wandering_action = yes }
				}
			}
		}
	}
}

kuat_contractor_create_defensive_fleet = {
	optimize_memory
	switch = {
		trigger = has_global_flag
		difficult_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_1
			flag = kuat_contractor_defenced_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T3  DIFF = 0 HEALTH = 6
			Location = prev.star 
		} }
		normal_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_2
			flag = kuat_contractor_defenced_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T3  DIFF = 1 HEALTH = 4
			Location = prev.star 
		} }
		easy_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_3
			flag = kuat_contractor_defenced_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T3  DIFF = 2 HEALTH = 2
			Location = prev.star 
		} }
		ban_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_4
			flag = kuat_contractor_defenced_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T3  DIFF = 1 HEALTH = 8
			Location = prev.star 
		} }
		default = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_5
			flag = kuat_contractor_defenced_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T3  DIFF = 3 HEALTH = 1
			Location = prev.star 
		} }
	}
}

kuat_contractor_create_retrun_invasion_fleet_detail = {
	optimize_memory
	switch = {
		trigger = has_global_flag
		difficult_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_6
			flag = kuat_contractor_invasion_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T2  DIFF = 0 HEALTH = 6
			Location = prev
		} }
		normal_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_7
			flag = kuat_contractor_invasion_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T2  DIFF = 1 HEALTH = 4
			Location = prev
		} }
		easy_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_8
			flag = kuat_contractor_invasion_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T2  DIFF = 2 HEALTH = 2
			Location = prev
		} }
		ban_exe_invasion = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_9
			flag = kuat_contractor_invasion_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T2  DIFF = 1 HEALTH = 8
			Location = prev 
		} }
		default = { create_exe_invasion_fleet = {
			NAME = DRIFTERFLEET_10
			flag = kuat_contractor_invasion_fleet
			is_boss = yes  can_disband = no
			Fleet_owner = event_target:kuat_contractor_hostile
			bombardment = exe_invasion_bombardment
			Drift_Battleship = @infinite_invasion_BattleCruser_num_T1 Drift_Crusier = @infinite_invasion_BattleCruser_num_T2  DIFF = 3 HEALTH = 1			
			Location = prev
		} }
	}
}

kuat_contractor_create_elternal_system_warbase = {
	optimize_memory
	set_star_flag = cannot_be_hit_by_aow_starfall_spear
	system_star = {
		create_fleet = {
			name = "Name_Eternal_station_fleet"
			settings = { spawn_debris = no can_disband = no }
			effect = {
				set_owner = event_target:kuat_contractor_hostile
				create_ship = { design = "NAME_DRFT_STARBASE_MEGASTRUCTURE_SECTION" effect = { 
					set_ship_flag = enable_drft_ship_inital set_disable_at_health = 0.01
					if = {
						limit = { solar_system = {
							is_same_value = event_target:kuat_white_hole_system_7
						} }
						set_variable = { which = DRFT_SHIP_HEALTH_VAR value = 30 }
					}
					else = { set_variable = { which = DRFT_SHIP_HEALTH_VAR value = 15 } }
				} }
				set_fleet_flag = kuat_contractor_capital_fleet
				set_location = { target = prev distance = -1 angle = 0 }
			}
		}
		create_ambient_object = { type = "kuat_plague_storm_1" location = this }
		last_created_ambient_object = {
			set_ambient_object_flag = space_storm_object
			set_location = { target = prev distance = 0 angle = random }
		}
	}
	system_star = {
		set_variable = {
			which = kuat_contractor_white_hole_create_ships
			value = event_target:global_event_country.exe_invasion_difficult_global_var
		}
		multiply_variable = {
			which = kuat_contractor_white_hole_create_ships
			value = 0.1
		}
		floor_variable = kuat_contractor_white_hole_create_ships
		subtract_variable = {
			which = kuat_contractor_white_hole_create_ships
			value = 1
		}
		if = {
			limit = { check_variable = {
				which = kuat_contractor_white_hole_create_ships
				value < 1
			} }
			set_variable = { which = kuat_contractor_white_hole_create_ships value = 1 }
		}
		while = {
			count = kuat_contractor_white_hole_create_ships
			kuat_contractor_create_defensive_fleet = yes 
		}
	}
}

kuat_contractor_randomlist_battle_duplcate_ship = {
	root.fromfromfrom = { if = {
		limit = { 
			any_owned_ship = { kuat_is_kuat_ship = no } 
			is_ship_class = shipclass_military
		}
		set_variable = { which = count_drft_faction_battle_duplicate_ship value = 0 }
		export_trigger_value_to_variable = {
			trigger = count_owned_ship
			parameters = { limit = { is_ship_class = shipclass_military kuat_is_kuat_ship = no } }
			variable = count_drft_faction_battle_duplicate_ship
		}
		random_list = {
			1 = { modifier = { factor = 0 NOT = { has_global_flag = kuat_impulse_mod_settings } } multiply_variable = { which = count_drft_faction_battle_duplicate_ship value = 1 } }
			1 = { multiply_variable = { which = count_drft_faction_battle_duplicate_ship value = 0.10 } }
			1 = { multiply_variable = { which = count_drft_faction_battle_duplicate_ship value = 0.15 } }
			1 = { multiply_variable = { which = count_drft_faction_battle_duplicate_ship value = 0.20 } }
			1 = { multiply_variable = { which = count_drft_faction_battle_duplicate_ship value = 0.25 } }
			1 = { multiply_variable = { which = count_drft_faction_battle_duplicate_ship value = 0.30 } }
		}
		reroll_random = yes
		floor_variable = count_drft_faction_battle_duplicate_ship
		if = {
			limit = { check_variable = { which = count_drft_faction_battle_duplicate_ship value < 1 } }
			set_variable = { which = count_drft_faction_battle_duplicate_ship value = 1 }
		}
		while = {
			count = count_drft_faction_battle_duplicate_ship
			random_owned_ship = {
				limit = { kuat_is_kuat_ship = no is_ship_class = shipclass_military }
				save_event_target_as = drft_faction_battle_duplicate_ship
				root.fromfrom = { create_ship = { design = event_target:drft_faction_battle_duplicate_ship } }
			}
		}
	} }
}

kuat_contractor_plague_kill_people = {
	random_owned_pop = {
		limit = { kuat_trigger_plague_is_immune = no }
		weights = {
			base = 10
			modifier = { factor = 0.5 has_citizenship_rights = yes }
			modifier = { factor = 0.5 kuat_trigger_plague_is_resist = yes }
			modifier = { factor = 2 is_enslaved = yes }
		}
		random_list = {
			1 = { modifier = { factor = 0 kuat_trigger_plague_is_resist = no } }
			9 = {
				owner = {
					country_event = { id = kuat_plague.56 days = 1 }
					if = {
						limit = { has_event_chain = kuat_chain_plague_count }
						add_event_chain_counter = {
							event_chain = kuat_chain_plague_count
							counter = kuat_chain_plague_kill_pop_count
							amount = 1
						}
					}
				}
				every_playable_country = {
					limit = { has_event_chain = kuat_chain_plague_count }
					add_event_chain_counter = {
						event_chain = kuat_chain_plague_count
						counter = kuat_chain_plague_kill_pop_count_total
						amount = 1
					}
				}
				root = {
					if = {
						limit = {
							has_global_flag = kuat_plague_lvl_3
							count_planet_army = { count < 15 }
						}
						random_list = {
							5 = {
								modifier = {
									factor = 2
									owner = { is_ai = yes }
								}
								modifier = {
									factor = 4
									owner = { has_technology = kuat_tech_plague_anti_zombie }
								}
							}
							15 = {
								create_army = {
									name = Zombies
									owner = event_target:kuat_plague_zombie_country
									species = event_target:kuat_plague_zombie_country
									type = kuat_plague_zombie_army
								}
								every_playable_country = {
									limit = { has_event_chain = kuat_chain_plague_count }
									add_event_chain_counter = {
										event_chain = kuat_chain_plague_count
										counter = kuat_chain_plague_zombie_count_total
										amount = 1
									}
								}
							}
						}
					}
				}
				if = {
					limit = { exists = planet planet = { has_building = building_kuat_command_center_auto } }
					planet = { subtract_variable = { which = planet_production_array value = 5 } }
				}
				else = { kill_pop = yes }
				event_target:global_event_country = { change_variable = { which = kuat_plague_pops_dead value = 1 } }
			}
		}
	}
}

kuat_contractor_plague_random_list_effect = {
	random_list = {
		# NOT die
		10 = {
			# crime
			inline_script = kuat_plague_modifier/kuat_plague_sample
			[[IMMUNE] inline_script = kuat_plague_modifier/kuat_plafgue_trigger/kuat_plague_yes_immunes ]
			[[!IMMUNE] inline_script = kuat_plague_modifier/kuat_plafgue_trigger/kuat_plague_no_immunes ]
		}
		# die
		40 = {
			inline_script = kuat_plague_modifier/kuat_plague_sample_a
			[[IMMUNE] kuat_contractor_plague_kill_people = yes ]
			[[!IMMUNE] planet_event = { id = kuat_plague.1 days = 90 random = 90 }]
		}
	}
}