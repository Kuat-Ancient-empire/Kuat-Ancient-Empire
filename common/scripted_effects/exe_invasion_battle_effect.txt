#scope check
# kuat_print_scope = {
# 	optimize_memory
# 	log = "------------------------------"
# 	log = "- Printing the current scopes (effect) -"
# 	log = "- This: \\[This.GetName]"
# 	log = "- Root: \\[Root.GetName]"
# 	log = "- Prev: \\[Prev.GetName]"
# 	log = "- PrevPrev: \\[PrevPrev.GetName]"
# 	log = "- PrevPrevPrev: \\[PrevPrevPrev.GetName]"
# 	log = "- PrevPrevPrevPrev: \\[PrevPrevPrevPrev.GetName]"
# 	log = "- From: \\[From.GetName]"
# 	log = "- FromFrom: \\[FromFrom.GetName]"
# 	log = "- FromFromFrom: \\[FromFromFrom.GetName]"
# 	log = "- FromFromFromFrom: \\[FromFromFromFrom.GetName]"
# 	log = "- This's Solar System: \\[This.GetStarName]"
# 	log = "- This's Planet: \\[This.Planet.GetName]"
# 	log = "- This's Sector: \\[This.Sector.GetName]"
# 	log = "- Root's Solar System: \\[Root.GetStarName]"
# 	log = "- Root's Owner's Name: \\[Root.Owner.GetName]"
# 	log = "- Root's Owner's Capital's Name: \\[Root.Owner.Capital.GetName]"
# 	log = "- Owner: \\[Owner.GetName]"
# 	log = "------------------------------"
# }

# scope: ship
@kuat_flagship_proection_mult = 0.1
eternal_increase_executor_power = {
	optimize_memory
	if = {
		limit = { NOT = { has_ship_flag = kuat_has_eternal_increase_executor_power_temple } }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ subtract = @kuat_flagship_proection_mult }
		clear_ship_modifier = { modifier = shipclass_military_hull_mult DAYS = $DAYS$ subtract = @kuat_flagship_proection_mult }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = @kuat_flagship_proection_mult }

		[[TYPE] if = { limit = { has_hp <= @$TYPE$_increase_hp_T9 } add_modifier = { modifier = $TYPE$_increase_hp_T9 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T8 } add_modifier = { modifier = $TYPE$_increase_hp_T8 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T7 } add_modifier = { modifier = $TYPE$_increase_hp_T7 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T6 } add_modifier = { modifier = $TYPE$_increase_hp_T6 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T5 } add_modifier = { modifier = $TYPE$_increase_hp_T5 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T4 } add_modifier = { modifier = $TYPE$_increase_hp_T4 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T3 } add_modifier = { modifier = $TYPE$_increase_hp_T3 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T2 } add_modifier = { modifier = $TYPE$_increase_hp_T2 days = $DAYS$ } }
		else_if = { limit = { has_hp <= @$TYPE$_increase_hp_T1 } add_modifier = { modifier = $TYPE$_increase_hp_T1 days = $DAYS$ } }]

		if = { limit = { kuat_is_flagship_system_protection = yes } set_disable_at_health = 0.01 }
		set_timed_ship_flag = { flag = kuat_has_eternal_increase_executor_power_temple days = $DAYS$ }
	}
}

increase_ship_hp_effect_change = {
	optimize_memory
	every_owned_ship = {
		set_timed_ship_flag = { flag = kuat_executor_checkpoint days = $DAYS$ }
		eternal_increase_executor_power = { DAYS = $DAYS$ TYPE = $TYPE$ }
		ship_event = { id = exe_invasion.119 }
	}
	#set_fleet_modifier = { SUB = Eternal_submit DAYS = $DAYS$ }
}

clear_ship_modifier = {
	export_modifier_to_variable = { modifier = $modifier$ variable = $modifier$_value_iep }
	[[subtract] subtract_variable = { which = $modifier$_value_iep value = $subtract$ }]
	[[change] change_variable = { which = $modifier$_value_iep value = $change$ }]
	[[divide] divide_variable = { which = $modifier$_value_iep value = $divide$ }]
	[[multiply] multiply_variable = { which = $modifier$_value_iep value = $multiply$ }]
	add_modifier = { modifier = iep_basic_$modifier$ multiplier = $modifier$_value_iep days = $DAYS$ } 
	clear_variable = $modifier$_value_iep
}

clear_ship_repeatable_modifier = {
	optimize_memory
	clear_repeatable_modifier = { TYPE = explosive	 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = kinetic  	 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = energy 	 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = strike_craft 	 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = gravity 	 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = psionic 	 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = anti_psionic 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = ancient_primary 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = titan_primary 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = titan_secondary 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = zeta_crisis_primary 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = zeta_crisis_primary_alt 	multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = zeta_crisis_secondary 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = SRA_SRA 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = SRA_RE_Core 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = H.D.energy 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = HD.M.kinetic 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = PrimaMateria 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = magicia 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = rulerule 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fake_madoka 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = arcane				 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = cosmic 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = light_power 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = wsg_pantsu 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = tesla 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = sr_uf 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = gungnir 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = xianzhe 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = knife 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = lingli 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = magic 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = nytowith 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = light						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = keto 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = Akso 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = LsScepter 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = son 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = prism 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = Electronic 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = beacon 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = aoe 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fireworks 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = kancolle 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = kancolle_shinkai 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = aon_rpg_attack 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = aon_rpg_magic 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = sfdoll 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = nano 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_magic 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_wind_magic 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_time_magic 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_earth_magic 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_pyromancy_magic 	multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_lightning_magic 	multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_bright_magic 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_dark_magic 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_space_magic 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_aqua_magic 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_life_magic 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = KZ_VOY_temporal 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = ge_void_energy 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = magi 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = charm 						multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = mystical 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = close_combat 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = critical 					multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_block 				multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_battle_continuation 	multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_only_one 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_multi_level 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_saber 			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_archer 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_lancer 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_rider			multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_caster 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_assassin 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = fgosw_skill_berserker 		multiply = $multiply$ DAYS = $DAYS$ }
	clear_repeatable_modifier = { TYPE = blackash 					multiply = $multiply$ DAYS = $DAYS$ }
}

remove_increase_hp_modifier = {
	remove_modifier = $TYPE$_increase_hp_T9
	remove_modifier = $TYPE$_increase_hp_T8
	remove_modifier = $TYPE$_increase_hp_T7
	remove_modifier = $TYPE$_increase_hp_T6
	remove_modifier = $TYPE$_increase_hp_T5
	remove_modifier = $TYPE$_increase_hp_T4
	remove_modifier = $TYPE$_increase_hp_T3
	remove_modifier = $TYPE$_increase_hp_T2
	remove_modifier = $TYPE$_increase_hp_T1
}

remove_executor_power = {
	optimize_memory
	remove_ship_flag = kuat_has_eternal_increase_executor_power_temple
	remove_increase_hp_modifier = { TYPE = kt }
	remove_increase_hp_modifier = { TYPE = ee }
	remove_standard_modifier_system = { TITLE = iep_basic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = explosive }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = kinetic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = energy }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = strike_craft }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = gravity }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = psionic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = anti_psionic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = ancient_primary }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = titan_primary }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = titan_secondary }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = zeta_crisis_primary }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = zeta_crisis_primary_alt }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = zeta_crisis_secondary }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = SRA_SRA }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = SRA_RE_Core }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = H.D.energy }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = HD.M.kinetic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = PrimaMateria }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = magicia }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = rulerule }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fake_madoka }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = arcane }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = cosmic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = light_power }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = wsg_pantsu }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = tesla }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = sr_uf }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = gungnir }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = xianzhe }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = knife }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = lingli }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = nytowith }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = light }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = keto }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = Akso }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = LsScepter }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = son }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = prism }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = Electronic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = beacon }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = aoe }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fireworks }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = kancolle }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = kancolle_shinkai }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = aon_rpg_attack }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = aon_rpg_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = sfdoll }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = nano }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_wind_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_time_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_earth_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_pyromancy_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_lightning_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_bright_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_dark_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_space_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_aqua_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_life_magic }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = KZ_VOY_temporal }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = ge_void_energy }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = magi }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = charm }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = mystical }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = close_combat }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = critical }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_block }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_battle_continuation }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_only_one }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_multi_level }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_saber }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_archer }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_lancer }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_rider }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_caster }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_assassin }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = fgosw_skill_berserker }
	remove_repetable_modifier = { TITLE = iep_basic TYPE = blackash }
}

remove_standard_modifier_system = {
	remove_modifier = $TITLE$_ship_shield_penetration_mult
	remove_modifier = $TITLE$_ship_armor_penetration_mult			
	remove_modifier = $TITLE$_ship_armor_damage_mult				
	remove_modifier = $TITLE$_ship_shield_damage_mult				
	remove_modifier = $TITLE$_ship_hull_damage_mult				
	remove_modifier = $TITLE$_ship_tracking_mult	
	remove_modifier = $TITLE$_ship_accuracy_mult				
	remove_modifier = $TITLE$_ship_weapon_damage						
	remove_modifier = $TITLE$_ship_hull_regen_add_perc			
	remove_modifier = $TITLE$_ship_armor_regen_add_perc			
	remove_modifier = $TITLE$_ship_shield_regen_add_perc		
	remove_modifier = $TITLE$_ship_hull_regen_add_static			
	remove_modifier = $TITLE$_ship_armor_regen_add_static			
	remove_modifier = $TITLE$_ship_shield_regen_add_static	
	remove_modifier = $TITLE$_shipclass_military_hull_mult
	remove_modifier = $TITLE$_ship_speed_mult
	remove_modifier = $TITLE$_ship_hull_mult		
	remove_modifier = $TITLE$_ship_armor_mult						
	remove_modifier = $TITLE$_ship_shield_mult			
	remove_modifier = $TITLE$_ship_shield_reduction	
	remove_modifier = $TITLE$_ship_armor_reduction								
	remove_modifier = $TITLE$_ship_weapon_range_mult						
	remove_modifier = $TITLE$_ship_fire_rate_mult							
	remove_modifier = $TITLE$_ship_tracking_add							
	remove_modifier = $TITLE$_ship_accuracy_add							
	remove_modifier = $TITLE$_ship_armor_add								
	remove_modifier = $TITLE$_ship_shield_add
	remove_modifier = $TITLE$_ship_armor_hardening_add
	remove_modifier = $TITLE$_ship_shield_hardening_add
	remove_modifier = $TITLE$_ship_disengage_chance_reduction
}

clear_repeatable_modifier = {
	optimize_memory
	if = {
		limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 1 } }
		clear_ship_modifier = { modifier = weapon_type_$TYPE$_weapon_damage_mult multiply = $multiply$ DAYS = $DAYS$ }
	}
	if = {
		limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 1 } }
		clear_ship_modifier = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult multiply = $multiply$ DAYS = $DAYS$ }
	}
}

remove_repetable_modifier = {
	optimize_memory
	remove_modifier = $TITLE$_weapon_type_$TYPE$_weapon_damage_mult
	remove_modifier = $TITLE$_weapon_type_$TYPE$_weapon_fire_rate_mult
}

# initial = 0  min = 0.25  small = 0.5  medium = 0.75  max = 0.99  origin = 1
# double = 2  fifth = 5  Tenth = 10  one_of_fourth = 25  one_of_double = 50  hundred = 100  million = 1000000  billion = 2000000
random_list_eternal_fleet_rate = {
	optimize_memory
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = explosive }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = kinetic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = energy }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = strike_craft }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = arcane }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = cosmic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = gravity }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = psionic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = anti_psionic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = ancient_primary }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = titan_primary }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = titan_secondary }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = zeta_crisis_primary }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = zeta_crisis_primary_alt }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = zeta_crisis_secondary }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = SRA_SRA }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = SRA_RE_Core }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = H.D.energy }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = HD.M.kinetic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = PrimaMateria }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = light_power }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = wsg_pantsu }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = tesla }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = kancolle }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = kancolle_shinkai }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = magicia }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = rulerule }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fake_madoka }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = sr_uf }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = gungnir }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = xianzhe }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = knife }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = lingli }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = nytowith }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = light }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = keto }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = Akso }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = LsScepter }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = son }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = prism }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = Electronic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = beacon }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = aoe }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fireworks }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = aon_rpg_attack }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = aon_rpg_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = sfdoll }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = nano }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_wind_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_time_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_earth_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_pyromancy_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_lightning_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_bright_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_dark_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_space_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_aqua_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_life_magic }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = KZ_VOY_temporal }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = ge_void_energy }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = magi }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = charm }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = mystical }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = close_combat }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = critical }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_block }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_battle_continuation }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_only_one }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_multi_level }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_saber }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_archer }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_lancer }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_rider }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_caster }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_assassin }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = fgosw_skill_berserker }
	set_repeatable_eternal_fleet_mult_rate_to_damage = { TYPE = blackash }
}
set_repeatable_eternal_fleet_mult_rate_to_damage = {
	optimize_memory
	if = {
		limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 0 } }
		set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = initial RATE = -0.75 } 
		# if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 200 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.65 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 100 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.70 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 90 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.75 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 80 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.80 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 70 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.85 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 60 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.80 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 50 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.85 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 40 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.90 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 30 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.95 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 20 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -0.90 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_fire_rate_mult value > 1 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_fire_rate_mult PARAMATER2 = weapon_type_$TYPE$_weapon_damage_mult UNIT = origin RATE = -1 } 
		# }
	}
}
#NO USE
set_repeatable_eternal_fleet_mult_damage_to_rate = {
	optimize_memory
	if = {
		limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 0 } }
		set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = initial RATE = 0 } 
		# if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 200 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.01 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 100 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.10 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 90 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.20 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 80 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.30 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 70 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.40 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 60 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.50 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 50 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.60 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 40 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.70 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 30 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.80 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 20 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.98 } 
		# }
		# else_if = {
		# 	limit = { check_modifier_value = { modifier = weapon_type_$TYPE$_weapon_damage_mult value > 10 } }
		# 	set_standard_battle_repeatable_modifier = { PARAMATER1 = weapon_type_$TYPE$_weapon_damage_mult PARAMATER2 = weapon_type_$TYPE$_weapon_fire_rate_mult UNIT = Tenth RATE = -0.99 } 
		# }
	}
}

# THIS: SOLAR SYSTEM
setup_invinciable_protection_pragram = {
	optimize_memory
	if = {
		limit = { is_in_combat = yes }
		if = { 
			limit = { NOT = { has_ship_flag = fire_ship_var } } 
			random_list_eternal_fleet_rate = yes 
		}
		$KEY$ = {
			armor_hardening = yes
			shield_hardening = yes
			fire_rate_mult = yes
			hull_damage = yes
			shield_damage = yes
			armor_damage = yes

			weapon_damage = yes
			shield_penetration = yes
			armor_penetration = yes
			armor_regen_add_perc = yes
			shield_regen_add_perc = yes
			hull_mult = yes
			armor_mult = yes
			shield_mult = yes
			tracking = yes
			accuracy = yes
			tracking_add = yes
			accuracy_add = yes
			shield_add = yes
			armor_add = yes
			shield_reduction = yes
			armor_reduction = yes
			ship_speed = yes
		}
		if = {
			limit = { NOT = { has_ship_flag = fire_ship_var } }
			ship_event = { id = $ID$ days = 1 } 
			set_ship_flag = fire_ship_var
		}
		else = { ship_event = { id = $ID$ days = 3 } }
	}
	else = { clear_battleship_modifier_fixed_ship = yes }
}
setup_invinciable_attacketion_pragram = {
	optimize_memory
	if = {
		limit = { is_in_combat = yes }
		if = { 
			limit = { NOT = { has_ship_flag = fire_ship_var } } 
			random_list_eternal_fleet_rate = yes 
		}
		$KEY$ = {
			armor_hardening = yes
			shield_hardening = yes
			fire_rate_mult = yes
			hull_regen_add_static = yes
			armor_regen_add_static = yes
			shield_regen_add_static = yes

			hull_regen_add_perc_standard = yes
			shield_regen_add_perc_standard = yes
			disengage_reduction_standard = yes
			armor_regen_add_perc_standard = yes
			shield_penetration_standard = yes
			armor_penetration_standard = yes
			armor_damage_standard = yes
			shield_damage_standard = yes
			hull_damage_standard = yes
			weapon_damage_standard = yes
		}
		set_ship_flag = fire_ship_var
		ship_event = { id = $ID$ days = 1 }
	}
	else = { clear_battleship_modifier_fixed_ship = yes }
}

# initial = 0  min = 0.25  small = 0.5  medium = 0.75  large = 0.90  max = 0.99  origin = 1
# double = 2  fifth = 5  Tenth = 10  one_of_fourth = 25  one_of_double = 50  hundred = 100 double_hundred = 200  million = 1000000  billion = 5000000
set_easy_eternal_fleet_mult_modifier = {
	optimize_memory
	[[armor_hardening] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[shield_hardening] set_eternal_fleet_standard_modifier 				= { PARAMATER = ship_shield_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[fire_rate_mult] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_fire_rate_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]  
	[[armor_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_damage_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_shield_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_damage] set_eternal_fleet_standard_modifier 						= { PARAMATER = ship_hull_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_hull_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[armor_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_armor_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_shield_regen_add_static			RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 

#scope: fromfromfrom
	[[shield_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_shield_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }]  
	[[armor_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_armor_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }] 
	[[hull_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_hull_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[armor_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_armor_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[shield_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[disengage_reduction_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_disengage_chance_reduction 	RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[armor_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_armor_damage_mult 				RELATION = "!=" UNIT = origin 		UNIT1 = min }]  
	[[shield_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_shield_damage_mult 			RELATION = "!=" UNIT = origin 		UNIT1 = min }]  
	[[hull_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_hull_damage_mult				RELATION = "!=" UNIT = origin 		UNIT1 = min }]  
	[[weapon_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_weapon_damage 					RELATION = "!=" UNIT = origin 		UNIT1 = min }]  

#scope: fromfrom
	[[weapon_damage] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_weapon_damage					RELATION = "<" UNIT = medium 		UNIT1 = one_of_fourth }]   
	[[shield_penetration] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_penetration_mult		RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[armor_penetration] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_penetration_mult			RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[hull_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_hull_regen_add_perc			RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[armor_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_armor_regen_add_perc			RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[shield_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[hull_mult] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_hull_mult 						RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[armor_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_armor_mult						RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[shield_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_mult					RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[weapon_range_mult] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_weapon_range_mult 				RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[tracking] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_tracking_mult 					RELATION = "<" UNIT = min 			UNIT1 = min }]  
	[[accuracy] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_accuracy_mult 					RELATION = "<" UNIT = min 			UNIT1 = min }]   
	[[tracking_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_tracking_add 					RELATION = "<" UNIT = one_of_fourth UNIT1 = one_of_fourth }]  
	[[accuracy_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_accuracy_add					RELATION = "<" UNIT = one_of_fourth UNIT1 = one_of_fourth }]  
	[[shield_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_add 					RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[armor_add] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_armor_add 						RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[shield_reduction] set_eternal_fleet_protection_modifier				= { PARAMATER = ship_shield_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]  
	[[armor_reduction] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]
	[[ship_speed] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_speed_mult 					RELATION = "<" UNIT = initial 		UNIT1 = initial }]
}

set_normal_eternal_fleet_mult_modifier = {
	optimize_memory
	[[armor_hardening] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[shield_hardening] set_eternal_fleet_standard_modifier 				= { PARAMATER = ship_shield_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[fire_rate_mult] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_fire_rate_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]  
	[[armor_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_damage_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_shield_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_damage] set_eternal_fleet_standard_modifier 						= { PARAMATER = ship_hull_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_hull_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[armor_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_armor_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_shield_regen_add_static			RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 

#scope: fromfromfrom
	[[shield_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_shield_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }]  
	[[armor_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_armor_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }] 
	[[hull_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_hull_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[armor_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_armor_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[shield_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[disengage_reduction_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_disengage_chance_reduction 	RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[armor_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_armor_damage_mult 				RELATION = "!=" UNIT = origin 		UNIT1 = small }]  
	[[shield_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_shield_damage_mult 			RELATION = "!=" UNIT = origin 		UNIT1 = small }]  
	[[hull_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_hull_damage_mult				RELATION = "!=" UNIT = origin 		UNIT1 = small }]  
	[[weapon_damage_standard] set_eternal_fleet_insane_damage_modifier 		= { PARAMATER = ship_weapon_damage 					RELATION = "!=" UNIT = origin 		UNIT1 = small }]  

#scope: fromfrom
	[[weapon_damage] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_weapon_damage					RELATION = "<" UNIT = origin 		UNIT1 = one_of_double }]   
	[[shield_penetration] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_penetration_mult		RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[armor_penetration] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_penetration_mult			RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[hull_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_hull_regen_add_perc			RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[armor_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_armor_regen_add_perc			RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[shield_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[hull_mult] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_hull_mult 						RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[armor_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_armor_mult						RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[shield_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_mult					RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[weapon_range_mult] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_weapon_range_mult 				RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[tracking] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_tracking_mult 					RELATION = "<" UNIT = small 		UNIT1 = small }]  
	[[accuracy] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_accuracy_mult 					RELATION = "<" UNIT = small 		UNIT1 = small }]   
	[[tracking_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_tracking_add 					RELATION = "<" UNIT = one_of_double UNIT1 = one_of_double }]  
	[[accuracy_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_accuracy_add					RELATION = "<" UNIT = one_of_double UNIT1 = one_of_double }]  
	[[shield_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_add 					RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[armor_add] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_armor_add 						RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[shield_reduction] set_eternal_fleet_protection_modifier				= { PARAMATER = ship_shield_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]  
	[[armor_reduction] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]
	[[ship_speed] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_speed_mult 					RELATION = "<" UNIT = initial 		UNIT1 = initial }]
}
 
set_difiicult_eternal_fleet_mult_modifier = {
	optimize_memory
	[[armor_hardening] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[shield_hardening] set_eternal_fleet_standard_modifier 				= { PARAMATER = ship_shield_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[fire_rate_mult] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_fire_rate_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]  
	[[armor_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_damage_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_shield_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_damage] set_eternal_fleet_standard_modifier 						= { PARAMATER = ship_hull_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_hull_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[armor_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_armor_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_shield_regen_add_static			RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 

#scope: fromfromfrom	
	[[shield_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_shield_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }]  
	[[armor_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_armor_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }] 
	[[hull_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_hull_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[armor_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_armor_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[shield_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[disengage_reduction_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_disengage_chance_reduction 	RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[armor_damage_standard] set_eternal_fleet_damage_modifier 				= { PARAMATER = ship_armor_damage_mult				RELATION = "!=" UNIT = origin		UNIT3 = large 		UNIT1 = medium		UNIT2 = small }]  
	[[shield_damage_standard] set_eternal_fleet_damage_modifier 			= { PARAMATER = ship_shield_damage_mult 			RELATION = "!=" UNIT = origin		UNIT3 = large 		UNIT1 = medium		UNIT2 = small }]  
	[[hull_damage_standard] set_eternal_fleet_damage_modifier 				= { PARAMATER = ship_hull_damage_mult 				RELATION = "!=" UNIT = origin		UNIT3 = large 		UNIT1 = medium		UNIT2 = small }]  
	[[weapon_damage_standard] set_eternal_fleet_damage_modifier 			= { PARAMATER = ship_weapon_damage 					RELATION = "!=" UNIT = origin		UNIT3 = large 		UNIT1 = medium		UNIT2 = small }]    

#scope: fromfrom
	[[weapon_damage] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_weapon_damage					RELATION = "<" UNIT = double 		UNIT1 = hundred }]   
	[[shield_penetration] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_penetration_mult		RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[armor_penetration] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_penetration_mult			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[hull_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_hull_regen_add_perc			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[armor_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_armor_regen_add_perc			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[shield_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[hull_mult] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_hull_mult 						RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[armor_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_armor_mult						RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[shield_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_mult					RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[weapon_range_mult] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_weapon_range_mult 				RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[tracking] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_tracking_mult 					RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[accuracy] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_accuracy_mult 					RELATION = "<" UNIT = origin 		UNIT1 = origin }]   
	[[tracking_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_tracking_add 					RELATION = "<" UNIT = hundred 		UNIT1 = hundred }]  
	[[accuracy_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_accuracy_add					RELATION = "<" UNIT = hundred 		UNIT1 = hundred }]  
	[[shield_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_add 					RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[armor_add] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_armor_add 						RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[shield_reduction] set_eternal_fleet_protection_modifier				= { PARAMATER = ship_shield_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]  
	[[armor_reduction] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]
	[[ship_speed] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_speed_mult 					RELATION = "<" UNIT = initial 		UNIT1 = initial }] 
}

set_ban_eternal_fleet_mult_modifier = {
	optimize_memory
	[[armor_hardening] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[shield_hardening] set_eternal_fleet_standard_modifier 				= { PARAMATER = ship_shield_hardening_add 				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 
	[[fire_rate_mult] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_fire_rate_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]  
	[[armor_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_armor_damage_mult 					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_damage] set_eternal_fleet_standard_modifier 					= { PARAMATER = ship_shield_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_damage] set_eternal_fleet_standard_modifier 						= { PARAMATER = ship_hull_damage_mult					RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[hull_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_hull_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[armor_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_armor_regen_add_static				RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }]
	[[shield_regen_add_static] set_eternal_fleet_standard_modifier 			= { PARAMATER = ship_shield_regen_add_static			RELATION = "!=" OUTPUT_VALUE = 0 	UNIT_VALUE = 0 }] 

#scope: fromfromfrom	
	[[shield_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_shield_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }]  
	[[armor_penetration_standard] set_eternal_fleet_standard_modifier 		= { PARAMATER = ship_armor_penetration_mult 		RELATION = "!=" OUTPUT_VALUE = -1 	UNIT_VALUE = 1 }] 
	[[hull_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_hull_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[armor_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_armor_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }]
	[[shield_regen_add_perc_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[disengage_reduction_standard] set_eternal_fleet_standard_modifier 	= { PARAMATER = ship_disengage_chance_reduction 	RELATION = "!=" OUTPUT_VALUE = 1 	UNIT_VALUE = -1 }] 
	[[armor_damage_standard] set_eternal_fleet_damage_modifier 				= { PARAMATER = ship_armor_damage_mult 				RELATION = "!=" UNIT = origin		UNIT3 = max 		UNIT1 = max			UNIT2 = medium }] 
	[[shield_damage_standard] set_eternal_fleet_damage_modifier 			= { PARAMATER = ship_shield_damage_mult 			RELATION = "!=" UNIT = origin		UNIT3 = max 		UNIT1 = max			UNIT2 = medium }]  
	[[hull_damage_standard] set_eternal_fleet_damage_modifier 				= { PARAMATER = ship_hull_damage_mult 				RELATION = "!=" UNIT = origin		UNIT3 = max 		UNIT1 = max			UNIT2 = medium }]   
	[[weapon_damage_standard] set_eternal_fleet_damage_modifier 			= { PARAMATER = ship_weapon_damage 					RELATION = "!=" UNIT = origin		UNIT3 = max 		UNIT1 = max			UNIT2 = medium }]  

#scope: fromfrom
	[[weapon_damage] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_weapon_damage					RELATION = "<" UNIT = fifth 		UNIT1 = double_hundred }]   
	[[shield_penetration] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_penetration_mult		RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[armor_penetration] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_penetration_mult			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[hull_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_hull_regen_add_perc			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[armor_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_armor_regen_add_perc			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[shield_regen_add_perc] set_eternal_fleet_protection_modifier 			= { PARAMATER = ship_shield_regen_add_perc 			RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[hull_mult] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_hull_mult 						RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[armor_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_armor_mult						RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[shield_mult] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_mult					RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[weapon_range_mult] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_weapon_range_mult 				RELATION = "<" UNIT = double 		UNIT1 = double }]  
	[[tracking] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_tracking_mult 					RELATION = "<" UNIT = origin 		UNIT1 = origin }]  
	[[accuracy] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_accuracy_mult 					RELATION = "<" UNIT = origin 		UNIT1 = origin }]   
	[[tracking_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_tracking_add 					RELATION = "<" UNIT = hundred 		UNIT1 = double_hundred }]  
	[[accuracy_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_accuracy_add					RELATION = "<" UNIT = hundred 		UNIT1 = double_hundred }]  
	[[shield_add] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_shield_add 					RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[armor_add] set_eternal_fleet_protection_modifier 						= { PARAMATER = ship_armor_add 						RELATION = "<" UNIT = million 		UNIT1 = million }]  
	[[shield_reduction] set_eternal_fleet_protection_modifier				= { PARAMATER = ship_shield_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]  
	[[armor_reduction] set_eternal_fleet_protection_modifier 				= { PARAMATER = ship_armor_reduction 				RELATION = ">" UNIT = initial 		UNIT1 = initial }]
	[[ship_speed] set_eternal_fleet_protection_modifier 					= { PARAMATER = ship_speed_mult 					RELATION = "<" UNIT = initial 		UNIT1 = initial }]
}

# tip:script scope available in penetration modifier, other will be error.
# parameter： modifier.
# UNIT_VALUE: modifier change units.
# OUTPUT_VALUE: target value of modifier.
# TYPE: value class type, for example change\subtract.
# SUPPORT: + OR -  
set_eternal_fleet_standard_modifier = {
	optimize_memory
	if = { 
		limit = { 
			NOR = { 
				has_ship_flag = $PARAMATER$_ship_cooldown 
				has_ship_flag = fire_ship_var
			}
			check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ $OUTPUT_VALUE$ }
		}
		export_modifier_to_variable = { modifier = $PARAMATER$ variable = $PARAMATER$_value }
		change_variable = { which = $PARAMATER$_value value = $UNIT_VALUE$ }
		add_modifier = { modifier = basic_$PARAMATER$ multiplier = $PARAMATER$_value }
		if = { limit = { is_variable_set = $PARAMATER$_value } clear_variable = $PARAMATER$_value }
		set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
	} 
	else_if = { 
		limit = { 
			has_ship_flag = fire_ship_var 
			NOT = { has_ship_flag = $PARAMATER$_ship_cooldown }
			check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ $OUTPUT_VALUE$ }
		}
		export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
		change_variable = { which = change_$PARAMATER$_value value = $UNIT_VALUE$ }
		change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
		add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
		if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
		set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
	}
}

# tip:script scope available in armor/shield/powerpoint modifier, other will be error.
# parameter： modifier  
# UNIT：Non flagship value  
# UNIT1：flagship value
# SUPPORT: -
set_eternal_fleet_damage_modifier = {
	optimize_memory
	if = {
		limit = { 
			NOR = { has_ship_flag = $PARAMATER$_ship_cooldown has_ship_flag = fire_ship_var }
			check_modifier_value = { modifier = $PARAMATER$ value > @mult_modifer_mult_$UNIT$_value } 
		}
		export_modifier_to_variable = { modifier = $PARAMATER$ variable = $PARAMATER$_value }
		change_variable = { which = $PARAMATER$_value value = @modifer_mult_$UNIT$_value }
		add_modifier = { modifier = basic_$PARAMATER$ multiplier = $PARAMATER$_value }
		if = { limit = { is_variable_set = $PARAMATER$_value } clear_variable = $PARAMATER$_value }
		set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
	} 
	else_if = { 
		limit = { has_ship_flag = fire_ship_var NOT = { has_ship_flag = $PARAMATER$_ship_cooldown } }
		if = {
			limit = { fleet = { has_fleet_flag = has_kuat_flagship_system } }
			if = { # -99
				limit = { 
					NOR = {
						AND = { exists = solar_system solar_system = { has_kuat_support_modifier_star_flag = yes } }
						fleet = { has_fleet_flag = has_kuat_subflagship_system }
					}
					check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @mult_modifer_mult_$UNIT1$_value } 
				}
				export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
				change_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT1$_value }
				change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
				add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
				if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
				set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
			}
			else_if = { #-75
				limit = {  
					OR = {
						AND = { exists = solar_system solar_system = { has_kuat_support_modifier_star_flag = yes } }
						fleet = { has_fleet_flag = has_kuat_subflagship_system }
					}
					check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @mult_modifer_mult_$UNIT2$_value } 
				}
				export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
				change_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT2$_value }
				change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
				add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
				if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
				set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
			}
		}
		else_if = {
			limit = { fleet = { NOT = { has_fleet_flag = has_kuat_flagship_system } } }
			if = { #-100
				limit = { 
					NOR = {
						AND = { exists = solar_system solar_system = { has_kuat_support_modifier_star_flag = yes } }
						fleet = { has_fleet_flag = has_kuat_subflagship_system }
					}
					check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @mult_modifer_mult_$UNIT$_value } 
				}
				export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
				change_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT$_value }
				change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
				add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
				if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
				set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
			}
			else_if = { #-99
				limit = { 
					OR = {
						AND = { exists = solar_system solar_system = { has_kuat_support_modifier_star_flag = yes } }
						fleet = { has_fleet_flag = has_kuat_subflagship_system }
					}
					check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @mult_modifer_mult_$UNIT3$_value } 
				}
				export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
				change_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT3$_value }
				change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
				add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
				if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
				set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
			}
		}
	}
}

# tip:script scope available in insane eternal damage system
# parameter： the modifier  
# UNIT：Non flagship value  
# UNIT1：flagship value
# RELATION： < > or = 
# SUPPORT -
set_eternal_fleet_insane_damage_modifier = {
	optimize_memory
	if = {
		limit = { 
			NOR = { 
				has_ship_flag = $PARAMATER$_ship_cooldown 
				has_ship_flag = fire_ship_var
			}
			check_modifier_value = { modifier = $PARAMATER$ value > @mult_modifer_mult_$UNIT$_value }
		}
		export_modifier_to_variable = { modifier = $PARAMATER$ variable = $PARAMATER$_value }
		change_variable = { which = $PARAMATER$_value value = @modifer_mult_$UNIT$_value }
		add_modifier = { modifier = basic_$PARAMATER$ multiplier = $PARAMATER$_value }
		if = { limit = { is_variable_set = $PARAMATER$_value } clear_variable = $PARAMATER$_value }
		set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
	} 
	else_if = { 
		limit = { 
			has_ship_flag = fire_ship_var 
			NOT = { has_ship_flag = $PARAMATER$_ship_cooldown }
			check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @mult_modifer_mult_$UNIT1$_value }
		}
		export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
		change_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT1$_value }
		change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
		add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
		if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
		set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
	}
}

# tip:script scope available in all modifier about protecting ship
# parameter： the modifier  
# UNIT：Non flagship value  
# RELATION： < > or = 
# SUPPORT: +
set_eternal_fleet_protection_modifier = {
	optimize_memory
	if = {
		limit = { 
			NOR = { 
				has_ship_flag = $PARAMATER$_ship_cooldown 
				has_ship_flag = fire_ship_var
			}
		}
		if = {
			limit = { 
				fleet = { NOT = { has_fleet_flag = has_kuat_flagship_system_addon_repeatable } }
				check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @modifer_mult_$UNIT$_value } 
			}
			export_modifier_to_variable = { modifier = $PARAMATER$ variable = $PARAMATER$_value }
			subtract_variable = { which = $PARAMATER$_value value = @modifer_mult_$UNIT$_value }
			add_modifier = { modifier = basic_$PARAMATER$ multiplier = $PARAMATER$_value }
			if = { limit = { is_variable_set = $PARAMATER$_value } clear_variable = $PARAMATER$_value }
			set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
		}
		else_if = {
			limit = { 
				fleet = { has_fleet_flag = has_kuat_flagship_system_addon_repeatable }
				check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @modifer_mult_$UNIT1$_value } 
			}
			export_modifier_to_variable = { modifier = $PARAMATER$ variable = $PARAMATER$_value }
			subtract_variable = { which = $PARAMATER$_value value = @modifer_mult_$UNIT1$_value }
			add_modifier = { modifier = basic_$PARAMATER$ multiplier = $PARAMATER$_value }
			if = { limit = { is_variable_set = $PARAMATER$_value } clear_variable = $PARAMATER$_value }
			set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
		}
	} 
	else_if = { 
		limit = { 
			has_ship_flag = fire_ship_var  
			NOT = { has_ship_flag = $PARAMATER$_ship_cooldown } 
		}
		if = {
			limit = { 
				fleet = { NOT = { has_fleet_flag = has_kuat_flagship_system_addon_repeatable } }
				check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @modifer_mult_$UNIT$_value } 
			}
			export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
			subtract_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT$_value }
			change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
			add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
			if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
			set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
		}
		else_if = {
			limit = { 
				fleet = { has_fleet_flag = has_kuat_flagship_system_addon_repeatable }
				check_modifier_value = { modifier = $PARAMATER$ value $RELATION$ @modifer_mult_$UNIT1$_value } 
			}
			export_modifier_to_variable = { modifier = $PARAMATER$ variable = change_$PARAMATER$_value }
			subtract_variable = { which = change_$PARAMATER$_value value = @modifer_mult_$UNIT1$_value }
			change_variable = { which = debug_change_$PARAMATER$_value value = change_$PARAMATER$_value }
			add_modifier = { modifier = change_basic_$PARAMATER$ multiplier = debug_change_$PARAMATER$_value }
			if = { limit = { is_variable_set = change_$PARAMATER$_value } clear_variable = change_$PARAMATER$_value }
			set_timed_ship_flag = { flag = $PARAMATER$_ship_cooldown days = 1 }
		}
	}
}


# tip:script scope available in repeatable technology
# parameter1： the repeatable fire rate modifier(input)
# parameter1： the repeatable damage modifier(output)
# UNIT：Value standard
set_standard_battle_repeatable_modifier = {
	optimize_memory
	if = {
		limit = { 
			NOR = { 
				has_ship_flag = repeatable_$PARAMATER1$_ship_cooldown 
				has_ship_flag = fire_ship_var
			} 
		}

		export_modifier_to_variable = { modifier = $PARAMATER1$ variable = $PARAMATER1$_value }
		subtract_variable = { which = $PARAMATER1$_value value = @modifer_mult_$UNIT$_value }
		add_modifier = { modifier = basic_$PARAMATER1$ multiplier = $PARAMATER1$_value }

		set_variable = { which = $PARAMATER2$_value value = $PARAMATER1$_value }
		multiply_variable = { which = $PARAMATER2$_value value = $RATE$ }
		add_modifier = { modifier = basic_$PARAMATER2$ multiplier = $PARAMATER2$_value }

		clear_variable = $PARAMATER1$_value clear_variable = $PARAMATER2$_value
		set_timed_ship_flag = { flag = repeatable_$PARAMATER1$_ship_cooldown days = 1 }
	} 
	else_if = { 
		limit = { 
			has_ship_flag = fire_ship_var
			NOT = { has_ship_flag = repeatable_$PARAMATER1$_ship_cooldown } 
		}

		export_modifier_to_variable = { modifier = $PARAMATER1$ variable = change_$PARAMATER1$_value }
		subtract_variable = { which = change_$PARAMATER1$_value value = @modifer_mult_$UNIT$_value }
		change_variable = { which = debug_change_$PARAMATER1$_value value = change_$PARAMATER1$_value }
		add_modifier = { modifier = change_basic_$PARAMATER1$ multiplier = debug_change_$PARAMATER1$_value }

		set_variable = { which = change_$PARAMATER2$_value value = change_$PARAMATER1$_value }
		multiply_variable = { which = change_$PARAMATER2$_value value = $RATE$ }
		change_variable = { which = debug_change_$PARAMATER2$_value value = change_$PARAMATER2$_value }
		add_modifier = { modifier = change_basic_$PARAMATER2$ multiplier = debug_change_$PARAMATER2$_value }

		clear_variable = change_$PARAMATER1$_value clear_variable = change_$PARAMATER2$_value
		set_timed_ship_flag = { flag = repeatable_$PARAMATER1$_ship_cooldown days = 1 }
	}
}

# tip:script scope available in superlazer waepon it is special weapn script only for superweapon
# parameter1： the repeatable fire rate modifier(input)
# parameter1： the repeatable damage modifier(output)
# UNIT：Value standard
set_standard_battle_superlazer_weapon_keeping_modifier = {
	optimize_memory
	if = {
		limit = { 
			NOR = { 
				has_ship_flag = superlazer_$PARAMATER1$_ship_cooldown 
				has_ship_flag = fire_ship_var
			} 
		}

		export_modifier_to_variable = { modifier = $PARAMATER1$ variable = super_lazer_$PARAMATER1$_var }
		add_modifier = { modifier = super_lazer_$PARAMATER1$_modifier multiplier = super_lazer_$PARAMATER1$_var }

		clear_variable = super_lazer_$PARAMATER1$_var
		set_timed_ship_flag = { flag = superlazer_$PARAMATER1$_ship_cooldown days = 1 }
	} 
	else_if = { 
		limit = { 
			has_ship_flag = fire_ship_var
			NOT = { has_ship_flag = superlazer_$PARAMATER1$_ship_cooldown } 
		}

		export_modifier_to_variable = { modifier = $PARAMATER1$ variable = debug_super_lazer_$PARAMATER1$_var }
		export_modifier_to_variable = { modifier = $PARAMATER2$ variable = debug_super_lazer_$PARAMATER2$_var }
		change_variable = { which = final_super_lazer_$PARAMATER1$_var value = debug_super_lazer_$PARAMATER1$_var }
		change_variable = { which = final_super_lazer_$PARAMATER1$_var value = debug_super_lazer_$PARAMATER2$_var }
		add_modifier = { modifier = debug_super_lazer_$PARAMATER1$_modifier multiplier = final_super_lazer_$PARAMATER1$_var }

		clear_variable = debug_super_lazer_$PARAMATER1$_var clear_variable = debug_super_lazer_$PARAMATER2$_var
		set_timed_ship_flag = { flag = superlazer_$PARAMATER1$_ship_cooldown days = 1 }
	}
}

clear_superlazer_system_fixed_ship = {
	optimize_memory
	remove_ship_flag = is_modifiering_superlazer 
	clear_variable = super_lazer_ship_fire_rate_mult_var
	remove_modifier = super_lazer_ship_fire_rate_mult_modifier
	clear_variable = debug_super_lazer_ship_fire_rate_mult_var
	clear_variable = debug_super_lazer_weapon_type_kuat_superlazer_scale_weapon_fire_rate_mult_var
	clear_variable = final_super_lazer_ship_fire_rate_mult_var
	remove_modifier = debug_super_lazer_ship_fire_rate_mult_modifier
	remove_ship_flag = fire_ship_var
}

# base modifier script
set_invasion_fleet_basic_modifier = { 
	optimize_memory
	add_modifier = { modifier = $SUB$ multiplier = $FACTOR$ days = $DAYS|-1$ } 
}

# reset all modifier
clear_battleship_modifier_fixed_ship = {
	optimize_memory
	remove_standard_modifier_system = { TITLE = basic }
	remove_standard_modifier_system = { TITLE = change_basic }
	remove_ship_modifier_trigger_flag = yes
	remove_total_repeatable_modifier = yes
	remove_all_ship_modifier_change_basic_variable = yes
}

remove_all_ship_modifier_change_basic_variable = {
	optimize_memory
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_hardening_add }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_hardening_add }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_penetration_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_penetration_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_hull_regen_add_perc }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_hull_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_regen_add_perc }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_regen_add_perc }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_reduction }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_reduction }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_weapon_range_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_fire_rate_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_weapon_damage }
	remove_ship_modifier_change_basic_variable = { PARAMATER = weapon_type_explosive_weapon_damage_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = weapon_type_energy_weapon_damage_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = weapon_type_kinetic_weapon_damage_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_tracking_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_tracking_add }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_accuracy_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_accuracy_add }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_add }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_add }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_hull_damage_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_shield_damage_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_armor_damage_mult }
	remove_ship_modifier_change_basic_variable = { PARAMATER = ship_speed_mult }

	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = explosive }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = kinetic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = energy }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = strike_craft }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = arcane }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = cosmic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = gravity }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = psionic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = anti_psionic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = ancient_primary }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = titan_primary }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = titan_secondary }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = zeta_crisis_primary }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = zeta_crisis_primary_alt }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = zeta_crisis_secondary }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = SRA_SRA }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = SRA_RE_Core }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = H.D.energy }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = HD.M.kinetic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = PrimaMateria }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = light_power }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = wsg_pantsu }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = tesla }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = kancolle }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = kancolle_shinkai }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = magicia }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = rulerule }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fake_madoka }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = sr_uf }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = gungnir }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = xianzhe }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = knife }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = lingli }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = nytowith }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = light }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = keto }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = Akso }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = LsScepter }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = son }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = prism }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = Electronic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = beacon }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = aoe }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fireworks }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = aon_rpg_attack }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = aon_rpg_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = sfdoll }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = nano }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_wind_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_time_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_earth_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_pyromancy_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_lightning_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_bright_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_dark_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_space_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_aqua_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_life_magic }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = KZ_VOY_temporal }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = ge_void_energy }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = magi }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = charm }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = mystical }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = close_combat }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = critical }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_block }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_battle_continuation }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_only_one }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_multi_level }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_saber }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_archer }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_lancer }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_rider }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_caster }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_assassin }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = fgosw_skill_berserker }
	remove_repeatable_ship_modifier_change_basic_vairable = { TYPE = blackash }
}

remove_total_repeatable_modifier = {
	optimize_memory
	remove_repetable_modifier = { TITLE = change_basic TYPE = explosive }
	remove_repetable_modifier = { TITLE = change_basic TYPE = kinetic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = energy }
	remove_repetable_modifier = { TITLE = change_basic TYPE = strike_craft }
	remove_repetable_modifier = { TITLE = change_basic TYPE = gravity }
	remove_repetable_modifier = { TITLE = change_basic TYPE = psionic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = anti_psionic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = ancient_primary }
	remove_repetable_modifier = { TITLE = change_basic TYPE = titan_primary }
	remove_repetable_modifier = { TITLE = change_basic TYPE = titan_secondary }
	remove_repetable_modifier = { TITLE = change_basic TYPE = zeta_crisis_primary }
	remove_repetable_modifier = { TITLE = change_basic TYPE = zeta_crisis_primary_alt }
	remove_repetable_modifier = { TITLE = change_basic TYPE = zeta_crisis_secondary }
	remove_repetable_modifier = { TITLE = change_basic TYPE = SRA_SRA }
	remove_repetable_modifier = { TITLE = change_basic TYPE = SRA_RE_Core }
	remove_repetable_modifier = { TITLE = change_basic TYPE = H.D.energy }
	remove_repetable_modifier = { TITLE = change_basic TYPE = HD.M.kinetic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = PrimaMateria }
	remove_repetable_modifier = { TITLE = change_basic TYPE = magicia }
	remove_repetable_modifier = { TITLE = change_basic TYPE = rulerule }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fake_madoka }
	remove_repetable_modifier = { TITLE = change_basic TYPE = arcane }
	remove_repetable_modifier = { TITLE = change_basic TYPE = cosmic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = light_power }
	remove_repetable_modifier = { TITLE = change_basic TYPE = wsg_pantsu }
	remove_repetable_modifier = { TITLE = change_basic TYPE = tesla }
	remove_repetable_modifier = { TITLE = change_basic TYPE = sr_uf }
	remove_repetable_modifier = { TITLE = change_basic TYPE = gungnir }
	remove_repetable_modifier = { TITLE = change_basic TYPE = xianzhe }
	remove_repetable_modifier = { TITLE = change_basic TYPE = knife }
	remove_repetable_modifier = { TITLE = change_basic TYPE = lingli }
	remove_repetable_modifier = { TITLE = change_basic TYPE = magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = nytowith }
	remove_repetable_modifier = { TITLE = change_basic TYPE = light }
	remove_repetable_modifier = { TITLE = change_basic TYPE = keto }
	remove_repetable_modifier = { TITLE = change_basic TYPE = Akso }
	remove_repetable_modifier = { TITLE = change_basic TYPE = LsScepter }
	remove_repetable_modifier = { TITLE = change_basic TYPE = son }
	remove_repetable_modifier = { TITLE = change_basic TYPE = prism }
	remove_repetable_modifier = { TITLE = change_basic TYPE = Electronic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = beacon }
	remove_repetable_modifier = { TITLE = change_basic TYPE = aoe }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fireworks }
	remove_repetable_modifier = { TITLE = change_basic TYPE = kancolle }
	remove_repetable_modifier = { TITLE = change_basic TYPE = kancolle_shinkai }
	remove_repetable_modifier = { TITLE = change_basic TYPE = aon_rpg_attack }
	remove_repetable_modifier = { TITLE = change_basic TYPE = aon_rpg_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = sfdoll }
	remove_repetable_modifier = { TITLE = change_basic TYPE = nano }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_wind_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_time_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_earth_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_pyromancy_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_lightning_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_bright_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_dark_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_space_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_aqua_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_life_magic }
	remove_repetable_modifier = { TITLE = change_basic TYPE = KZ_VOY_temporal }
	remove_repetable_modifier = { TITLE = change_basic TYPE = ge_void_energy }
	remove_repetable_modifier = { TITLE = change_basic TYPE = magi }
	remove_repetable_modifier = { TITLE = change_basic TYPE = charm }
	remove_repetable_modifier = { TITLE = change_basic TYPE = mystical }
	remove_repetable_modifier = { TITLE = change_basic TYPE = close_combat }
	remove_repetable_modifier = { TITLE = change_basic TYPE = critical }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_block }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_battle_continuation }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_only_one }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_multi_level }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_saber }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_archer }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_lancer }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_rider }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_caster }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_assassin }
	remove_repetable_modifier = { TITLE = change_basic TYPE = fgosw_skill_berserker }
	remove_repetable_modifier = { TITLE = change_basic TYPE = blackash }
	
	remove_repetable_modifier = { TITLE = basic TYPE = explosive }
	remove_repetable_modifier = { TITLE = basic TYPE = kinetic }
	remove_repetable_modifier = { TITLE = basic TYPE = energy }
	remove_repetable_modifier = { TITLE = basic TYPE = strike_craft }
	remove_repetable_modifier = { TITLE = basic TYPE = gravity }
	remove_repetable_modifier = { TITLE = basic TYPE = psionic }
	remove_repetable_modifier = { TITLE = basic TYPE = anti_psionic }
	remove_repetable_modifier = { TITLE = basic TYPE = ancient_primary }
	remove_repetable_modifier = { TITLE = basic TYPE = titan_primary }
	remove_repetable_modifier = { TITLE = basic TYPE = titan_secondary }
	remove_repetable_modifier = { TITLE = basic TYPE = zeta_crisis_primary }
	remove_repetable_modifier = { TITLE = basic TYPE = zeta_crisis_primary_alt }
	remove_repetable_modifier = { TITLE = basic TYPE = zeta_crisis_secondary }
	remove_repetable_modifier = { TITLE = basic TYPE = SRA_SRA }
	remove_repetable_modifier = { TITLE = basic TYPE = SRA_RE_Core }
	remove_repetable_modifier = { TITLE = basic TYPE = H.D.energy }
	remove_repetable_modifier = { TITLE = basic TYPE = HD.M.kinetic }
	remove_repetable_modifier = { TITLE = basic TYPE = PrimaMateria }
	remove_repetable_modifier = { TITLE = basic TYPE = magicia }
	remove_repetable_modifier = { TITLE = basic TYPE = rulerule }
	remove_repetable_modifier = { TITLE = basic TYPE = fake_madoka }
	remove_repetable_modifier = { TITLE = basic TYPE = arcane }
	remove_repetable_modifier = { TITLE = basic TYPE = cosmic }
	remove_repetable_modifier = { TITLE = basic TYPE = light_power }
	remove_repetable_modifier = { TITLE = basic TYPE = wsg_pantsu }
	remove_repetable_modifier = { TITLE = basic TYPE = tesla }
	remove_repetable_modifier = { TITLE = basic TYPE = sr_uf }
	remove_repetable_modifier = { TITLE = basic TYPE = gungnir }
	remove_repetable_modifier = { TITLE = basic TYPE = xianzhe }
	remove_repetable_modifier = { TITLE = basic TYPE = knife }
	remove_repetable_modifier = { TITLE = basic TYPE = lingli }
	remove_repetable_modifier = { TITLE = basic TYPE = magic }
	remove_repetable_modifier = { TITLE = basic TYPE = nytowith }
	remove_repetable_modifier = { TITLE = basic TYPE = light }
	remove_repetable_modifier = { TITLE = basic TYPE = keto }
	remove_repetable_modifier = { TITLE = basic TYPE = Akso }
	remove_repetable_modifier = { TITLE = basic TYPE = LsScepter }
	remove_repetable_modifier = { TITLE = basic TYPE = son }
	remove_repetable_modifier = { TITLE = basic TYPE = prism }
	remove_repetable_modifier = { TITLE = basic TYPE = Electronic }
	remove_repetable_modifier = { TITLE = basic TYPE = beacon }
	remove_repetable_modifier = { TITLE = basic TYPE = aoe }
	remove_repetable_modifier = { TITLE = basic TYPE = fireworks }
	remove_repetable_modifier = { TITLE = basic TYPE = kancolle }
	remove_repetable_modifier = { TITLE = basic TYPE = kancolle_shinkai }
	remove_repetable_modifier = { TITLE = basic TYPE = aon_rpg_attack }
	remove_repetable_modifier = { TITLE = basic TYPE = aon_rpg_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = sfdoll }
	remove_repetable_modifier = { TITLE = basic TYPE = nano }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_wind_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_time_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_earth_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_pyromancy_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_lightning_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_bright_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_dark_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_space_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_aqua_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_life_magic }
	remove_repetable_modifier = { TITLE = basic TYPE = KZ_VOY_temporal }
	remove_repetable_modifier = { TITLE = basic TYPE = ge_void_energy }
	remove_repetable_modifier = { TITLE = basic TYPE = magi }
	remove_repetable_modifier = { TITLE = basic TYPE = charm }
	remove_repetable_modifier = { TITLE = basic TYPE = mystical }
	remove_repetable_modifier = { TITLE = basic TYPE = close_combat }
	remove_repetable_modifier = { TITLE = basic TYPE = critical }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_block }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_battle_continuation }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_only_one }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_multi_level }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_saber }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_archer }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_lancer }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_rider }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_caster }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_assassin }
	remove_repetable_modifier = { TITLE = basic TYPE = fgosw_skill_berserker }
	remove_repetable_modifier = { TITLE = basic TYPE = blackash }
}

remove_ship_modifier_trigger_flag = {
	optimize_memory
	fleet = {
		remove_fleet_flag = eternal_learned_leader 
		remove_fleet_flag = has_kuat_flagship_system
		remove_fleet_flag = has_kuat_subflagship_system
		remove_fleet_flag = has_kuat_disable_checkpoint
		remove_fleet_flag = has_kuat_flagship_system_addon_repeatable
		clear_variable = infinite_faction_battle_duplicate_ship
	}
	remove_ship_flag = is_modifiering
	remove_ship_flag = fire_ship_var
}

remove_ship_modifier_change_basic_variable = {
	optimize_memory
	clear_variable = debug_change_$PARAMATER$_value
}

remove_repeatable_ship_modifier_change_basic_vairable = {
	optimize_memory
	clear_variable = debug_change_weapon_type_$TYPE$_weapon_fire_rate_mult_value
	clear_variable = debug_change_weapon_type_$TYPE$_weapon_damage_mul_value
}

set_fleet_modifier = {
	optimize_memory
	add_modifier = { modifier = $SUB$ days = $DAYS|-1$ }
	change_variable = { which = $SUB$_var value = 1 }
}

kuat_reduce_hp_percent = {
	optimize_memory
	export_trigger_value_to_variable = { trigger = has_hp variable = exist_hp_value }
	multiply_variable = { which = exist_hp_value value = 0.01 }
	multiply_variable = { which = exist_hp_value value = $value$ }
	reduce_hp = exist_hp_value clear_variable = exist_hp_value
}

kuat_set_epsilon_obelisk_code = {
	optimize_memory
	random_list = {
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_0 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 0 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_1 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 1 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_2 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 2 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_3 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 3 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_4 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 4 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_5 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 5 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_6 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 6 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_7 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 7 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_8 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 8 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_9 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 9 } } }
	}
}

kuat_invinciable_battle_random_effect = {
	optimize_memory
	random_list = {
		50 = {
			modifier = {
				divide = event_target:global_event_country.eternal_fleet_return_index
				event_target:global_event_country = { check_variable = { which = eternal_fleet_return_index value > 0 } }
			}
			modifier = { factor = 100 OR = { 
				NOT = { has_global_flag = kuat_impulse_mod_settings } 
				has_ship_flag = kuat_clear_ship_modifier_target 
			} }
		}
		# 150 Totally, 100 Available
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			clear_ship_repeatable_modifier = { multiply = 0.10 DAYS = 2 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 2 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			clear_ship_repeatable_modifier = { multiply = 0.25 DAYS = 2 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 3 }
		}
		4 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			clear_ship_repeatable_modifier = { multiply = 0.50 DAYS = 2 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 4 }
		}
		4 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			clear_ship_repeatable_modifier = { multiply = 0.75 DAYS = 2 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 5 }
		}
		3 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			clear_ship_repeatable_modifier = { multiply = 0.99 DAYS = 2 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 6 }
		}
		3 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			kuat_reduce_hp_percent = { value = 10 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 7 }
		}
		3 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			kuat_reduce_hp_percent = { value = 20 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 8 }
		}
		3 = {
			modifier = {
				factor = 0
				OR = {
					has_ship_flag = kuat_clear_ship_modifier_target
					owner = { is_invisable_faction = yes }
				}
			}
			kuat_reduce_hp_percent = { value = 30 }
			set_timed_ship_flag = { flag = kuat_clear_ship_modifier_target days = 9 }
		}
	}
	reroll_random = yes
}

kuat_upgrade_epsilon_obelisk = {
	optimize_memory
	if = {
		limit = { exists = owner }
		owner = { save_event_target_as = kuat_target_megastructure_owner }
		switch = {
			trigger = has_megastructure_flag
			kuat_epsilon_obelisk_1 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					owner = event_target:kuat_target_megastructure_owner
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_1 }
				}
			} }
			kuat_epsilon_obelisk_2 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					owner = event_target:kuat_target_megastructure_owner
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_2 }
				}
			} }
			kuat_epsilon_obelisk_3 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					owner = event_target:kuat_target_megastructure_owner
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_3 }
				}
			} }
		}
	}
	else = {
		switch = {
			trigger = has_megastructure_flag
			kuat_epsilon_obelisk_1 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_1 }
				}
			} }
			kuat_epsilon_obelisk_2 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_2 }
				}
			} }
			kuat_epsilon_obelisk_3 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_3 }
				}
			} }
		}
	}
	remove_megastructure = this
}

#fromfromfrom: enemy fleet
#fromfrom: eternal fleet
kuat_copy_leader_learning_system = {
	optimize_memory
	if = {
		limit = { 
			fromfromfrom = { 
				exists = leader
				leader = { 
					leader_class = commander 
					NOR = { 
						has_leader_flag = eternal_learned_leader 
						has_leader_flag = SOP_eddy
					} 
				}
				NOT = { has_fleet_flag = eternal_learned_leader } 
			} 
			from = { is_ai = no }
		}
		fromfromfrom = {
			set_fleet_flag = eternal_learned_leader
			leader = { 
				set_timed_leader_flag = { flag = eternal_learned_leader days = 180 } 
				save_event_target_as = eternal_learned_leader
			}
			root = {
				clone_leader = { 
					class = commander target = event_target:eternal_learned_leader
					effect = { 
						save_event_target_as = eternal_learned_leader_copy 
						copy_flags_and_variables_from = event_target:eternal_learned_leader
					} 
				}
				fromfrom = {
					if = {
						limit = { NOT = { has_fleet_flag = have_learned_leader } }
						if = {
							limit = { exists = leader }
							leader = { kill_leader = { show_notification = no } }
						}
						assign_leader = event_target:eternal_learned_leader_copy
						set_timed_fleet_flag = { flag = have_learned_leader days = 180 }
					}
					else = { owner = { 
						random_owned_fleet = {
							limit = { NOT = { has_fleet_flag = have_learned_leader } }
							if = {
								limit = { exists = leader }
								leader = { kill_leader = { show_notification = no } }
							}
							assign_leader = event_target:eternal_learned_leader_copy
							set_timed_fleet_flag = { flag = have_learned_leader days = 180 }
						}
					} }
				}
				from = { country_event = { id = exe_invasion.141 } }
			}
		}
	}
}

# #scope: fleet
# mult_half_variable = {
# 	optimize_memory
# 	set_variable = { which = $WHICH$_half value = $WHICH$ }
# 	multiply_variable = { which = $WHICH$_half value = $VALUE$ }
# 	floor_variable = $WHICH$_half
# }