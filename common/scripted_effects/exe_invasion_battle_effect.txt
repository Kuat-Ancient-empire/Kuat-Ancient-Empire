# scope: ship
increase_executor_power = {
	if = {
		limit = { has_hp <= 20000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ subtract = 1 }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_5000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 40000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ subtract = 1 }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_4000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 60000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ subtract = 1 }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_3000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 80000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ subtract = 1 }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_2000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 100000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ subtract = 1 }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_1000000_times days = $DAYS$ }
	}
}

eternal_increase_executor_power = {
	if = {
		limit = { has_hp <= 20000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_5000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 40000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_4000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 60000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_3000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 80000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_2000000_times days = $DAYS$ }
	}
	else_if = {
		limit = { has_hp <= 100000000 }
		clear_ship_modifier = { modifier = ship_hull_mult DAYS = $DAYS$ }
		clear_ship_modifier = { modifier = ship_hull_regen_add_perc DAYS = $DAYS$ subtract = 1 }
		add_modifier = { modifier = increase_hp_1000000_times days = $DAYS$ }
	}
}

increase_ship_hp_effect_change = {
	if = {
		limit = { owner = { is_country_type = ag_kuat_invasion_country } }
		every_owned_ship = {
			set_timed_ship_flag = { flag = is_invisiable_trigger days = $DAYS$ }
			eternal_increase_executor_power = { DAYS = $DAYS$ }
			ship_event = { id = exe_invasion.119 }
		}
	}
	else_if = {
		limit = { owner = { is_kuat_fallen_empire = yes } }
		every_owned_ship = {
			set_timed_ship_flag = { flag = is_invisiable_trigger days = $DAYS$ }
			eternal_increase_executor_power = { DAYS = $DAYS$ }
			ship_event = { id = exe_invasion.119 }
		}
	}
	else = {
		every_owned_ship = {
			limit = { NOT = { is_ship_size = scout_UAV } }
			set_timed_ship_flag = { flag = is_invisiable_trigger days = $DAYS$ }
			increase_executor_power = { DAYS = $DAYS$ }
			ship_event = { id = exe_invasion.119 }
		}
	}
	set_fleet_modifier = { SUB = Eternal_submit DAYS = -1 }
}

clear_ship_modifier = {
	export_modifier_to_variable = { modifier = $modifier$ variable = $modifier$_value_iep }
	subtract_variable = { which = $modifier$_value_iep value = $subtract|0$ }
	change_variable = { which = $modifier$_value_iep value = $change|0$ }
	divide_variable = { which = $modifier$_value_iep value = $divide|1$ }
	multiply_variable = { which = $modifier$_value_iep value = $multiply|1$ }
	add_modifier = { modifier = iep_basic_$modifier$ multiplier = $modifier$_value_iep days = $DAYS$ } 
	clear_variable = $modifier$_value_iep
}

remove_executor_power = {
	remove_modifier = iep_basic_ship_shield_penetration_mult
	remove_modifier = iep_basic_ship_armor_penetration_mult			
	remove_modifier = iep_basic_ship_armor_damage_mult				
	remove_modifier = iep_basic_ship_shield_damage_mult				
	remove_modifier = iep_basic_ship_hull_damage_mult				
	remove_modifier = iep_basic_ship_tracking_mult					
	remove_modifier = iep_basic_ship_weapon_damage						
	remove_modifier = iep_basic_ship_hull_regen_add_perc			
	remove_modifier = iep_basic_ship_armor_regen_add_perc			
	remove_modifier = iep_basic_ship_shield_regen_add_perc				
	remove_modifier = iep_basic_ship_hull_mult						
	remove_modifier = iep_basic_ship_armor_mult						
	remove_modifier = iep_basic_ship_shield_mult							
	remove_modifier = iep_basic_ship_shield_reduction					
	remove_modifier = iep_basic_ship_armor_reduction						
	remove_modifier = iep_basic_ship_accuracy_mult							
	remove_modifier = iep_basic_ship_weapon_range_mult						
	remove_modifier = iep_basic_ship_fire_rate_mult							
	remove_modifier = iep_basic_weapon_type_energy_weapon_damage_mult		
	remove_modifier = iep_basic_weapon_type_explosive_weapon_damage_mult	
	remove_modifier = iep_basic_weapon_type_kinetic_weapon_damage_mult	
	remove_modifier = iep_basic_ship_tracking_add							
	remove_modifier = iep_basic_ship_accuracy_add							
	remove_modifier = iep_basic_ship_armor_add								
	remove_modifier = iep_basic_ship_shield_add
	remove_modifier = increase_hp_5000000_times
	remove_modifier = increase_hp_4000000_times
	remove_modifier = increase_hp_3000000_times
	remove_modifier = increase_hp_2000000_times
	remove_modifier = increase_hp_1000000_times
	fleet = { remove_fleet_flag = eternal_learned_leader }
}

set_eternal_fleet_mult_modifier = {
	########MULT VALUE########
	[[shield_penetration] if = { 
		limit = { 
			NOT = { is_variable_set = $shield_penetration$_value } 
			NOT = { check_modifier_value = { modifier = $shield_penetration$ value = @mult_origin_value } }
		}
		export_modifier_to_variable = { modifier = $shield_penetration$ variable = $shield_penetration$_value }
		change_variable = { which = $shield_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_penetration$ FACTOR = $shield_penetration$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_penetration$_value } clear_variable = change_$shield_penetration$_value }
		export_modifier_to_variable = { modifier = $shield_penetration$ variable = change_$shield_penetration$_value }
		change_variable = { which = change_$shield_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_penetration$ FACTOR = change_$shield_penetration$_value }
	}] #scope: fromfromfrom
	[[armor_penetration] if = { 
		limit = { 
			NOT = { is_variable_set = $armor_penetration$_value } 
			NOT = { check_modifier_value = { modifier = $armor_penetration$ value = @mult_origin_value } }
		}
		export_modifier_to_variable = { modifier = $armor_penetration$ variable = $armor_penetration$_value }
		change_variable = { which = $armor_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_penetration$ FACTOR = $armor_penetration$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_penetration$_value } clear_variable = change_$armor_penetration$_value }
		export_modifier_to_variable = { modifier = $armor_penetration$ variable = change_$armor_penetration$_value }
		change_variable = { which = change_$armor_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_penetration$ FACTOR = change_$armor_penetration$_value }
	}] #scope: fromfromfrom
	[[armor_damage] if = {
		limit = { 
			NOT = { is_variable_set = $armor_damage$_value } 
			check_modifier_value = { modifier = $armor_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $armor_damage$ variable = $armor_damage$_value }
		change_variable = { which = $armor_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_damage$ FACTOR = $armor_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_damage$_value } clear_variable = change_$armor_damage$_value }
		if = {
			limit = { fleet = { has_enable_flag_ship_system_true = yes } }
			export_modifier_to_variable = { modifier = $armor_damage$ variable = change_$armor_damage$_value }
			change_variable = { which = change_$armor_damage$_value value = @three_quarter_origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_damage$ FACTOR = change_$armor_damage$_value }
		}
		else_if = {
			limit = { fleet = { has_enable_flag_ship_system_true = no } }
			export_modifier_to_variable = { modifier = $armor_damage$ variable = change_$armor_damage$_value }
			change_variable = { which = change_$armor_damage$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_damage$ FACTOR = change_$armor_damage$_value }
		}
	}] #scope: fromfromfrom
	[[shield_damage] if = {
		limit = { 
			NOT = { is_variable_set = $shield_damage$_value } 
			check_modifier_value = { modifier = $shield_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $shield_damage$ variable = $shield_damage$_value }
		change_variable = { which = $shield_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_damage$ FACTOR = $shield_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var } 
		if = { limit = { is_variable_set = change_$shield_damage$_value } clear_variable = change_$shield_damage$_value }
		if = {
			limit = { fleet = { has_enable_flag_ship_system_true = yes } }
			export_modifier_to_variable = { modifier = $shield_damage$ variable = change_$shield_damage$_value }
			change_variable = { which = change_$shield_damage$_value value = @three_quarter_origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_damage$ FACTOR = change_$shield_damage$_value }
		}
		else_if = {
			limit = { fleet = { has_enable_flag_ship_system_true = no } }
			export_modifier_to_variable = { modifier = $shield_damage$ variable = change_$shield_damage$_value }
			change_variable = { which = change_$shield_damage$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_damage$ FACTOR = change_$shield_damage$_value }
		}
	}] #scope: fromfromfrom
	[[hull_damage] if = {
		limit = { 
			NOT = { is_variable_set = $hull_damage$_value } 
			check_modifier_value = { modifier = $hull_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $hull_damage$ variable = $hull_damage$_value }
		change_variable = { which = $hull_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$hull_damage$ FACTOR = $hull_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$hull_damage$_value } clear_variable = change_$hull_damage$_value }
		if = {
			limit = { fleet = { has_enable_flag_ship_system_true = yes } }
			export_modifier_to_variable = { modifier = $hull_damage$ variable = change_$hull_damage$_value }
			change_variable = { which = change_$hull_damage$_value value = @three_quarter_origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$hull_damage$ FACTOR = change_$hull_damage$_value }
		}
		else_if = {
			limit = { fleet = { has_enable_flag_ship_system_true = no } }
			export_modifier_to_variable = { modifier = $hull_damage$ variable = change_$hull_damage$_value }
			change_variable = { which = change_$hull_damage$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$hull_damage$ FACTOR = change_$hull_damage$_value }
		}
	}] #scope: fromfromfrom
	[[weapon_damage] if = {
		limit = { 
			NOT = { is_variable_set = $weapon_damage$_value } 
			check_modifier_value = { modifier = $weapon_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $weapon_damage$ variable = $weapon_damage$_value }
		change_variable = { which = $weapon_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$weapon_damage$ FACTOR = $weapon_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_damage$_value } clear_variable = change_$weapon_damage$_value }
		if = {
			limit = { fleet = { has_enable_flag_ship_system_true = yes } }
			export_modifier_to_variable = { modifier = $weapon_damage$ variable = change_$weapon_damage$_value }
			change_variable = { which = change_$weapon_damage$_value value = @three_quarter_origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$weapon_damage$ FACTOR = change_$weapon_damage$_value }
		}
		else_if = {
			limit = { fleet = { has_enable_flag_ship_system_true = no } }
			export_modifier_to_variable = { modifier = $weapon_damage$ variable = change_$weapon_damage$_value }
			change_variable = { which = change_$weapon_damage$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$weapon_damage$ FACTOR = change_$weapon_damage$_value }
		}
	}] #scope: fromfromfrom
	[[tracking] if = {
		limit = { 
			NOT = { is_variable_set = $tracking$_value } 
			check_modifier_value = { modifier = $tracking$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $tracking$ variable = $tracking$_value }
		change_variable = { which = $tracking$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$tracking$ FACTOR = $tracking$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$tracking$_value } clear_variable = change_$tracking$_value }
		if = {
			limit = { fleet = { has_enable_flag_ship_system_true = yes } }
			export_modifier_to_variable = { modifier = $tracking$ variable = change_$tracking$_value }
			change_variable = { which = change_$tracking$_value value = @quarter_origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$tracking$ FACTOR = change_$tracking$_value }
		}
		else_if = {
			limit = { fleet = { has_enable_flag_ship_system_true = no } }
			export_modifier_to_variable = { modifier = $tracking$ variable = change_$tracking$_value }
			change_variable = { which = change_$tracking$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$tracking$ FACTOR = change_$tracking$_value }
		}
	}] #scope: fromfromfrom
	[[accuracy] if = {
		limit = { 
			NOT = { is_variable_set = $accuracy$_value } 
			check_modifier_value = { modifier = $accuracy$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $accuracy$ variable = $accuracy$_value }
		change_variable = { which = $accuracy$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$accuracy$ FACTOR = $accuracy$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$accuracy$_value } clear_variable = change_$accuracy$_value }
		if = {
			limit = { fleet = { has_enable_flag_ship_system_true = yes } }
			export_modifier_to_variable = { modifier = $accuracy$ variable = change_$accuracy$_value }
			change_variable = { which = change_$accuracy$_value value = @quarter_origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$accuracy$ FACTOR = change_$accuracy$_value }
		}
		else_if = {
			limit = { fleet = { has_enable_flag_ship_system_true = no } }
			export_modifier_to_variable = { modifier = $accuracy$ variable = change_$accuracy$_value }
			change_variable = { which = change_$accuracy$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = change_basic_$accuracy$ FACTOR = change_$accuracy$_value }
		}
	}] #scope: fromfromfrom
	[[shield_penetration_own] if = {
		limit = { 
			NOT = { is_variable_set = $shield_penetration_own$_value } 
			check_modifier_value = { modifier = $shield_penetration_own$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $shield_penetration_own$ variable = $shield_penetration_own$_value }
		subtract_variable = { which = $shield_penetration_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_penetration_own$ FACTOR = $shield_penetration_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_penetration_own$_value } clear_variable = change_$shield_penetration_own$_value }
		export_modifier_to_variable = { modifier = $shield_penetration_own$ variable = change_$shield_penetration_own$_value }
		subtract_variable = { which = change_$shield_penetration_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_penetration_own$ FACTOR = change_$shield_penetration_own$_value }
	}] #scope: fromfrom
	[[armor_penetration_own] if = {
		limit = { 
			NOT = { is_variable_set = $armor_penetration_own$_value } 
			check_modifier_value = { modifier = $armor_penetration_own$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $armor_penetration_own$ variable = $armor_penetration_own$_value }
		subtract_variable = { which = $armor_penetration_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_penetration_own$ FACTOR = $armor_penetration_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_penetration_own$_value } clear_variable = change_$armor_penetration_own$_value }
		export_modifier_to_variable = { modifier = $armor_penetration_own$ variable = change_$armor_penetration_own$_value }
		subtract_variable = { which = change_$armor_penetration_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_penetration_own$ FACTOR = change_$armor_penetration_own$_value }
	}] #scope: fromfrom
	[[weapon_damage_own] if = {
		limit = { 
			NOT = { is_variable_set = $weapon_damage_own$_value } 
			check_modifier_value = { modifier = $weapon_damage_own$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $weapon_damage_own$ variable = $weapon_damage_own$_value }
		subtract_variable = { which = $weapon_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$weapon_damage_own$ FACTOR = $weapon_damage_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_damage_own$_value } clear_variable = change_$weapon_damage_own$_value }
		export_modifier_to_variable = { modifier = $weapon_damage_own$ variable = change_$weapon_damage_own$_value }
		subtract_variable = { which = change_$weapon_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$weapon_damage_own$ FACTOR = change_$weapon_damage_own$_value }
	}] #scope: fromfrom
	[[hull_regen_add_perc] if = {
		limit = { 
			NOT = { is_variable_set = $hull_regen_add_perc$_value } 
			check_modifier_value = { modifier = $hull_regen_add_perc$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $hull_regen_add_perc$ variable = $hull_regen_add_perc$_value }
		subtract_variable = { which = $hull_regen_add_perc$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$hull_regen_add_perc$ FACTOR = $hull_regen_add_perc$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$hull_regen_add_perc$_value } clear_variable = change_$hull_regen_add_perc$_value }
		export_modifier_to_variable = { modifier = $hull_regen_add_perc$ variable = change_$hull_regen_add_perc$_value }
		subtract_variable = { which = change_$hull_regen_add_perc$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$hull_regen_add_perc$ FACTOR = change_$hull_regen_add_perc$_value }
	}] #scope: fromfrom
	[[armor_regen_add_perc] if = {
		limit = { 
			NOT = { is_variable_set = $armor_regen_add_perc$_value } 
			check_modifier_value = { modifier = $armor_regen_add_perc$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $armor_regen_add_perc$ variable = $armor_regen_add_perc$_value }
		subtract_variable = { which = $armor_regen_add_perc$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_regen_add_perc$ FACTOR = $armor_regen_add_perc$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_regen_add_perc$_value } clear_variable = change_$armor_regen_add_perc$_value }
		export_modifier_to_variable = { modifier = $armor_regen_add_perc$ variable = change_$armor_regen_add_perc$_value }
		subtract_variable = { which = change_$armor_regen_add_perc$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_regen_add_perc$ FACTOR = change_$armor_regen_add_perc$_value }
	}] #scope: fromfrom
	[[shield_regen_add_perc] if = {
		limit = { 
			NOT = { is_variable_set = $shield_regen_add_perc$_value } 
			check_modifier_value = { modifier = $shield_regen_add_perc$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $shield_regen_add_perc$ variable = $shield_regen_add_perc$_value }
		subtract_variable = { which = $shield_regen_add_perc$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_regen_add_perc$ FACTOR = $shield_regen_add_perc$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_regen_add_perc$_value } clear_variable = change_$shield_regen_add_perc$_value }
		export_modifier_to_variable = { modifier = $shield_regen_add_perc$ variable = change_$shield_regen_add_perc$_value }
		subtract_variable = { which = change_$shield_regen_add_perc$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_regen_add_perc$ FACTOR = change_$shield_regen_add_perc$_value }
	}] #scope: fromfrom
	[[hull_mult] if = {
		limit = { 
			NOT = { is_variable_set = $hull_mult$_value } 
			check_modifier_value = { modifier = $hull_mult$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $hull_mult$ variable = $hull_mult$_value }
		subtract_variable = { which = $hull_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$hull_mult$ FACTOR = $hull_mult$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$hull_mult$_value } clear_variable = change_$hull_mult$_value }
		export_modifier_to_variable = { modifier = $hull_mult$ variable = change_$hull_mult$_value }
		subtract_variable = { which = change_$hull_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$hull_mult$ FACTOR = change_$hull_mult$_value }
	}] #scope: fromfrom
	[[armor_mult] if = {
		limit = { 
			NOT = { is_variable_set = $armor_mult$_value } 
			check_modifier_value = { modifier = $armor_mult$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $armor_mult$ variable = $armor_mult$_value }
		subtract_variable = { which = $armor_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_mult$ FACTOR = $armor_mult$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_mult$_value } clear_variable = change_$armor_mult$_value }
		export_modifier_to_variable = { modifier = $armor_mult$ variable = change_$armor_mult$_value }
		subtract_variable = { which = change_$armor_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_mult$ FACTOR = change_$armor_mult$_value }
	}] #scope: fromfrom
	[[shield_mult] if = {
		limit = { 
			NOT = { is_variable_set = $shield_mult$_value } 
			check_modifier_value = { modifier = $shield_mult$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $shield_mult$ variable = $shield_mult$_value }
		subtract_variable = { which = $shield_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_mult$ FACTOR = $shield_mult$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_mult$_value } clear_variable = change_$shield_mult$_value }
		export_modifier_to_variable = { modifier = $shield_mult$ variable = change_$shield_mult$_value }
		subtract_variable = { which = change_$shield_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_mult$ FACTOR = change_$shield_mult$_value }
	}] #scope: fromfrom
	[[weapon_range_mult] if = {
		limit = { 
			NOT = { is_variable_set = $weapon_range_mult$_value } 
			check_modifier_value = { modifier = $weapon_range_mult$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $weapon_range_mult$ variable = $weapon_range_mult$_value }
		subtract_variable = { which = $weapon_range_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$weapon_range_mult$ FACTOR = $weapon_range_mult$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_range_mult$_value } clear_variable = change_$weapon_range_mult$_value }
		export_modifier_to_variable = { modifier = $weapon_range_mult$ variable = change_$weapon_range_mult$_value }
		subtract_variable = { which = change_$weapon_range_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$weapon_range_mult$ FACTOR = change_$weapon_range_mult$_value }
	}] #scope: fromfrom
	[[fire_rate_mult] if = {
		limit = { 
			NOT = { is_variable_set = $fire_rate_mult$_value } 
			check_modifier_value = { modifier = $fire_rate_mult$ value < @initial_value }
		}
		export_modifier_to_variable = { modifier = $fire_rate_mult$ variable = $fire_rate_mult$_value }
		subtract_variable = { which = $fire_rate_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$fire_rate_mult$ FACTOR = $fire_rate_mult$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$fire_rate_mult$_value } clear_variable = change_$fire_rate_mult$_value }
		export_modifier_to_variable = { modifier = $fire_rate_mult$ variable = change_$fire_rate_mult$_value }
		subtract_variable = { which = change_$fire_rate_mult$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$fire_rate_mult$ FACTOR = change_$fire_rate_mult$_value }
	}] #scope: fromfrom
	[[tracking_own] if = {
		limit = { 
			NOT = { is_variable_set = $tracking_own$_value } 
			check_modifier_value = { modifier = $tracking_own$ value < @initial_value }
		}
		export_modifier_to_variable = { modifier = $tracking_own$ variable = $tracking_own$_value }
		subtract_variable = { which = $tracking_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$tracking_own$ FACTOR = $tracking_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$tracking_own$_value } clear_variable = change_$tracking_own$_value }
		export_modifier_to_variable = { modifier = $tracking_own$ variable = change_$tracking_own$_value }
		subtract_variable = { which = change_$tracking_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$tracking_own$ FACTOR = change_$tracking_own$_value }
	}] #scope: fromfrom
	[[accuracy_own] if = {
		limit = { NOT = { is_variable_set = $accuracy_own$_value } }
		if = {
			limit = { check_modifier_value = { modifier = $accuracy_own$ value < @initial_value } }
			export_modifier_to_variable = { modifier = $accuracy_own$ variable = $accuracy_own$_value }
			subtract_variable = { which = $accuracy_own$_value value = @origin_value }
			set_invasion_fleet_basic_modifier = { SUB = basic_$accuracy_own$ FACTOR = $accuracy_own$_value }
		}
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$accuracy_own$_value } clear_variable = change_$accuracy_own$_value }
		export_modifier_to_variable = { modifier = $accuracy_own$ variable = change_$accuracy_own$_value }
		subtract_variable = { which = change_$accuracy_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$accuracy_own$ FACTOR = change_$accuracy_own$_value }
	}] #scope: fromfrom
	[[weapon_type_energy] if = {
		limit = { 
			NOT = { is_variable_set = $weapon_type_energy$_value } 
			check_modifier_value = { modifier = $weapon_type_energy$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $weapon_type_energy$ variable = $weapon_type_energy$_value }
		subtract_variable = { which = $weapon_type_energy$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basical_$weapon_type_energy$ FACTOR = $weapon_type_energy$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_type_energy$_value } clear_variable = change_$weapon_type_energy$_value }
		export_modifier_to_variable = { modifier = $weapon_type_energy$ variable = change_$weapon_type_energy$_value }
		subtract_variable = { which = change_$weapon_type_energy$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basical_$weapon_type_energy$ FACTOR = change_$weapon_type_energy$_value }
	}] #scope: fromfrom
	[[weapon_type_kinetic] if = {
		limit = {
			NOT = { is_variable_set = $weapon_type_kinetic$_value } 
			check_modifier_value = { modifier = $weapon_type_kinetic$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $weapon_type_kinetic$ variable = $weapon_type_kinetic$_value }
		subtract_variable = { which = $weapon_type_kinetic$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basical_$weapon_type_kinetic$ FACTOR = $weapon_type_kinetic$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_type_kinetic$_value } clear_variable = change_$weapon_type_kinetic$_value }
		export_modifier_to_variable = { modifier = $weapon_type_kinetic$ variable = change_$weapon_type_kinetic$_value }
		subtract_variable = { which = change_$weapon_type_kinetic$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basical_$weapon_type_kinetic$ FACTOR = change_$weapon_type_kinetic$_value }
	}] #scope: fromfrom
	[[weapon_type_explosive] if = {
		limit = { 
			NOT = { is_variable_set = $weapon_type_explosive$_value } 
			check_modifier_value = { modifier = $weapon_type_explosive$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $weapon_type_explosive$ variable = $weapon_type_explosive$_value }
		subtract_variable = { which = $weapon_type_explosive$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basical_$weapon_type_explosive$ FACTOR = $weapon_type_explosive$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_type_explosive$_value } clear_variable = change_$weapon_type_explosive$_value }
		export_modifier_to_variable = { modifier = $weapon_type_explosive$ variable = change_$weapon_type_explosive$_value }
		subtract_variable = { which = change_$weapon_type_explosive$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basical_$weapon_type_explosive$ FACTOR = change_$weapon_type_explosive$_value }
	}] #scope: fromfrom
	[[armor_damage_own] if = {
		limit = { 
			NOT = { is_variable_set = $armor_damage_own$_value } 
			check_modifier_value = { modifier = $armor_damage_own$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $armor_damage_own$ variable = $armor_damage_own$_value }
		subtract_variable = { which = $armor_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_damage_own$ FACTOR = $armor_damage_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_damage_own$_value } clear_variable = change_$armor_damage_own$_value }
		export_modifier_to_variable = { modifier = $armor_damage_own$ variable = change_$armor_damage_own$_value }
		subtract_variable = { which = change_$armor_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_damage_own$ FACTOR = change_$armor_damage_own$_value }
	}] #scope: fromfrom
	[[shield_damage_own] if = {
		limit = { 
			NOT = { is_variable_set = $shield_damage_own$_value } 
			check_modifier_value = { modifier = $shield_damage_own$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $shield_damage_own$ variable = $shield_damage_own$_value }
		subtract_variable = { which = $shield_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_damage_own$ FACTOR = $shield_damage_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_damage_own$_value } clear_variable = change_$shield_damage_own$_value }
		export_modifier_to_variable = { modifier = $shield_damage_own$ variable = change_$shield_damage_own$_value }
		subtract_variable = { which = change_$shield_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_damage_own$ FACTOR = change_$shield_damage_own$_value }
	}] #scope: fromfrom
	[[hull_damage_own] if = {
		limit = { 
			NOT = { is_variable_set = $hull_damage_own$_value } 
			check_modifier_value = { modifier = $hull_damage_own$ value < @origin_value }
		}
		export_modifier_to_variable = { modifier = $hull_damage_own$ variable = $hull_damage_own$_value }
		subtract_variable = { which = $hull_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$hull_damage_own$ FACTOR = $hull_damage_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$hull_damage_own$_value } clear_variable = change_$hull_damage_own$_value }
		export_modifier_to_variable = { modifier = $hull_damage_own$ variable = change_$hull_damage_own$_value }
		subtract_variable = { which = change_$hull_damage_own$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$hull_damage_own$ FACTOR = change_$hull_damage_own$_value }
	}] #scope: fromfrom
	[[shield_reduction] if = {
		limit = { 
			NOT = { is_variable_set = $shield_reduction$_value } 
			check_modifier_value = { modifier = $shield_reduction$ value > @initial_value }
		}
		export_modifier_to_variable = { modifier = $shield_reduction$ variable = $shield_reduction$_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_reduction$ FACTOR = $shield_reduction$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_reduction$_value } clear_variable = change_$shield_reduction$_value }
		export_modifier_to_variable = { modifier = $shield_reduction$ variable = change_$shield_reduction$_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_reduction$ FACTOR = change_$shield_reduction$_value }
	}] #scope: fromfrom
	[[armor_reduction] if = {
		limit = { 
			NOT = { is_variable_set = $armor_reduction$_value } 
			check_modifier_value = { modifier = $armor_reduction$ value > @initial_value }
		}
		export_modifier_to_variable = { modifier = $armor_reduction$ variable = $armor_reduction$_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_reduction$ FACTOR = $armor_reduction$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_reduction$_value } clear_variable = change_$armor_reduction$_value }
		export_modifier_to_variable = { modifier = $armor_reduction$ variable = change_$armor_reduction$_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_reduction$ FACTOR = change_$armor_reduction$_value }
	}] #scope: fromfrom
	#######ADD VALUE#########
	[[tracking_add_own] if = {
		limit = { 
			NOT = { is_variable_set = $tracking_add_own$_value } 
			check_modifier_value = { modifier = $tracking_add_own$ value < @hundred_value }
		}
		export_modifier_to_variable = { modifier = $tracking_add_own$ variable = $tracking_add_own$_value }
		subtract_variable = { which = $tracking_add_own$_value value = @hundred_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$tracking_add_own$ FACTOR = $tracking_add_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$tracking_add_own$_value } clear_variable = change_$tracking_add_own$_value }
		export_modifier_to_variable = { modifier = $tracking_add_own$ variable = change_$tracking_add_own$_value }
		subtract_variable = { which = change_$tracking_add_own$_value value = @hundred_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$tracking_add_own$ FACTOR = change_$tracking_add_own$_value }
	}] #scope: fromfrom
	[[accuracy_add_own] if = {
		limit = { 
			NOT = { is_variable_set = $accuracy_add_own$_value } 
			check_modifier_value = { modifier = $accuracy_add_own$ value < @hundred_value }
		}
		export_modifier_to_variable = { modifier = $accuracy_add_own$ variable = $accuracy_add_own$_value }
		subtract_variable = { which = $accuracy_add_own$_value value = @hundred_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$accuracy_add_own$ FACTOR = $accuracy_add_own$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$accuracy_add_own$_value } clear_variable = change_$accuracy_add_own$_value }
		export_modifier_to_variable = { modifier = $accuracy_add_own$ variable = change_$accuracy_add_own$_value }
		subtract_variable = { which = change_$accuracy_add_own$_value value = @hundred_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$accuracy_add_own$ FACTOR = change_$accuracy_add_own$_value }
	}] #scope: fromfrom
	[[shield_add] if = {
		limit = { 
			NOT = { is_variable_set = $shield_add$_value } 
			check_modifier_value = { modifier = $shield_add$ value < @orgin_million_value }
		}
		export_modifier_to_variable = { modifier = $shield_add$ variable = $shield_add$_value }
		subtract_variable = { which = $shield_add$_value value = @orgin_million_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_add$ FACTOR = $shield_add$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_add$_value } clear_variable = change_$shield_add$_value }
		export_modifier_to_variable = { modifier = $shield_add$ variable = change_$shield_add$_value }
		subtract_variable = { which = change_$shield_add$_value value = @orgin_million_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_add$ FACTOR = change_$shield_add$_value }
	}] #scope: fromfrom
	[[armor_add] if = {
		limit = { 
			NOT = { is_variable_set = $armor_add$_value } 
			check_modifier_value = { modifier = $armor_add$ value < @orgin_million_value }
		}
		export_modifier_to_variable = { modifier = $armor_add$ variable = $armor_add$_value }
		subtract_variable = { which = $armor_add$_value value = @orgin_million_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_add$ FACTOR = $armor_add$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_add$_value } clear_variable = change_$armor_add$_value }
		export_modifier_to_variable = { modifier = $armor_add$ variable = change_$armor_add$_value }
		subtract_variable = { which = change_$armor_add$_value value = @orgin_million_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_add$ FACTOR = change_$armor_add$_value }
	}] #scope: fromfrom
}

set_ban_eternal_fleet_mult_modifier = {
	########MULT VALUE########
	[[shield_penetration] if = { 
		limit = { 
			NOT = { is_variable_set = $shield_penetration$_value } 
			NOT = { check_modifier_value = { modifier = $shield_penetration$ value = @mult_origin_value } }
		}
		export_modifier_to_variable = { modifier = $shield_penetration$ variable = $shield_penetration$_value }
		change_variable = { which = $shield_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_penetration$ FACTOR = $shield_penetration$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$shield_penetration$_value } clear_variable = change_$shield_penetration$_value }
		export_modifier_to_variable = { modifier = $shield_penetration$ variable = change_$shield_penetration$_value }
		change_variable = { which = change_$shield_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_penetration$ FACTOR = change_$shield_penetration$_value }
	}] #scope: fromfromfrom
	[[armor_penetration] if = { 
		limit = { 
			NOT = { is_variable_set = $armor_penetration$_value } 
			NOT = { check_modifier_value = { modifier = $armor_penetration$ value = @mult_origin_value } }
		}
		export_modifier_to_variable = { modifier = $armor_penetration$ variable = $armor_penetration$_value }
		change_variable = { which = $armor_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_penetration$ FACTOR = $armor_penetration$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_penetration$_value } clear_variable = change_$armor_penetration$_value }
		export_modifier_to_variable = { modifier = $armor_penetration$ variable = change_$armor_penetration$_value }
		change_variable = { which = change_$armor_penetration$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_penetration$ FACTOR = change_$armor_penetration$_value }
	}] #scope: fromfromfrom
	[[armor_damage] if = {
		limit = { 
			NOT = { is_variable_set = $armor_damage$_value } 
			check_modifier_value = { modifier = $armor_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $armor_damage$ variable = $armor_damage$_value }
		change_variable = { which = $armor_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$armor_damage$ FACTOR = $armor_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$armor_damage$_value } clear_variable = change_$armor_damage$_value }
		export_modifier_to_variable = { modifier = $armor_damage$ variable = change_$armor_damage$_value }
		change_variable = { which = change_$armor_damage$_value value = @tiny_origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$armor_damage$ FACTOR = change_$armor_damage$_value }
	}] #scope: fromfromfrom
	[[shield_damage] if = {
		limit = { 
			NOT = { is_variable_set = $shield_damage$_value } 
			check_modifier_value = { modifier = $shield_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $shield_damage$ variable = $shield_damage$_value }
		change_variable = { which = $shield_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$shield_damage$ FACTOR = $shield_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var } 
		if = { limit = { is_variable_set = change_$shield_damage$_value } clear_variable = change_$shield_damage$_value }
		export_modifier_to_variable = { modifier = $shield_damage$ variable = change_$shield_damage$_value }
		change_variable = { which = change_$shield_damage$_value value = @tiny_origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$shield_damage$ FACTOR = change_$shield_damage$_value }
	}] #scope: fromfromfrom
	[[hull_damage] if = {
		limit = { 
			NOT = { is_variable_set = $hull_damage$_value } 
			check_modifier_value = { modifier = $hull_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $hull_damage$ variable = $hull_damage$_value }
		change_variable = { which = $hull_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$hull_damage$ FACTOR = $hull_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$hull_damage$_value } clear_variable = change_$hull_damage$_value }
		export_modifier_to_variable = { modifier = $hull_damage$ variable = change_$hull_damage$_value }
		change_variable = { which = change_$hull_damage$_value value = @tiny_origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$hull_damage$ FACTOR = change_$hull_damage$_value }
	}] #scope: fromfromfrom
	[[weapon_damage] if = {
		limit = { 
			NOT = { is_variable_set = $weapon_damage$_value } 
			check_modifier_value = { modifier = $weapon_damage$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $weapon_damage$ variable = $weapon_damage$_value }
		change_variable = { which = $weapon_damage$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$weapon_damage$ FACTOR = $weapon_damage$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$weapon_damage$_value } clear_variable = change_$weapon_damage$_value }
		export_modifier_to_variable = { modifier = $weapon_damage$ variable = change_$weapon_damage$_value }
		change_variable = { which = change_$weapon_damage$_value value = @tiny_origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$weapon_damage$ FACTOR = change_$weapon_damage$_value }
	}] #scope: fromfromfrom
	[[tracking] if = {
		limit = { 
			NOT = { is_variable_set = $tracking$_value } 
			check_modifier_value = { modifier = $tracking$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $tracking$ variable = $tracking$_value }
		change_variable = { which = $tracking$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$tracking$ FACTOR = $tracking$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$tracking$_value } clear_variable = change_$tracking$_value }
		export_modifier_to_variable = { modifier = $tracking$ variable = change_$tracking$_value }
		change_variable = { which = change_$tracking$_value value = @quarter_origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$tracking$ FACTOR = change_$tracking$_value }
	}] #scope: fromfromfrom
	[[accuracy] if = {
		limit = { 
			NOT = { is_variable_set = $accuracy$_value } 
			check_modifier_value = { modifier = $accuracy$ value > @mult_origin_value } 
		}
		export_modifier_to_variable = { modifier = $accuracy$ variable = $accuracy$_value }
		change_variable = { which = $accuracy$_value value = @origin_value }
		set_invasion_fleet_basic_modifier = { SUB = basic_$accuracy$ FACTOR = $accuracy$_value }
	} else_if = { 
		limit = { has_ship_flag = fire_ship_var }
		if = { limit = { is_variable_set = change_$accuracy$_value } clear_variable = change_$accuracy$_value }
		export_modifier_to_variable = { modifier = $accuracy$ variable = change_$accuracy$_value }
		change_variable = { which = change_$accuracy$_value value = @quarter_origin_value }
		set_invasion_fleet_basic_modifier = { SUB = change_basic_$accuracy$ FACTOR = change_$accuracy$_value }
	}] #scope: fromfromfrom
}

remove_eternal_fleet_mult_variable = {
	[[hull_regen_add_perc] clear_variable = $hull_regen_add_perc$_value clear_variable = change_$hull_regen_add_perc$_value ]
	[[armor_regen_add_perc] clear_variable = $armor_regen_add_perc$_value clear_variable = change_$armor_regen_add_perc$_value ]
	[[shield_regen_add_perc] clear_variable = $shield_regen_add_perc$_value clear_variable = change_$shield_regen_add_perc$_value ]
	[[hull_mult] clear_variable = $hull_mult$_value clear_variable = change_$hull_mult$_value ]
	[[armor_mult] clear_variable = $armor_mult$_value clear_variable = change_$armor_mult$_value ]
	[[shield_mult] clear_variable = $shield_mult$_value clear_variable = change_$shield_mult$_value ]
	[[shield_penetration] clear_variable = $shield_penetration$_value clear_variable = change_$shield_penetration$_value ]
	[[armor_penetration] clear_variable = $armor_penetration$_value clear_variable = change_$armor_penetration$_value ]
	[[shield_penetration_own] clear_variable = $shield_penetration_own$_value clear_variable = change_$shield_penetration_own$_value ]
	[[armor_penetration_own] clear_variable = $armor_penetration_own$_value clear_variable = change_$armor_penetration_own$_value ]
	[[armor_damage] clear_variable = $armor_damage$_value clear_variable = change_$armor_damage$_value ]
	[[shield_damage] clear_variable = $shield_damage$_value clear_variable = change_$shield_damage$_value ]
	[[hull_damage] clear_variable = $hull_damage$_value clear_variable = change_$hull_damage$_value ]
	[[armor_damage_own] clear_variable = $armor_damage_own$_value clear_variable = change_$armor_damage_own$_value ]
	[[shield_damage_own] clear_variable = $shield_damage_own$_value clear_variable = change_$shield_damage_own$_value ]
	[[hull_damage_own] clear_variable = $hull_damage_own$_value clear_variable = change_$hull_damage_own$_value ]
	[[weapon_type_energy] clear_variable = $weapon_type_energy$_value clear_variable = change_$weapon_type_energy$_value ]
	[[weapon_type_explosive] clear_variable = $weapon_type_explosive$_value clear_variable = change_$weapon_type_explosive$_value ]
	[[weapon_type_kinetic] clear_variable = $weapon_type_kinetic$_value clear_variable = change_$weapon_type_kinetic$_value ]
	[[weapon_damage] clear_variable = $weapon_damage$_value clear_variable = change_$weapon_damage$_value ]
	[[weapon_damage_own] clear_variable = $weapon_damage_own$_value clear_variable = change_$weapon_damage_own$_value ]
	[[weapon_range_mult] clear_variable = $weapon_range_mult$_value clear_variable = change_$weapon_range_mult$_value ]
	[[fire_rate_mult] clear_variable = $fire_rate_mult$_value clear_variable = change_$fire_rate_mult$_value ]
	[[tracking] clear_variable = $tracking$_value clear_variable = change_$tracking$_value ]
	[[accuracy] clear_variable = $accuracy$_value clear_variable = change_$accuracy$_value ]
	[[tracking_own] clear_variable = $tracking_own$_value clear_variable = change_$tracking_own$_value ]
	[[accuracy_own] clear_variable = $accuracy_own$_value clear_variable = change_$accuracy_own$_value ]
	[[tracking_add_own] clear_variable = $tracking_add_own$_value clear_variable = change_$tracking_add_own$_value ]
	[[accuracy_add_own] clear_variable = $accuracy_add_own$_value clear_variable = change_$accuracy_add_own$_value ]
	[[shield_add] clear_variable = $shield_add$_value clear_variable = change_$shield_add$_value ]
	[[armor_add] clear_variable = $armor_add$_value clear_variable = change_$armor_add$_value ]
	[[shield_reduction] clear_variable = $shield_reduction$_value clear_variable = change_$shield_reduction$_value ]
	[[armor_reduction] clear_variable = $armor_reduction$_value clear_variable = change_$armor_reduction$_value ]
}

clear_battleship_modifier_fixed_ship = {
	remove_modifier = basic_ship_shield_penetration_mult				remove_modifier = change_basic_ship_shield_penetration_mult 
	remove_modifier = basic_ship_armor_penetration_mult					remove_modifier = change_basic_ship_armor_penetration_mult
	remove_modifier = basic_ship_armor_damage_mult						remove_modifier = change_basic_ship_armor_damage_mult
	remove_modifier = basic_ship_shield_damage_mult						remove_modifier = change_basic_ship_shield_damage_mult
	remove_modifier = basic_ship_hull_damage_mult						remove_modifier = change_basic_ship_hull_damage_mult
	remove_modifier = basic_ship_tracking_mult							remove_modifier = change_basic_ship_tracking_mult
	remove_modifier = basic_ship_weapon_damage							remove_modifier = change_basic_ship_weapon_damage
	remove_modifier = basic_ship_hull_regen_add_perc					remove_modifier = change_basic_ship_hull_regen_add_perc
	remove_modifier = basic_ship_armor_regen_add_perc					remove_modifier = change_basic_ship_armor_regen_add_perc
	remove_modifier = basic_ship_shield_regen_add_perc					remove_modifier = change_basic_ship_shield_regen_add_perc
	remove_modifier = basic_ship_hull_mult								remove_modifier = change_basic_ship_hull_mult
	remove_modifier = basic_ship_armor_mult								remove_modifier = change_basic_ship_armor_mult
	remove_modifier = basic_ship_shield_mult							remove_modifier = change_basic_ship_shield_mult
	remove_modifier = basic_ship_shield_reduction						remove_modifier = change_basic_ship_shield_reduction
	remove_modifier = basic_ship_armor_reduction						remove_modifier = change_basic_ship_armor_reduction
	remove_modifier = basic_ship_accuracy_mult							remove_modifier = change_basic_ship_accuracy_mult
	remove_modifier = basic_ship_weapon_range_mult						remove_modifier = change_basic_ship_weapon_range_mult
	remove_modifier = basic_ship_fire_rate_mult							remove_modifier = change_basic_ship_fire_rate_mult
	remove_modifier = basical_weapon_type_energy_weapon_damage_mult		remove_modifier = change_basical_weapon_type_energy_weapon_damage_mult
	remove_modifier = basical_weapon_type_explosive_weapon_damage_mult	remove_modifier = change_basical_weapon_type_explosive_weapon_damage_mult
	remove_modifier = basical_weapon_type_kinetic_weapon_damage_mult	remove_modifier = change_basical_weapon_type_kinetic_weapon_damage_mult
	remove_modifier = basic_ship_tracking_add							remove_modifier = change_basic_ship_tracking_add
	remove_modifier = basic_ship_accuracy_add							remove_modifier = change_basic_ship_accuracy_add
	remove_modifier = basic_ship_armor_add								remove_modifier = change_basic_ship_armor_add
	remove_modifier = basic_ship_shield_add								remove_modifier = change_basic_ship_shield_add
	remove_eternal_fleet_mult_variable = {
		hull_regen_add_perc = ship_hull_regen_add_perc 					hull_mult = ship_hull_mult
		shield_regen_add_perc = ship_shield_regen_add_perc 				armor_mult = ship_armor_mult
		armor_regen_add_perc = ship_armor_regen_add_perc 				shield_mult = ship_shield_mult
		shield_penetration_own = ship_shield_penetration_mult			shield_penetration = ship_shield_penetration_mult 
		armor_penetration_own = ship_armor_penetration_mult				armor_penetration = ship_armor_penetration_mult
		weapon_damage_own = ship_weapon_damage							weapon_damage = ship_weapon_damage
		tracking = ship_tracking_mult									accuracy = ship_accuracy_mult
		shield_reduction = ship_shield_reduction						armor_reduction = ship_armor_reduction
		armor_damage = ship_armor_damage_mult							hull_damage = ship_hull_damage_mult
		shield_damage = ship_shield_damage_mult							weapon_type_explosive = weapon_type_explosive_weapon_damage_mult
		weapon_type_energy = weapon_type_energy_weapon_damage_mult		weapon_type_kinetic = weapon_type_kinetic_weapon_damage_mult
		accuracy_own = ship_accuracy_mult								tracking_own = ship_tracking_mult
		weapon_range_mult = ship_weapon_range_mult						fire_rate_mult = ship_fire_rate_mult
		tracking_add_own = ship_tracking_add							accuracy_add_own = ship_accuracy_add
		shield_add = ship_shield_add									armor_add = ship_armor_add
		armor_damage_own = ship_armor_damage_mult						shield_damage_own = ship_shield_damage_mult
		hull_damage_own = ship_hull_damage_mult
	}
}

set_fleet_modifier = {
	add_modifier = { modifier = $SUB$ days = $DAYS|-1$ }
	change_variable = { which = $SUB$_var value = 1 }
}

set_invasion_fleet_basic_modifier = { 
	add_modifier = { modifier = $SUB$ multiplier = $FACTOR$ days = $DAYS|-1$ } 
}

kuat_reduce_hp_percent = {
	export_trigger_value_to_variable = { trigger = has_hp variable = exist_hp_value }
	multiply_variable = { which = exist_hp_value value = 0.01 }
	multiply_variable = { which = exist_hp_value value = $value$ }
	reduce_hp = exist_hp_value clear_variable = exist_hp_value
}

kuat_set_epsilon_obelisk_code = {
	random_list = {
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_0 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 0 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_1 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 1 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_2 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 2 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_3 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 3 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_4 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 4 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_5 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 5 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_6 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 6 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_7 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 7 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_8 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 8 } } }
		10 = { set_planet_flag = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$_9 event_target:global_event_country = { set_variable = { which = kuat_epsilon_obelisk_$ag_obelisk_seq$_$ag_position$ value = 9 } } }
	}
}

kuat_upgrade_epsilon_obelisk = {
	if = {
		limit = { exists = owner }
		owner = { save_event_target_as = kuat_target_megastructure_owner }
		switch = {
			trigger = has_megastructure_flag
			kuat_epsilon_obelisk_1 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					owner = event_target:kuat_target_megastructure_owner
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_1 }
				}
			} }
			kuat_epsilon_obelisk_2 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					owner = event_target:kuat_target_megastructure_owner
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_2 }
				}
			} }
			kuat_epsilon_obelisk_3 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					owner = event_target:kuat_target_megastructure_owner
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_3 }
				}
			} }
		}
	}
	else = {
		switch = {
			trigger = has_megastructure_flag
			kuat_epsilon_obelisk_1 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_1 }
				}
			} }
			kuat_epsilon_obelisk_2 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_2 }
				}
			} }
			kuat_epsilon_obelisk_3 = { solar_system = {
				spawn_megastructure = {
					type = kuat_epsilon_obelisk_$ag_target_level$
					coords_from = prev
					init_effect = { set_megastructure_flag = kuat_epsilon_obelisk_3 }
				}
			} }
		}
	}
	remove_megastructure = this
}

#fromfromfrom: enemy fleet
#fromfrom: eternal fleet
kuat_copy_leader_learning_system = {
	if = {
		limit = { fromfromfrom = { NOT = { has_fleet_flag = eternal_learned_leader } } }
		fromfromfrom = {
			random_list = {
				1 = { 
					if = {
						limit = { 
							exists = leader 
							leader = { NOT = { has_leader_flag = eternal_learned_leader } }
						}
						set_fleet_flag = eternal_learned_leader
						leader = { set_timed_leader_flag = { flag = eternal_learned_leader days = 180 } }
						root = {
							clone_leader = {
								class = admiral
								target = prev.leader
								effect = { save_event_target_as = eternal_learned_leader_copy }
							}
							fromfrom = {
								if = {
									limit = { NOT = { has_fleet_flag = have_learned_leader } }
									if = {
										limit = { exists = leader }
										leader = { kill_leader = { show_notification = no } }
									}
									assign_leader = event_target:eternal_learned_leader_copy
									set_timed_fleet_flag = { flag = have_learned_leader days = 180 }
								}
								else = { owner = { 
									random_owned_fleet = {
										limit = { NOT = { has_fleet_flag = have_learned_leader } }
										if = {
											limit = { exists = leader }
											leader = { kill_leader = { show_notification = no } }
										}
										assign_leader = event_target:eternal_learned_leader_copy
										set_timed_fleet_flag = { flag = have_learned_leader days = 180 }
									}
								} }
							}
						}
					}
					else = { every_owned_ship = { kuat_reduce_hp_percent = { value = 1 } } }
				}
				99 = {  }
			}
			reroll_random = yes
		}
	}
}