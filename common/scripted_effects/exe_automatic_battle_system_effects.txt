set_automatic_fleet_avaliable = {
	optimize_memory
	set_fleet_flag = kuat_auto_fleet_system
	[[TYPE] fleet_execute_order_$TYPE$ = { FRIENDLY_TARGET = $FRIENDLY_TARGET$ }]
}

remove_automatic_fleet_avaliable = {
	optimize_memory
	root.owner = { subtract_variable = { which = fleet_id value = 1 } } clear_variable = fleet_id
	clear_orders = yes clear_fleet_actions = this
	remove_fleet_flag = kuat_auto_fleet_system
	remove_fleet_flag = kuat_auto_cannot_find_path
}


# $FRIENDLY_TARGET$ is root
fleet_execute_order_transport_automatic_action = {
	optimize_memory
	queue_actions = { repeat = { find_closest_system = {
		trigger = {
			id = transport_automatic_action.0.find_closest_system
			any_system_planet = {
				exists = controller has_planet_flag = kuat_bombardment_planet
				controller = { is_at_war_with = $FRIENDLY_TARGET$ } 
				any_fleet_in_orbit = { exists = controller controller = { is_same_value = $FRIENDLY_TARGET$ } }
			}
		}
		found_system = { 
			effect = {
				id = transport_automatic_action.0.found_system
				ROOT = { 
					set_location = { target = prev.star distance = 300 angle = random } 
					every_owned_ship = { create_jump_particle_effect = yes }
				}
			} 
			find_closest_planet = {
				trigger = {
					id = transport_automatic_action.0.find_closest_planet
					has_planet_flag = kuat_bombardment_planet
					exists = controller controller = { is_at_war_with = $FRIENDLY_TARGET$ }
					any_fleet_in_orbit = { exists = controller controller = { is_same_value = $FRIENDLY_TARGET$ } }
				}
				found_planet = { 
					orbit_planet = this 
					effect = {
						id = transport_automatic_action.0.found_planet
						Root = { set_fleet_stance = aggressive }
					}
					wait = { duration = 75 random = 25 } 
				}
			}
		}
		failed = { wait = 75 effect = { 
			id = colossus_automatic_action.99.ftl 
			if = { limit = { $FRIENDLY_TARGET$ = { is_at_war = no } } ROOT = { remove_automatic_fleet_avaliable = yes } }
		} }
	} } }
}

fleet_execute_order_colossus_automatic_action = {
	optimize_memory
	queue_actions = { repeat = { find_closest_system = {
		trigger = {
			id = colossus_automatic_action.0.find_closest_system
			any_system_planet = {
				exists = controller has_planet_flag = kuat_bombardment_planet
				controller = { is_at_war_with = $FRIENDLY_TARGET$ }
				any_fleet_in_orbit = { exists = controller controller = { is_same_value = $FRIENDLY_TARGET$ } }
			}
		}
		found_system = { 
			effect = {
				id = colossus_automatic_action.0.found_system
				ROOT = { 
					set_location = { target = prev.star distance = 300 angle = random } 
					every_owned_ship = { create_jump_particle_effect = yes }
				}
			} 
			find_closest_planet = {
				trigger = {
					id = colossus_automatic_action.0.find_closest_planet
					has_planet_flag = kuat_bombardment_planet
					exists = controller controller = { is_at_war_with = $FRIENDLY_TARGET$ }
					any_fleet_in_orbit = { exists = controller controller = { is_same_value = $FRIENDLY_TARGET$ } }
				}
				found_planet = { destroy_planet = { target = this skip_rules = yes } effect = { 
					id = colossus_automatic_action.0.destroy_planet 
					remove_planet_flag = kuat_bombardment_planet 
				} }
			}
		}
		failed = { wait = 75 effect = { 
			id = colossus_automatic_action.99.ftl 
			if = { limit = { $FRIENDLY_TARGET$ = { is_at_war = no } } ROOT = { remove_automatic_fleet_avaliable = yes } }
		} }
	} } } 
}

fleet_execute_order_millatry_automatic_action = {
	optimize_memory
	root.owner = { change_variable = { which = fleet_id value = 1 } } 
	set_variable = { which = fleet_id value = root.owner.fleet_id } 
	solar_system = { set_variable = { which = kuat_fleet_id value = prev.fleet_id } }
	queue_actions = {
		repeat = {
			effect = {
				id = millatry_automatic_action.0.effect
				if = {
					limit = { has_fleet_flag = kuat_auto_cannot_find_path }
					if = { 
						limit = { $FRIENDLY_TARGET$ = { is_at_war = no } } 
						remove_automatic_fleet_avaliable = yes 
					}
					every_system = { clear_variable = kuat_fleet_id }
					remove_fleet_flag = kuat_auto_cannot_find_path
				}
			}
			find_closest_system = {
				trigger = {
					id = millatry_automatic_action.0.find_closest_system
					exists = starbase
					starbase = { controller = { is_same_value = $FRIENDLY_TARGET$ } }
					any_fleet_in_system = { exists = controller controller = { is_at_war_with = $FRIENDLY_TARGET$ } }
				}
				found_system = { wait = 5 effect = {
					id = millatry_automatic_action.0.found_system
					ROOT = {  if = {
						limit = { is_in_combat = no NOT = { has_fleet_flag = kuat_auto_defence_fleet_temple } }
						set_location = { target = prev.star distance = 300 angle = random }
						set_timed_fleet_flag = { flag = kuat_auto_defence_fleet_temple days = 30 }
					} }
					every_fleet_in_system = {
						limit = { exists = controller controller = { is_at_war_with = $FRIENDLY_TARGET$ } }
						set_cloaking_active = no
					}
				} }
				failed = { find_closest_system = {
					trigger = {
						id = millatry_automatic_action.1.find_closest_system
						ROOT = { can_access_system = prev }
						exists = starbase
						starbase = { controller = { is_at_war_with = $FRIENDLY_TARGET$ } }
						check_variable = { which = kuat_fleet_id value < 1 }
					}
					found_system = {
						effect = {
							id = millatry_automatic_action.1.found_system
							set_variable = { which = kuat_fleet_id value = root.fleet_id }
						}
						move_to = this
						wait = 5
					}
					failed = { find_closest_system = {
						trigger = {
							id = millatry_automatic_action.2.find_closest_system
							ROOT = { can_access_system = prev }
							any_system_planet = {
								controller = { is_at_war_with = $FRIENDLY_TARGET$ }
								is_colony = yes
								NOT = { any_fleet_in_orbit = {
									exists = controller
									is_ship_class = shipclass_military
									controller = { is_same_value = $FRIENDLY_TARGET$ }
								} }
							}
							check_variable = { which = kuat_fleet_id value < 1 }
						}
						found_system = {
							effect = {
								id = millatry_automatic_action.2.found_system
								set_variable = { which = kuat_fleet_id value = root.fleet_id }
							}
							move_to = this
							repeat = {
								while = {
									id = millatry_automatic_action.2.repeat
									any_system_planet = {
										controller = { is_at_war_with = $FRIENDLY_TARGET$ }
										is_colony = yes
										NOT = { any_fleet_in_orbit = {
											exists = controller
											is_ship_class = shipclass_military
											controller = { is_same_value = $FRIENDLY_TARGET$ }
										} }
									}
								}
								find_closest_planet = {
									trigger = {
										id = millatry_automatic_action.2.find_closest_planet
										is_colony = yes
										controller = { is_at_war_with = $FRIENDLY_TARGET$ }
										NOT = { any_fleet_in_orbit = {
											exists = controller
											is_ship_class = shipclass_military
											controller = { is_same_value = $FRIENDLY_TARGET$ }
										} }
									}
									found_planet = {
										orbit_planet = this
										effect = {
											id = millatry_automatic_action.2.found_planet
											ROOT = { set_fleet_flag = kuat_bombaring_fleet }
											set_planet_flag = kuat_bombardment_planet
										}
										repeat = {
											while = { 
												id = millatry_automatic_action.2.repeat
												ROOT = { has_fleet_flag = kuat_bombaring_fleet } 
											}
											effect = {
												id = millatry_automatic_action.2.effect
												if = { 
													limit = { NOT = { controller = { is_at_war_with = $FRIENDLY_TARGET$ } } } 
													ROOT = { remove_fleet_flag = kuat_bombaring_fleet } 
													remove_planet_flag = kuat_bombardment_planet
												}
											} 
											wait = 5
										}
									}
								}
								wait = 5
							} 
							wait = 5
						}
						failed = { find_closest_system = {
							trigger = {
								id = millatry_automatic_action.3.find_closest_system
								ROOT = { can_access_system = prev }
								any_system_planet = {
									controller = { is_at_war_with = $FRIENDLY_TARGET$ }
									is_colony = yes
									NOT = { any_fleet_in_orbit = {
										exists = controller
										is_ship_class = shipclass_military
										controller = { is_same_value = $FRIENDLY_TARGET$ }
									} }
								}
							}
							found_system = {
								move_to = this
								repeat = {
									while = {
										id = millatry_automatic_action.3.repeat
										any_system_planet = {
											controller = { is_at_war_with = $FRIENDLY_TARGET$ }
											is_colony = yes
											NOT = { any_fleet_in_orbit = {
												exists = controller
												is_ship_class = shipclass_military
												controller = { is_same_value = $FRIENDLY_TARGET$ }
											} }
										}
									}
									find_closest_planet = {
										trigger = {
											id = millatry_automatic_action.4.find_closest_planet
											is_colony = yes
											controller = { is_at_war_with = $FRIENDLY_TARGET$ }
											NOT = { any_fleet_in_orbit = {
												exists = controller
												is_ship_class = shipclass_military
												controller = { is_same_value = $FRIENDLY_TARGET$ }
											} }
										}
										found_planet = {
											orbit_planet = this
											effect = {
												id = millatry_automatic_action.4.found_planet
												ROOT = { set_fleet_flag = kuat_bombaring_fleet }
												set_planet_flag = kuat_bombardment_planet
											}
											repeat = {
												while = { 
													id = millatry_automatic_action.5.repeat
													ROOT = { has_fleet_flag = kuat_bombaring_fleet } 
												}
												effect = {
													id = millatry_automatic_action.5.effect
													if = { 
														limit = { NOT = { controller = { is_at_war_with = $FRIENDLY_TARGET$ } } } 
														ROOT = { remove_fleet_flag = kuat_bombaring_fleet } 
														remove_planet_flag = kuat_bombardment_planet
													}
												} 
												wait = 5
											}
										}
									}
									wait = 5
								} 
								wait = 5
							}
							failed = { wait = 1 effect = { id = colossus_automatic_action.99.ftl ROOT = { set_fleet_flag = kuat_auto_cannot_find_path } } }
						} }
					} }
				} }
			}
		}
	} 
}

fleet_execute_order_defender_automatic_action = {
	optimize_memory
	queue_actions = { repeat = { find_closest_system = {
		trigger = {
			id = defender_automatic_action.0.find_closest_system
			exists = owner
			owner = { is_same_value = $FRIENDLY_TARGET$ }
			any_fleet_in_system = {
				exists = owner
				owner = { is_hostile = $FRIENDLY_TARGET$ }
			}
		}
		found_system = { effect = {
			id = defender_automatic_action.1.found_system
			ROOT = {  if = {
				limit = { is_in_combat = no NOT = { has_fleet_flag = kuat_auto_defence_fleet_temple } }
				set_location = { target = prev.star distance = 300 angle = random }
				set_timed_fleet_flag = { flag = kuat_auto_defence_fleet_temple days = 30 }
			} }
			every_fleet_in_system = {
				limit = { exists = controller controller = { is_at_war_with = $FRIENDLY_TARGET$ } }
				set_cloaking_active = no
			}
		} }
		failed = { find_random_system = {
			trigger = {
				id = defender_automatic_action.1.find_random_system
				exists = owner
				NOT = { has_star_flag = petrol_system_temple }
				owner = { is_same_value = $FRIENDLY_TARGET$ }
			}
			found_system = { 
				move_to = this
				effect = {
					id = defender_automatic_action.1.found_system
					set_timed_star_flag = { flag = petrol_system_temple days = 1 }
				}
			}
			failed = { effect = { id = colossus_automatic_action.99.ftl ROOT = { remove_automatic_fleet_avaliable = yes } } }
		} }
	} } } 
}