@ag_jumpdrive_effect_scale = 0.05
@ag_kae_ge_fleet_jumpdrive_to_target_distance = 200
#ETERNAL AND CONTRACTOR ACTION
kuat_exe_invasion_jump_drive_planet_action  = {
	random_list = {
		80 = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		20 = {
			modifier = {
				factor = 0
				prevprev = { any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown } }
			}
			prevprev = {
				set_location = { target = prev distance = 300 angle = random }
				every_owned_ship = { kuat_create_jump_particle_effect = yes }
				while = {
					limit = { any_owned_ship = { NOT = { has_ship_flag = kuat_jump_drive_cooldown } } }
					random_owned_ship = {
						limit = { NOT = { has_ship_flag = kuat_jump_drive_cooldown } }
						set_timed_ship_flag = { flag = kuat_jump_drive_cooldown days = 200 }
						add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
					}
				}
				auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
			}
		}
	}
}

kuat_exe_invasion_jump_drive_fleet_action  = {
	random_list = {
		75 = { prevprev = { 
			auto_follow_fleet = { target = prev attack_fleet = yes } 
			#set_fleet_flag = kuat_disable_other_fleet_in_system
		} }
		25 = {
			modifier = {
				factor = 0
				prevprev = { any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown } }
			}
			prevprev = {
				set_location = { target = prev distance = @ag_kae_ge_fleet_jumpdrive_to_target_distance angle = random }
				every_owned_ship = { kuat_create_jump_particle_effect = yes }
				while = {
					limit = { any_owned_ship = { NOT = { has_ship_flag = kuat_jump_drive_cooldown } } }
					random_owned_ship = {
						limit = { NOT = { has_ship_flag = kuat_jump_drive_cooldown } }
						set_timed_ship_flag = { flag = kuat_jump_drive_cooldown days = 200 }
						add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
					}
				}
				auto_follow_fleet = { target = prev attack_fleet = yes }
				#set_fleet_flag = kuat_disable_other_fleet_in_system
			}
		}
	}
}

kuat_create_jump_particle_effect = {
	optimize_memory
	create_ambient_object = {
		type = horror_spawn_object
		location = this
		use_3d_location = yes
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
		entity_scale_to_size = yes
		scale = @ag_jumpdrive_effect_scale
	}
}

#paramater : TYPE OWNER(CRISIS)
kuat_exe_invasion_fleet_wandering_action = {
	optimize_memory
	clear_orders = yes
	clear_fleet_actions = this
	random_list = {
		#周围星系随机设置目标
		75 = {
			solar_system = { random_neighbor_system = {
				limit = { prevprev = { can_access_system = prev } }
				save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
			} }
			if = {
				limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
				}
			} 
			else_if = {
				limit = { any_system = {
					prev = { can_access_system = prev }
				} }
				random_system = {
					limit = { prev = { can_access_system = prev } }
					save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
				}
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
				}
			}
			else = { 
				log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
				change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
			}
		}
		#找任意一个敌对目标，紧急跃迁，不需要debuff
		25 = {
			modifier = { 
				mult = 0 
				any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown } 
			}
			modifier = {
				mult = $TYPE$_fleet_none_target_var
				is_variable_set = $TYPE$_fleet_none_target_var
			}
			clear_variable = $TYPE$_fleet_none_target_var
			random_system = {
				limit = {
					NOT = { is_same_value = prev.solar_system }
					OR = {
						AND = {
							exists = starbase
							starbase = { exists = owner owner = { is_hostile = event_target:$OWNER$ } }
						}
						any_system_planet = {
							exists = controller
							controller = { is_hostile = event_target:$OWNER$ }
							OR = {
								is_colony = yes
								is_under_colonization = yes
							}
							count_fleet_in_orbit = { count = 0 limit = {
								exists = owner
								owner = { is_same_value = event_target:$OWNER$ }
								NOT = { is_same_value = root }
							} }
						}
						any_ship_in_system = {
							exists = owner
							owner = { is_hostile = event_target:$OWNER$ }
							is_disabled = no is_ship_class = shipclass_military
						}
					}
				}
				save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
			}
			if = {
				limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					random_system_planet = {
						limit = { is_primary_star = yes }
						prevprev = {
							set_location = { target = prev distance = 300 angle = random }
							every_owned_ship = { kuat_create_jump_particle_effect = yes }
							auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
						}
					}
				}
			} 
			else = {
				solar_system = { random_neighbor_system = {
					limit = { prevprev = { can_access_system = prev } }
					save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
				} }
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
					event_target:$TYPE$_invasion_fleet_wandering_action_target = {
						system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
					}
				} 
				else_if = {
					limit = { any_system = {
						prev = { can_access_system = prev }
					} }
					random_system = {
						limit = { prev = { can_access_system = prev } }
						save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
					}
					event_target:$TYPE$_invasion_fleet_wandering_action_target = {
						system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
					}
				}
				else = { 
					log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
					change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
				}
			}
		}
	}
}

#paramater : TYPE OWNER(CRISIS)
kuat_exe_invasion_fleet_action = {
	optimize_memory
	# 寻找所在星系目前没有己方单位的敌对星球
	if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = {
					any_system_planet = {
						exists = controller
						controller = { is_hostile = event_target:$OWNER$ }
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						count_fleet_in_orbit = { count = 0 limit = {
							exists = owner
							owner = { is_same_value = event_target:$OWNER$ }
							NOT = { is_same_value = root }
						} }
					}
				}
			}
		}
		root = {
			solar_system = {
				random_system_planet = {
					limit = {
						exists = controller
						controller = { is_hostile = event_target:$OWNER$ }
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						count_fleet_in_orbit = { count = 0 limit = {
							exists = owner
							owner = { is_same_value = event_target:$OWNER$ }
							NOT = { is_same_value = root }
						} }
					}
					prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
				}
			}
		}
	}
	# 寻找所在星系内敌对军事舰船
	else_if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = { any_ship_in_system = {
					exists = owner
					owner = { is_hostile = event_target:$OWNER$ }
					is_disabled = no is_ship_class = shipclass_military
				} }
			}
		}
		root = {
			solar_system = {
				random_fleet_in_system = {
					limit = {
						exists = owner
						owner = { is_hostile = event_target:$OWNER$ }
						any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
					}
					prevprev = { 
						auto_follow_fleet = { target = prev attack_fleet = yes } 
						#set_fleet_flag = kuat_disable_other_fleet_in_system
					}
				}
			}
		}
	}
	# 寻找周围星系有无敌对单位
	else_if = {
		limit = {
			solar_system = { any_neighbor_system = { OR = {
				AND = {
					exists = starbase
					starbase = { exists = owner owner = { is_hostile = event_target:$OWNER$ } }
				}
				any_ship_in_system = {
					exists = owner
					owner = { is_hostile = event_target:$OWNER$ }
					is_disabled = no is_ship_class = shipclass_military
				}
			} } }
		}
		solar_system = { random_neighbor_system = {
			limit = { OR = {
				AND = {
					exists = starbase
					starbase = { exists = owner owner = { is_hostile = event_target:$OWNER$ } }
				}
				any_ship_in_system = {
					exists = owner
					owner = { is_hostile = event_target:$OWNER$ }
					is_disabled = no is_ship_class = shipclass_military
				}
			} }
			system_star = { prevprevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		} }
	}
	# 在夸特的星系内，寻找军事基地星域
	else_if = {
		limit = {
			solar_system = { kuat_is_kuat_system = yes }
			any_system = {
				has_star_flag = kuat_military_base_local_home
				any_system_megastructure = { is_megastructure_type = exe_outer_gate }
			}
		}
		if = {
			limit = {
				solar_system = { OR = {
					has_star_flag = Kuat_system 
					has_star_flag = Kuat_system_int
				} }
			}
			random_system = {
				limit = { OR = {
					has_star_flag = Kuat_system_3 
					has_star_flag = Kuat_system_int_3
				} }
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
		else_if = {
			limit = {
				solar_system = { OR = {
					has_star_flag = Kuat_system_3 
					has_star_flag = Kuat_system_int_3
				} }
			}
			random_system = {
				limit = { OR = {
					has_star_flag = Kuat_system_2 
					has_star_flag = Kuat_system_int_2
				} }
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
		else_if = {
			limit = {
				solar_system = { OR = {
					has_star_flag = Kuat_system_2 
					has_star_flag = Kuat_system_int_2
				} }
			}
			random_system = {
				limit = { OR = {
					has_star_flag = Kuat_system_1
					has_star_flag = Kuat_system_int_1
				} }
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
		else_if = {
			limit = {
				solar_system = { OR = {
					has_star_flag = Kuat_system_1 
					has_star_flag = Kuat_system_int_1
					has_star_flag = Kuat_system_int_4
				} }
			}
			random_system = {
				limit = {
					has_star_flag = kuat_military_base_local_home
					any_system_megastructure = { is_megastructure_type = exe_outer_gate }
				}
				system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
			}
		}
	}
	# 在军事基地核心星域寻找没有己方舰队的出口
	else_if = {
		limit = { 
			solar_system = { has_star_flag = kuat_military_base_local_home }
			any_system = {
				has_star_flag = kuat_military_sublocal_home
				count_fleet_in_system = {
					count = 0
					limit = { NOT = { is_same_value = root } has_fleet_flag = ag_kuat_invasion_fleet }
				}
			}
		}
		random_system = {
			limit = {
				has_star_flag = kuat_military_sublocal_home
				count_fleet_in_system = {
					count = 0
					limit = { NOT = { is_same_value = root } has_fleet_flag = ag_kuat_invasion_fleet }
				}
			}
			system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		}
	}
	# 在军事基地外围星域寻找出口
	else_if = {
		limit = {  
			solar_system = { has_star_flag = kuat_military_sublocal_home }
			any_system = { has_star_flag = kuat_outlander_exe_center_rim_gate }
		}
		random_system = {
			limit = { has_star_flag = kuat_outlander_exe_center_rim_gate }
			system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		}
	}
	# 自主行为启动
	else = {
		random_list = {
			# 25%概率寻找50步内的敌对星系作为目标
			25 = {
				#开始找目标
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						OR = {
							AND = {
								exists = starbase
								starbase = {
									exists = owner
									owner = { is_hostile = event_target:$OWNER$ }
								}
							}
							any_system_planet = {
								exists = controller
								controller = { is_hostile = event_target:$OWNER$ }
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								count_fleet_in_orbit = { count = 0 limit = {
									exists = owner
									owner = { is_same_value = event_target:$OWNER$ }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = controller
									controller = { is_hostile = event_target:$OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = owner
										owner = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = controller
									controller = { is_hostile = event_target:$OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = owner
										owner = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
								kuat_exe_invasion_jump_drive_planet_action = yes
							}
						} 
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				} 
				#找不到目标，再找一次
				else = {
					#开始找目标
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = owner
										owner = { is_hostile = event_target:$OWNER$ }
									}
								}
								any_system_planet = {
									exists = controller
									controller = { is_hostile = event_target:$OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = owner
										owner = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										exists = controller
										controller = { is_hostile = event_target:$OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = owner
											owner = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
								}
								random_system_planet = {
									limit = {
										exists = controller
										controller = { is_hostile = event_target:$OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = owner
											owner = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
									kuat_exe_invasion_jump_drive_planet_action = yes
								}
							} 
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { kuat_exe_invasion_fleet_wandering_action = { TYPE = $TYPE$  OWNER = $OWNER$ } }
				}
			}
			25 = {
				# 25%概率去找10跳以内的空间站或者星球舰队
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						OR = {
							AND = {
								exists = starbase
								starbase = { exists = owner owner = { is_hostile = event_target:$OWNER$ } }
							}
							any_system_planet = {
								exists = controller
								controller = { is_hostile = event_target:$OWNER$ }
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								count_fleet_in_orbit = { count = 0 limit = {
									exists = owner
									owner = { is_same_value = event_target:$OWNER$ }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = controller
									controller = { is_hostile = event_target:$OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = owner
										owner = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = controller
									controller = { is_hostile = event_target:$OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = owner
										owner = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
								kuat_exe_invasion_jump_drive_planet_action = yes
							}
						} 
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				} 
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = owner
										owner = { is_hostile = event_target:$OWNER$ }
									}
								}
								any_system_planet = {
									exists = controller
									controller = { is_hostile = event_target:$OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = owner
										owner = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										exists = controller
										controller = { is_hostile = event_target:$OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = owner
											owner = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
								}
								random_system_planet = {
									limit = {
										exists = controller
										controller = { is_hostile = event_target:$OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = owner
											owner = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
									kuat_exe_invasion_jump_drive_planet_action = yes
								}
							} 
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { kuat_exe_invasion_fleet_wandering_action = { TYPE = $TYPE$  OWNER = $OWNER$ } }
				}
			}
			25 = {
				# 25%概率找50跳内未停用的敌对舰船
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						any_ship_in_system = {
							exists = owner
							owner = { is_hostile = event_target:$OWNER$ }
							is_disabled = no is_ship_class = shipclass_military
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = owner
								owner = { is_hostile = event_target:$OWNER$ }
								any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
							}
							kuat_exe_invasion_jump_drive_fleet_action = yes
						}
					}
				} 
				#找不到目标，再找一次
				else = {
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							any_ship_in_system = {
								exists = owner
								owner = { is_hostile = event_target:$OWNER$ }
								is_disabled = no is_ship_class = shipclass_military
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							random_fleet_in_system = {
								limit = {
									exists = owner
									owner = { is_hostile = event_target:$OWNER$ }
									any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
								}
								kuat_exe_invasion_jump_drive_fleet_action = yes
							}
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { kuat_exe_invasion_fleet_wandering_action = { TYPE = $TYPE$  OWNER = $OWNER$ } }
				}
			}
			25 = {
				# 25%概率找10跳内未停用的敌对舰船
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						any_ship_in_system = {
							exists = owner
							owner = { is_hostile = event_target:$OWNER$ }
							is_disabled = no is_ship_class = shipclass_military
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = owner
								owner = { is_hostile = event_target:$OWNER$ }
								any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
							}
							kuat_exe_invasion_jump_drive_fleet_action = yes
						}
					}
				} 
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							any_ship_in_system = {
								exists = owner
								owner = { is_hostile = event_target:$OWNER$ }
								is_disabled = no is_ship_class = shipclass_military
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							random_fleet_in_system = {
								limit = {
									exists = owner
									owner = { is_hostile = event_target:$OWNER$ }
									any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
								}
								kuat_exe_invasion_jump_drive_fleet_action = yes
							}
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { kuat_exe_invasion_fleet_wandering_action = { TYPE = $TYPE$  OWNER = $OWNER$ } }
				}
			}
		}
	}
}

#KUAT FLEET ACTION
kuat_fleet_execute_order_1 = {
	optimize_memory
	queue_actions = {
		repeat = {
			effect = {
				id = executor.1.c
				if = {
					limit = { has_fleet_flag = kuat_cannot_find_path }
					if = {
						limit = { any_country = { is_at_war_with = $OWNER_TARGET$ } }
						random_system = {
							limit = { any_system_planet = { 
								exists = controller
								controller = { is_at_war_with = $OWNER_TARGET$ } 
							} }
							random_system_planet = { ROOT = { 
								set_location = { target = PREV distance = 300 angle = random } 
								every_owned_ship = { kuat_create_jump_particle_effect = yes }
							} }
						}
					}
					else = {
						destroy_fleet = { target = this destroy_template = yes kill_leader = yes }
						every_system = {
							limit = { check_variable = { which = kuat_fleet_id value >= 1 } }
							clear_variable = kuat_fleet_id
						}
					}
					remove_fleet_flag = kuat_cannot_find_path
				}
			}
			find_closest_system = {
				trigger = {
					id = executor.1
					ROOT = { can_access_system = prev }
					OR = {
						any_system_planet = {
							exists = controller
							controller = { is_at_war_with = $OWNER_TARGET$ }
						}
						AND = { exists = starbase starbase = { controller = { is_hostile = $OWNER_TARGET$ } } }
					}
					check_variable = { which = kuat_fleet_id value < 1 }
				}
				found_system = {
					effect = {
						id = executor.2.r1
						set_variable = { which = kuat_fleet_id value = root.fleet_id }
					}
					move_to = this
					repeat = {
						while = {
							id = executor.2.t0
							any_system_planet = {
								exists = controller
								controller = { is_at_war_with = $OWNER_TARGET$ }
							}
						}
						find_closest_planet = {
							trigger = {
								id = executor.2
								exists = controller
								controller = { is_at_war_with = $OWNER_TARGET$ }
							}
							found_planet = {
								orbit_planet = this
								effect = {
									id = executor.3
									set_planet_flag = ruins_planet
									ROOT = { set_fleet_flag = kuat_fallen_bombaring_fleet }
								}
								repeat = {
									while = { id = executor.3.t0 ROOT = { has_fleet_flag = kuat_fallen_bombaring_fleet } }
									effect = {
										id = executor.3.t1
										if = { limit = { is_colony = no } ROOT = { remove_fleet_flag = kuat_fallen_bombaring_fleet } }
									} 
									wait = 5
								}
							}
						}
						wait = 5
					}
					wait = 15
				}
				failed = {
					find_closest_system = {
						trigger = {
							id = executor.5.t9
							ROOT = { can_access_system = prev }
							OR = {
								any_system_planet = {
									exists = controller
									controller = { is_at_war_with = $OWNER_TARGET$ }
								}
								AND = {
									exists = starbase
									starbase = { owner = { is_hostile = $OWNER_TARGET$ } }
								}
							}
						}
						found_system = {
							move_to = this
							repeat = {
								while = {
									id = executor.5.t0
									any_system_planet = {
										exists = controller
										controller = { is_at_war_with = $OWNER_TARGET$ }
									}
								}
								find_closest_planet = {
									trigger = {
										id = executor.5.t5
										exists = controller
										controller = { is_at_war_with = $OWNER_TARGET$ }
									}
									found_planet = {
										orbit_planet = this
										effect = {
											id = executor.5.t4
											set_planet_flag = ruins_planet
											ROOT = { set_fleet_flag = kuat_fallen_bombaring_fleet }
										}
										repeat = {
											while = { id = executor.5.t3 ROOT = { has_fleet_flag = kuat_fallen_bombaring_fleet } }
											effect = {
												id = executor.5.t1
												if = { limit = { is_colony = no } ROOT = { remove_fleet_flag = kuat_fallen_bombaring_fleet } }
											}
											wait = 5
										}
									}
								}
								wait = 5
							}
							wait = 15
						}
						failed = { effect = { id = executor.1.b ROOT = { set_fleet_flag = kuat_cannot_find_path } } wait = 60 }
					}
				}
			}
		}
	}
}

kuat_fleet_execute_order_3 = {
	optimize_memory
	queue_actions = {
		repeat = {
			effect = {
				id = executor.20.j
				if = {
					limit = { has_fleet_flag = kuat_cannot_find_path }
					if = {
						limit = { any_country = { kuat_is_crisis_faction = yes } }
						random_system = {
							limit = { any_fleet_in_system = { owner = { kuat_is_crisis_faction = yes } } }
							random_system_planet = { prevprev = { 
								set_location = { target = PREV distance = 300 angle = random } 
								every_owned_ship = { kuat_create_jump_particle_effect = yes }
							}  }
						}
					}
					else = {
						destroy_fleet = { target = this destroy_template = yes kill_leader = yes }
						every_system = {
							limit = { check_variable = { which = kuat_fleet_id value >= 1 } }
							set_variable = { which = kuat_fleet_id value = 0 } clear_variable = kuat_fleet_id
						}
					}
					remove_fleet_flag = kuat_cannot_find_path
				}
			}
			find_closest_system = {
				trigger = {
					id = executor.20
					any_fleet_in_system = { owner = { kuat_is_crisis_faction = yes } }
					prev = { can_access_system = prev }
					check_variable = { which = kuat_fleet_id value < 1 }
				}
				found_system = {
					effect = {
						id = executor.20.a1
						set_variable = { which = kuat_fleet_id value = prev.fleet_id }
					}
					move_to = this
					repeat = {
						while = {
							id = executor.20.a
							any_fleet_in_system = { owner = { kuat_is_crisis_faction = yes } }
						}
						move_to = this wait = 5
					} 
					wait = 15
				}
				failed = {
					find_closest_system = {
						trigger = {
							id = executor.21
							any_fleet_in_system = { owner = { kuat_is_crisis_faction = yes } }
							prev = { can_access_system = prev }
						}
						found_system = { 
							move_to = this
							repeat = {
								while = {
									id = executor.21.a
									any_fleet_in_system = { owner = { kuat_is_crisis_faction = yes } }
								}
								move_to = this wait = 5
							} 
							wait = 15
						}
						failed = { effect = { id = executor.23 ROOT = { set_fleet_flag = kuat_cannot_find_path } } wait = 60 }
					}
				}
			}
		}
	}
}

#ETERNAL GUARDIAN GIENT MACHINE ACTION 
kuat_eternal_guardian_fleet_action = {
	queue_actions = { repeat = {
		effect = {
			id = ag_kae_ge_invasion.218.jump
			if = {
				limit = { has_fleet_flag = eternal_findout_path }
				if = {
					limit = { any_system = {
						NOT = { has_star_flag = ag_kae_e_area_system }
						any_fleet_in_system = { exists = owner owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country } }
					} }
					random_system = {
						limit = {
							NOT = { has_star_flag = ag_kae_e_area_system }
							any_fleet_in_system = { exists = owner owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country } }
						}
						random_system_planet = { ROOT = { set_location = { target = PREV distance = 5 angle = random } } }
					}
				}
				else = { clear_fleet_actions = this clear_orders = yes set_fleet_flag = kuat_disable_fleet_action_order }
				remove_fleet_flag = eternal_findout_path
			}
		}
		find_closest_system = {
			trigger = {
				id = ag_kae_ge_invasion.218.attack1
				NOT = { has_star_flag = ag_kae_e_area_system }
				distance = { source = root type = hyperlane max_jumps = 1 }
				any_fleet_in_system = { exists = owner owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country } }
				ROOT = { can_access_system = prev }
			}
			found_system = { move_to = this wait = 3 }
			failed = { find_closest_system = {
				trigger = {
					id = ag_kae_ge_invasion.218.attack2
					NOT = { has_star_flag = ag_kae_e_area_system }
					distance = { source = root type = hyperlane max_jumps = 2 }
					any_fleet_in_system = { exists = owner owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country } }
					ROOT = { can_access_system = prev }
				}
				found_system = { move_to = this wait = 3 }
				failed = { find_closest_system = {
					trigger = {
						id = ag_kae_ge_invasion.218.defender1
						is_same_value = event_target:zakuul_system
						distance = { source = root type = hyperlane max_jumps = 2 }
						any_fleet_in_system = { exists = owner owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country } }
					}
					found_system = { move_to = this wait = 3 }
					failed = { wait = 60 effect = { id = ag_kae_ge_invasion.218.e13 root = { set_fleet_flag = eternal_findout_path } } }
				} }
			} }
		}
	} }
}

#KUAT ETERNAL INVASION
kuat_kae_ge_jumpdrive_to_target = {
	optimize_memory
	every_owned_ship = { kuat_create_jump_particle_effect = yes }
	set_location = { target = prev distance = @ag_kae_ge_fleet_jumpdrive_to_target_distance angle = random }
	if = {
		limit = { prev = { is_scope_type = planet } }
		auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
	}
	else_if = {
		limit = { prev = { is_scope_type = fleet } }
		auto_follow_fleet = { target = prev attack_fleet = yes }
		#set_fleet_flag = kuat_disable_other_fleet_in_system
	}
}

kuat_kae_ge_assault_fleet_action = {
	optimize_memory
	if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = {
					any_system_planet = {
						OR = {
							AND = {
								exists = owner
								owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
							}
							AND = {
								exists = controller
								controller = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
							}
						}
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						NOT = { any_fleet_in_orbit = {
							exists = owner
							owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
							NOT = { is_same_value = root }
						} }
					}
				}
			}
		}
		root.solar_system = {
			random_system_planet = {
				limit = {
					OR = {
						AND = {
							exists = owner
							owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
						}
						AND = {
							exists = controller
							controller = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
						}
					}
					OR = {
						is_colony = yes
						is_under_colonization = yes
					}
					NOT = { any_fleet_in_orbit = {
						exists = owner
						owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
						NOT = { is_same_value = root }
					} }
				}
				prevprev = {
					auto_move_to_planet = {
						target = prev
						clear_auto_move_on_arrival = yes
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = {
					any_ship_in_system = {
						is_disabled = no
						is_ship_class = shipclass_military
						exists = owner
						owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
					}
				}
			}
		}
		root.solar_system = {
			random_fleet_in_system = {
				limit = {
					exists = owner
					owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
					any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
				}
				prevprev = { 
					auto_follow_fleet = { target = prev attack_fleet = yes }
					#set_fleet_flag = kuat_disable_other_fleet_in_system
				}
			}
		}
	}
	else_if = {
		limit = {
			root = { exists = solar_system }
			root.solar_system = { has_star_flag = ag_kae_e_area_system }
			any_system = {
				if = {
					limit = { root.solar_system = {
						count_fleet_in_system = { limit = { has_fleet_flag = ag_kae_ge_assault_fleet } count > 3 }
					} }
					NOT = { has_star_flag = ag_kae_e_area_system }
					exists = owner
					owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
				}
				else = {
					NOT = { has_star_flag = ag_kae_e_area_system }
					any_ship_in_system = { is_ship_size = exe_megastructure_starbase }
				}
			}
		}
		random_system = {
			limit = {
				if = {
					limit = { root.solar_system = {
						count_fleet_in_system = { limit = { has_fleet_flag = ag_kae_ge_assault_fleet } count > 3 }
					} }
					NOT = { has_star_flag = ag_kae_e_area_system }
					exists = owner
					owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country }
				}
				else = { 
					NOT = { has_star_flag = ag_kae_e_area_system }
					any_ship_in_system = { is_ship_size = exe_megastructure_starbase }
				}
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
			}
		}
	}
	else_if = {
		limit = {
			root = { exists = solar_system }
			root.solar_system = { any_neighbor_system = {
				exists = starbase
				starbase = { exists = owner owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country } }
			} }
		}
		root.solar_system = {
			random_neighbor_system = {
				limit = {
					exists = starbase
					starbase = { exists = owner owner = { is_hostile = event_target:Kuat_Galatic_Empire_invasion_country } }
				}
				random_system_planet = {
					limit = { is_primary_star = yes }
					prevprevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
				}
			}
		}
	}
	else_if = {
		limit = { always = yes }
		random_list = {
			25 = {
				closest_system = {
					use_bypasses = yes
					max_steps = 15
					limit = {
						NOT = { is_same_value = root.solar_system }
						OR = {
							AND = {
								exists = starbase
								starbase = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
								}
							}
							any_system_planet = {
								exists = owner
								owner = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
								exists = controller
								controller = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								NOT = { any_fleet_in_orbit = {
									exists = owner
									owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = ag_kae_ge_assault_fleet_action_target
				}
				if = {
					limit = {
						exists = event_target:ag_kae_ge_assault_fleet_action_target
					}
					event_target:ag_kae_ge_assault_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									exists = controller
									controller = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									exists = controller
									controller = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = {
										any_fleet_in_orbit = {
											exists = owner
											owner = {
												is_same_value = event_target:Kuat_Galatic_Empire_invasion_country
											}
											NOT = { is_same_value = root }
										}
									}
								}
								random_list = {
									75 = {
										prevprev = {
											auto_move_to_planet = {
												target = prev
												clear_auto_move_on_arrival = yes
											}
										}
									}
									25 = {
										modifier = {
											factor = 0
											prevprev = {
												any_owned_ship = {
													has_ship_flag = kuat_jump_drive_cooldown
												}
											}
										}
										prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
									}
								}
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_primary_star = yes
								}
								prevprev = {
									auto_move_to_planet = {
										target = prev
										clear_auto_move_on_arrival = yes
									}
								}
							}
						}
					}
				}
				else = {
					closest_system = {
						use_bypasses = yes
						max_steps = 15
						limit = {
							NOT = { is_same_value = root.solar_system }
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = owner
										owner = {
											is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
										}
									}
								}
								any_system_planet = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									exists = controller
									controller = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = ag_kae_ge_assault_fleet_action_target
					}
					if = {
						limit = {
							exists = event_target:ag_kae_ge_assault_fleet_action_target
						}
						random_list = {
							25 = {
								modifier = {
									factor = 0
									any_owned_ship = {
										has_ship_flag = kuat_jump_drive_cooldown
									}
								}
								event_target:ag_kae_ge_assault_fleet_action_target = {
									if = {
										limit = {
											any_system_planet = {
												exists = owner
												owner = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												exists = controller
												controller = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												NOT = { any_fleet_in_orbit = {
													exists = owner
													owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
													NOT = { is_same_value = root }
												} }
											}
										}
										random_system_planet = {
											limit = {
												exists = owner
												owner = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												exists = controller
												controller = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												NOT = { any_fleet_in_orbit = {
													exists = owner
													owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
													NOT = { is_same_value = root }
												} }
											}
											prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
										}
									}
									else = {
										random_system_planet = {
											limit = {
												is_primary_star = yes
											}
											prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
										}
									}
								}
							}
							75 = {
								fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
							}
						}
					}
					else = {
						fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
					}
				}
			}
			25 = {
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 15
						}
						OR = {
							AND = {
								exists = starbase
								starbase = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
								}
							}
							any_system_planet = {
								exists = owner
								owner = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
								exists = controller
								controller = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								NOT = { any_fleet_in_orbit = {
									exists = owner
									owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = ag_kae_ge_assault_fleet_action_target
				}
				if = {
					limit = {
						exists = event_target:ag_kae_ge_assault_fleet_action_target
					}
					event_target:ag_kae_ge_assault_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									exists = controller
									controller = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									exists = controller
									controller = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = {
										any_fleet_in_orbit = {
											exists = owner
											owner = {
												is_same_value = event_target:Kuat_Galatic_Empire_invasion_country
											}
											NOT = { is_same_value = root }
										}
									}
								}
								random_list = {
									75 = {
										prevprev = {
											auto_move_to_planet = {
												target = prev
												clear_auto_move_on_arrival = yes
											}
										}
									}
									25 = {
										modifier = {
											factor = 0
											prevprev = {
												any_owned_ship = {
													has_ship_flag = kuat_jump_drive_cooldown
												}
											}
										}
										prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
									}
								}
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_primary_star = yes
								}
								prevprev = {
									auto_move_to_planet = {
										target = prev
										clear_auto_move_on_arrival = yes
									}
								}
							}
						}
					}
				}
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 15
							}
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = owner
										owner = {
											is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
										}
									}
								}
								any_system_planet = {
									exists = owner
									owner = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									exists = controller
									controller = {
										is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
									}
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									NOT = { any_fleet_in_orbit = {
										exists = owner
										owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = ag_kae_ge_assault_fleet_action_target
					}
					if = {
						limit = {
							exists = event_target:ag_kae_ge_assault_fleet_action_target
						}
						random_list = {
							25 = {
								modifier = {
									factor = 0
									any_owned_ship = {
										has_ship_flag = kuat_jump_drive_cooldown
									}
								}
								event_target:ag_kae_ge_assault_fleet_action_target = {
									if = {
										limit = {
											any_system_planet = {
												exists = owner
												owner = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												exists = controller
												controller = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												NOT = { any_fleet_in_orbit = {
													exists = owner
													owner = { is_same_value = event_target:Kuat_Galatic_Empire_invasion_country }
													NOT = { is_same_value = root }
												} }
											}
										}
										random_system_planet = {
											limit = {
												exists = owner
												owner = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												exists = controller
												controller = {
													is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
												}
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												NOT = {
													any_fleet_in_orbit = {
														exists = owner
														owner = {
															is_same_value = event_target:Kuat_Galatic_Empire_invasion_country
														}
														NOT = { is_same_value = root }
													}
												}
											}
											prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
										}
									}
									else = {
										random_system_planet = {
											limit = {
												is_primary_star = yes
											}
											prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
										}
									}
								}
							}
							75 = {
								fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
							}
						}
					}
					else = {
						fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
					}
				}
			}
			25 = {
				closest_system = {
					use_bypasses = yes
					max_steps = 15
					limit = {
						NOT = { is_same_value = root.solar_system }
						any_ship_in_system = {
							is_disabled = no
							is_ship_class = shipclass_military
							exists = owner
							owner = {
								is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = ag_kae_ge_assault_fleet_action_target
				}
				if = {
					limit = {
						exists = event_target:ag_kae_ge_assault_fleet_action_target
					}
					event_target:ag_kae_ge_assault_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = owner
								owner = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
								any_owned_ship = {
									is_disabled = no
									is_ship_class = shipclass_military
								}
							}
							random_list = {
								75 = {
									prevprev = { 
										auto_follow_fleet = { target = prev attack_fleet = yes } 
										#set_fleet_flag = kuat_disable_other_fleet_in_system
									}
								}
								25 = {
									modifier = {
										factor = 0
										prevprev = {
											any_owned_ship = {
												has_ship_flag = kuat_jump_drive_cooldown
											}
										}
									}
									prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
								}
							}
						}
					}
				}
				else = {
					closest_system = {
						use_bypasses = yes
						max_steps = 15
						limit = {
							NOT = { is_same_value = root.solar_system }
							any_ship_in_system = {
								is_disabled = no
								is_ship_class = shipclass_military
								exists = owner
								owner = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
							}
						}
						save_event_target_as = ag_kae_ge_assault_fleet_action_target
					}
					if = {
						limit = {
							exists = event_target:ag_kae_ge_assault_fleet_action_target
						}
						random_list = {
							25 = {
								modifier = {
									factor = 0
									any_owned_ship = {
										has_ship_flag = kuat_jump_drive_cooldown
									}
								}
								event_target:ag_kae_ge_assault_fleet_action_target = {
									random_fleet_in_system = {
										limit = {
											exists = owner
											owner = {
												is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
											}
											any_owned_ship = {
												is_disabled = no
												is_ship_class = shipclass_military
											}
										}
										prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
									}
								}
							}
							75 = {
								fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
							}
						}
					}
					else = {
						fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
					}
				}
			}
			25 = {
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 15
						}
						any_ship_in_system = {
							is_disabled = no
							is_ship_class = shipclass_military
							exists = owner
							owner = {
								is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = ag_kae_ge_assault_fleet_action_target
				}
				if = {
					limit = {
						exists = event_target:ag_kae_ge_assault_fleet_action_target
					}
					event_target:ag_kae_ge_assault_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = owner
								owner = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
								any_owned_ship = {
									is_disabled = no
									is_ship_class = shipclass_military
								}
							}
							random_list = {
								75 = {
									prevprev = { 
										auto_follow_fleet = { target = prev attack_fleet = yes } 
									}
								}
								25 = {
									modifier = {
										factor = 0
										prevprev = {
											any_owned_ship = {
												has_ship_flag = kuat_jump_drive_cooldown
											}
										}
									}
									prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
								}
							}
						}
					}
				}
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 15
							}
							any_ship_in_system = {
								is_disabled = no
								is_ship_class = shipclass_military
								exists = owner
								owner = {
									is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
								}
							}
						}
						save_event_target_as = ag_kae_ge_assault_fleet_action_target
					}
					if = {
						limit = {
							exists = event_target:ag_kae_ge_assault_fleet_action_target
						}
						random_list = {
							25 = {
								modifier = {
									factor = 0
									any_owned_ship = {
										has_ship_flag = kuat_jump_drive_cooldown
									}
								}
								event_target:ag_kae_ge_assault_fleet_action_target = {
									random_fleet_in_system = {
										limit = {
											exists = owner
											owner = {
												is_hostile = event_target:Kuat_Galatic_Empire_invasion_country
											}
											any_owned_ship = {
												is_disabled = no
												is_ship_class = shipclass_military
											}
										}
										prevprev = { kuat_kae_ge_jumpdrive_to_target = yes }
									}
								}
							}
							75 = {
								fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
							}
						}
					}
					else = {
						fleet_event = { id = ag_kae_ge_invasion.241 days = 10 random = 10 }
					}
				}
			}
		}
	}
}

# scope: fleet
# prev: eternal country
# prevprev: system
eternal_player_fleet_order_1 = {
	optimize_memory
	queue_actions = {
		wait = 2
		repeat = {
			find_closest_planet = {
				trigger = {
					id = executing_eternal_fleet.1
					OR = {
						AND = {
							is_colony = yes exists = owner
							owner = { is_hostile = event_target:eternal_support_country }
						}
						AND = {
							is_star = yes
							solar_system = {
								any_fleet_in_system = {
									exists = owner
									owner = { is_hostile = event_target:eternal_support_country }
								}
							}
						}
					}
					solar_system = { is_same_value = prevprevprevprev }
				}
				found_planet = {
					orbit_planet = this
					effect = {
						id = executing_eternal_fleet.2
						if = {
							limit = { is_colony = yes }
							set_planet_flag = ruins_planet
							root = { set_fleet_flag = eternal_fallen_bombaring_fleet }
						}
					}
					repeat = {
						while = { 
							id = executing_eternal_fleet.3 
							root = { has_fleet_flag = eternal_fallen_bombaring_fleet } 
						}
						effect = {
							id = executing_eternal_fleet.4
							if = { 
								limit = { is_colony = no } 
								root = { remove_fleet_flag = eternal_fallen_bombaring_fleet } 
							}
						} 
						wait = 5
					}
				}
				failed = {
					wait = 60
					effect = {
						id = executing_eternal_fleet.5
						remove_fleet_flag = choosen_eternal_fleet
						remove_fleet_flag = executing_eternal_fleet
						clear_orders = yes
						clear_fleet_actions = this
						event_target:Eternalempire = {
							if = {
								limit = { has_country_flag = eternal_fleet_destroy_enenmy }
								event_target:eternal_support_country = { 
									subtract_variable = { which = list_owned_eternal_fleet value = 1 } 
									change_variable = { which = mission_finished_eternal_fleet value = 1 }
								}
								if = {
									limit = { event_target:eternal_support_country = { OR = {
										check_variable = { which = list_owned_eternal_fleet value <= 0 } 
										check_variable = { which = mission_finished_eternal_fleet value >= mission_pending_eternal_fleet }
									} } }
									set_timed_country_flag = { flag = have_been_ordered_eternal_fleet days = 1800 } 
									country_event = { id = kuat_starkiller.18 }
									event_target:eternal_support_country = {
										clear_variable = list_owned_eternal_fleet
										clear_variable = page_owned_eternal_fleet
										clear_variable = count_eternal_center_target
										clear_variable = mission_pending_eternal_fleet
										clear_variable = mission_finished_eternal_fleet
										every_owned_fleet = { remove_fleet_flag = choosen_eternal_fleet }
									}
								}
							}
							if = {
								limit = { has_country_flag = eternal_fleet_attack_enenmy }
								set_timed_country_flag = { flag = have_been_ordered_eternal_fleet days = 360 } 
								country_event = { id = kuat_starkiller.18 }
							}
						}
						set_location = event_target:zakuul_system.system_star
					}
				}
			}
		}
	}
}

#paramater : ID(EVENT) TYPE OWNER(CRISIS)
kuat_exe_auto_fleet_action = {
	optimize_memory
	# 寻找所在星系内敌对军事舰船
	if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = { any_ship_in_system = {
					exists = controller
					controller = { is_at_war_with = $OWNER$ }
					is_disabled = no is_ship_class = shipclass_military
				} }
			}
		}
		root = {
			solar_system = {
				random_fleet_in_system = {
					limit = {
						exists = controller
						controller = { is_at_war_with = $OWNER$ }
						any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
					}
					prevprev = { auto_follow_fleet = { target = prev attack_fleet = yes } }
				}
			}
		}
	}
	# 寻找所在星系目前没有己方单位的敌对星球
	else_if = {
		limit = {
			root = {
				exists = solar_system
				solar_system = {
					any_system_planet = {
						exists = controller
						controller = { is_at_war_with = $OWNER$ }
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						count_fleet_in_orbit = { count = 0 limit = {
							exists = controller
							controller = { is_same_value = event_target:$OWNER$ }
							NOT = { is_same_value = root }
						} }
					}
				}
			}
		}
		root = {
			solar_system = {
				random_system_planet = {
					limit = {
						exists = controller
						controller = { is_at_war_with = $OWNER$ }
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
						count_fleet_in_orbit = { count = 0 limit = {
							exists = controller
							controller = { is_same_value = event_target:$OWNER$ }
							NOT = { is_same_value = root }
						} }
					}
					prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
				}
			}
		}
	}
	# 寻找周围星系有无敌对单位
	else_if = {
		limit = {
			solar_system = { any_neighbor_system = { OR = {
				AND = {
					exists = starbase
					starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
				}
				any_ship_in_system = {
					exists = controller
					controller = { is_at_war_with = $OWNER$ }
					is_disabled = no is_ship_class = shipclass_military
				}
			} } }
		}
		solar_system = { random_neighbor_system = {
			limit = { OR = {
				AND = {
					exists = starbase
					starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
				}
				any_ship_in_system = {
					exists = controller
					controller = { is_at_war_with = $OWNER$ }
					is_disabled = no is_ship_class = shipclass_military
				}
			} }
			system_star = { prevprevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
		} }
	}
	# 自主行为启动
	else = {
		random_list = {
			# 25%概率寻找50步内的敌对星系作为目标
			25 = {
				#开始找目标
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						OR = {
							AND = {
								exists = starbase
								starbase = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
								}
							}
							any_system_planet = {
								exists = controller
								controller = { is_at_war_with = $OWNER$ }
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								count_fleet_in_orbit = { count = 0 limit = {
									exists = controller
									controller = { is_same_value = event_target:$OWNER$ }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = controller
										controller = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = controller
										controller = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
								kuat_exe_invasion_jump_drive_planet_action = yes
							}
						}
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				}
				#找不到目标，再找一次
				else = {
					#开始找目标
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = controller
										controller = { is_at_war_with = $OWNER$ }
									}
								}
								any_system_planet = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = controller
										controller = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										exists = controller
										controller = { is_at_war_with = $OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = controller
											controller = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
								}
								random_system_planet = {
									limit = {
										exists = controller
										controller = { is_at_war_with = $OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = controller
											controller = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
									kuat_exe_invasion_jump_drive_planet_action = yes
								}
							}
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					}
					#找不到目标，摆烂了，开始转圈
					else = {
						clear_orders = yes
						clear_fleet_actions = this
						random_list = {
							#周围星系随机设置目标
							75 = {
								solar_system = { random_neighbor_system = {
									limit = { prevprev = { can_access_system = prev } }
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								} }
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else_if = {
									limit = { any_system = {
										prev = { can_access_system = prev }
									} }
									random_system = {
										limit = { prev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									}
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else = {
									log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
									change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
								}
							}
							#找任意一个敌对目标，紧急跃迁，不需要debuff
							25 = {
								modifier = {
									mult = 0
									any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown }
								}
								modifier = {
									mult = $TYPE$_fleet_none_target_var
									is_variable_set = $TYPE$_fleet_none_target_var
								}
								clear_variable = $TYPE$_fleet_none_target_var
								random_system = {
									limit = {
										NOT = { is_same_value = prev.solar_system }
										OR = {
											AND = {
												exists = starbase
												starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
											}
											any_system_planet = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												count_fleet_in_orbit = { count = 0 limit = {
													exists = controller
													controller = { is_same_value = event_target:$OWNER$ }
													NOT = { is_same_value = root }
												} }
											}
											any_ship_in_system = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												is_disabled = no is_ship_class = shipclass_military
											}
										}
									}
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								}
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										random_system_planet = {
											limit = { is_primary_star = yes }
											prevprev = {
												set_location = { target = prev distance = 300 angle = random }
												every_owned_ship = { kuat_create_jump_particle_effect = yes }
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
									}
								}
								else = {
									solar_system = { random_neighbor_system = {
										limit = { prevprev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									} }
									if = {
										limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else_if = {
										limit = { any_system = {
											prev = { can_access_system = prev }
										} }
										random_system = {
											limit = { prev = { can_access_system = prev } }
											save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
										}
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else = {
										log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
										change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
									}
								}
							}
						}
					}
				}
			}
			25 = {
				# 25%概率去找10跳以内的空间站或者星球舰队
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						OR = {
							AND = {
								exists = starbase
								starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
							}
							any_system_planet = {
								exists = controller
								controller = { is_at_war_with = $OWNER$ }
								OR = {
									is_colony = yes
									is_under_colonization = yes
								}
								count_fleet_in_orbit = { count = 0 limit = {
									exists = controller
									controller = { is_same_value = event_target:$OWNER$ }
									NOT = { is_same_value = root }
								} }
							}
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = controller
										controller = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
							random_system_planet = {
								limit = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = controller
										controller = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
								kuat_exe_invasion_jump_drive_planet_action = yes
							}
						}
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				}
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							OR = {
								AND = {
									exists = starbase
									starbase = {
										exists = controller
										controller = { is_at_war_with = $OWNER$ }
									}
								}
								any_system_planet = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									OR = {
										is_colony = yes
										is_under_colonization = yes
									}
									count_fleet_in_orbit = { count = 0 limit = {
										exists = controller
										controller = { is_same_value = event_target:$OWNER$ }
										NOT = { is_same_value = root }
									} }
								}
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										exists = controller
										controller = { is_at_war_with = $OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = controller
											controller = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
								}
								random_system_planet = {
									limit = {
										exists = controller
										controller = { is_at_war_with = $OWNER$ }
										OR = {
											is_colony = yes
											is_under_colonization = yes
										}
										count_fleet_in_orbit = { count = 0 limit = {
											exists = controller
											controller = { is_same_value = event_target:$OWNER$ }
											NOT = { is_same_value = root }
										} }
									}
									kuat_exe_invasion_jump_drive_planet_action = yes
								}
							}
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					}
					#找不到目标，摆烂了，开始转圈
					else = {
						clear_orders = yes
						clear_fleet_actions = this
						random_list = {
							#周围星系随机设置目标
							75 = {
								solar_system = { random_neighbor_system = {
									limit = { prevprev = { can_access_system = prev } }
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								} }
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else_if = {
									limit = { any_system = {
										prev = { can_access_system = prev }
									} }
									random_system = {
										limit = { prev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									}
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else = {
									log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
									change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
								}
							}
							#找任意一个敌对目标，紧急跃迁，不需要debuff
							25 = {
								modifier = {
									mult = 0
									any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown }
								}
								modifier = {
									mult = $TYPE$_fleet_none_target_var
									is_variable_set = $TYPE$_fleet_none_target_var
								}
								clear_variable = $TYPE$_fleet_none_target_var
								random_system = {
									limit = {
										NOT = { is_same_value = prev.solar_system }
										OR = {
											AND = {
												exists = starbase
												starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
											}
											any_system_planet = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												count_fleet_in_orbit = { count = 0 limit = {
													exists = controller
													controller = { is_same_value = event_target:$OWNER$ }
													NOT = { is_same_value = root }
												} }
											}
											any_ship_in_system = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												is_disabled = no is_ship_class = shipclass_military
											}
										}
									}
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								}
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										random_system_planet = {
											limit = { is_primary_star = yes }
											prevprev = {
												set_location = { target = prev distance = 300 angle = random }
												every_owned_ship = { kuat_create_jump_particle_effect = yes }
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
									}
								}
								else = {
									solar_system = { random_neighbor_system = {
										limit = { prevprev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									} }
									if = {
										limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else_if = {
										limit = { any_system = {
											prev = { can_access_system = prev }
										} }
										random_system = {
											limit = { prev = { can_access_system = prev } }
											save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
										}
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else = {
										log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
										change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
									}
								}
							}
						}
					}
				}
			}
			25 = {
				# 25%概率找50跳内未停用的敌对舰船
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						any_ship_in_system = {
							exists = controller
							controller = { is_at_war_with = $OWNER$ }
							is_disabled = no is_ship_class = shipclass_military
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = controller
								controller = { is_at_war_with = $OWNER$ }
								any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
							}
							kuat_exe_invasion_jump_drive_fleet_action = yes
						}
					}
				}
				#找不到目标，再找一次
				else = {
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							any_ship_in_system = {
								exists = controller
								controller = { is_at_war_with = $OWNER$ }
								is_disabled = no is_ship_class = shipclass_military
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							random_fleet_in_system = {
								limit = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
								}
								kuat_exe_invasion_jump_drive_fleet_action = yes
							}
						}
					}
					#找不到目标，摆烂了，开始转圈
					else = {
						clear_orders = yes
						clear_fleet_actions = this
						random_list = {
							#周围星系随机设置目标
							75 = {
								solar_system = { random_neighbor_system = {
									limit = { prevprev = { can_access_system = prev } }
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								} }
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else_if = {
									limit = { any_system = {
										prev = { can_access_system = prev }
									} }
									random_system = {
										limit = { prev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									}
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else = {
									log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
									change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
								}
							}
							#找任意一个敌对目标，紧急跃迁，不需要debuff
							25 = {
								modifier = {
									mult = 0
									any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown }
								}
								modifier = {
									mult = $TYPE$_fleet_none_target_var
									is_variable_set = $TYPE$_fleet_none_target_var
								}
								clear_variable = $TYPE$_fleet_none_target_var
								random_system = {
									limit = {
										NOT = { is_same_value = prev.solar_system }
										OR = {
											AND = {
												exists = starbase
												starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
											}
											any_system_planet = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												count_fleet_in_orbit = { count = 0 limit = {
													exists = controller
													controller = { is_same_value = event_target:$OWNER$ }
													NOT = { is_same_value = root }
												} }
											}
											any_ship_in_system = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												is_disabled = no is_ship_class = shipclass_military
											}
										}
									}
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								}
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										random_system_planet = {
											limit = { is_primary_star = yes }
											prevprev = {
												set_location = { target = prev distance = 300 angle = random }
												every_owned_ship = { kuat_create_jump_particle_effect = yes }
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
									}
								}
								else = {
									solar_system = { random_neighbor_system = {
										limit = { prevprev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									} }
									if = {
										limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else_if = {
										limit = { any_system = {
											prev = { can_access_system = prev }
										} }
										random_system = {
											limit = { prev = { can_access_system = prev } }
											save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
										}
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else = {
										log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
										change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
									}
								}
							}
						}
					}
				}
			}
			25 = {
				# 25%概率找10跳内未停用的敌对舰船
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						any_ship_in_system = {
							exists = controller
							controller = { is_at_war_with = $OWNER$ }
							is_disabled = no is_ship_class = shipclass_military
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						random_fleet_in_system = {
							limit = {
								exists = controller
								controller = { is_at_war_with = $OWNER$ }
								any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
							}
							kuat_exe_invasion_jump_drive_fleet_action = yes
						}
					}
				}
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							any_ship_in_system = {
								exists = controller
								controller = { is_at_war_with = $OWNER$ }
								is_disabled = no is_ship_class = shipclass_military
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							random_fleet_in_system = {
								limit = {
									exists = controller
									controller = { is_at_war_with = $OWNER$ }
									any_owned_ship = { is_disabled = no is_ship_class = shipclass_military }
								}
								kuat_exe_invasion_jump_drive_fleet_action = yes
							}
						}
					}
					#找不到目标，摆烂了，开始转圈
					else = {
						clear_orders = yes
						clear_fleet_actions = this
						random_list = {
							#周围星系随机设置目标
							75 = {
								solar_system = { random_neighbor_system = {
									limit = { prevprev = { can_access_system = prev } }
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								} }
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else_if = {
									limit = { any_system = {
										prev = { can_access_system = prev }
									} }
									random_system = {
										limit = { prev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									}
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
									}
								}
								else = {
									log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
									change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
								}
							}
							#找任意一个敌对目标，紧急跃迁，不需要debuff
							25 = {
								modifier = {
									mult = 0
									any_owned_ship = { has_ship_flag = kuat_jump_drive_cooldown }
								}
								modifier = {
									mult = $TYPE$_fleet_none_target_var
									is_variable_set = $TYPE$_fleet_none_target_var
								}
								clear_variable = $TYPE$_fleet_none_target_var
								random_system = {
									limit = {
										NOT = { is_same_value = prev.solar_system }
										OR = {
											AND = {
												exists = starbase
												starbase = { exists = controller controller = { is_at_war_with = $OWNER$ } }
											}
											any_system_planet = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												OR = {
													is_colony = yes
													is_under_colonization = yes
												}
												count_fleet_in_orbit = { count = 0 limit = {
													exists = controller
													controller = { is_same_value = event_target:$OWNER$ }
													NOT = { is_same_value = root }
												} }
											}
											any_ship_in_system = {
												exists = controller
												controller = { is_at_war_with = $OWNER$ }
												is_disabled = no is_ship_class = shipclass_military
											}
										}
									}
									save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
								}
								if = {
									limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
									event_target:$TYPE$_invasion_fleet_wandering_action_target = {
										random_system_planet = {
											limit = { is_primary_star = yes }
											prevprev = {
												set_location = { target = prev distance = 300 angle = random }
												every_owned_ship = { kuat_create_jump_particle_effect = yes }
												auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
											}
										}
									}
								}
								else = {
									solar_system = { random_neighbor_system = {
										limit = { prevprev = { can_access_system = prev } }
										save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
									} }
									if = {
										limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else_if = {
										limit = { any_system = {
											prev = { can_access_system = prev }
										} }
										random_system = {
											limit = { prev = { can_access_system = prev } }
											save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
										}
										event_target:$TYPE$_invasion_fleet_wandering_action_target = {
											system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
										}
									}
									else = {
										log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
										change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
									}
								}
							}
						}
					}
				}
			}
		}
	}
}